var pw=(n,e,t)=>{if(!e.has(n))throw TypeError("Cannot "+t)};var Kp=(n,e,t)=>{if(e.has(n))throw TypeError("Cannot add the same private member more than once");e instanceof WeakSet?e.add(n):e.set(n,t)};var Xp=(n,e,t)=>(pw(n,e,"access private method"),t);function fw(n,e){for(var t=0;t<e.length;t++){const r=e[t];if(typeof r!="string"&&!Array.isArray(r)){for(const s in r)if(s!=="default"&&!(s in n)){const i=Object.getOwnPropertyDescriptor(r,s);i&&Object.defineProperty(n,s,i.get?i:{enumerable:!0,get:()=>r[s]})}}}return Object.freeze(Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}))}(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))r(s);new MutationObserver(s=>{for(const i of s)if(i.type==="childList")for(const o of i.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&r(o)}).observe(document,{childList:!0,subtree:!0});function t(s){const i={};return s.integrity&&(i.integrity=s.integrity),s.referrerpolicy&&(i.referrerPolicy=s.referrerpolicy),s.crossorigin==="use-credentials"?i.credentials="include":s.crossorigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function r(s){if(s.ep)return;s.ep=!0;const i=t(s);fetch(s.href,i)}})();/*!
 * AnimationFramer v0.0.1
 * https://github.com/ray-zero2/animation-framer
 * @license MIT
 * Copyright ray-zero2
 */var Me=function(){this.time=0,this.deltaTime=0,this.lastTimestamp=0,this.animationCount=0,this.animationId=null,this.animations=[]},Pu={animationList:{configurable:!0},currentTime:{configurable:!0}};Me.getInstance=function(){return Me.instance||(Me.instance=new Me),Me.instance};Me.getLerpCoeff=function(e,t,r){r===void 0&&(r=60);var s=t*r,i=1-Math.pow(1-e,s);return i};Pu.animationList.get=function(){return this.animations};Pu.currentTime.get=function(){return this.time};Me.prototype.getLerpCoeff=function(e,t){return t===void 0&&(t=60),Me.getLerpCoeff(e,this.deltaTime,t)};Me.prototype.add=function(e){var t,r=this.animationId!==null;r&&this.stop();var s=(t=e.order)!==null&&t!==void 0?t:this.animationCount;return this.animations.push(Object.assign(Object.assign({},e),{order:s})),this.sortAnimationsArray(),r&&this.start(),this.animationCount++,this};Me.prototype.remove=function(e){var t=this.animationId!==null;t&&this.stop();var r=this.animations.filter(function(s){return s.id!==e});return this.animations=r,t&&this.start(),this};Me.prototype.removeAll=function(){return this.stop(),this.animations=[],this.animationCount=0,this};Me.prototype.start=function(){this.lastTimestamp=performance.now(),this.animate()};Me.prototype.stop=function(){this.animationId&&cancelAnimationFrame(this.animationId),this.lastTimestamp=0,this.animationId=null};Me.prototype.reset=function(e){e===void 0&&(e=!0),this.stop(),this.time=0,e&&this.removeAll()};Me.prototype.reorder=function(){this.sortAnimationsArray();var e=this.animations.map(function(t,r){return Object.assign(Object.assign({},t),{order:r})});this.animationCount=e.length,this.animations=e};Me.prototype.animate=function(){var e=this,t=performance.now();this.animationId=requestAnimationFrame(this.animate.bind(this)),this.deltaTime=(t-this.lastTimestamp)*.001,this.time+=this.deltaTime,this.animations.forEach(function(r){r.update({deltaTime:e.deltaTime,time:e.time})}),this.lastTimestamp=t};Me.prototype.sortAnimationsArray=function(){this.animations.sort(function(e,t){return e.order-t.order})};Object.defineProperties(Me.prototype,Pu);Me.instance=null;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mw=1e-7,gw=1e-4;class Mm{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class Lu{refCount(e){return yt("refCount")}incRef(e){return yt("incRef")}timerAvailable(){return!0}time(e){return yt("time")}read(e){return yt("read")}readSync(e){return yt("readSync")}readToGPU(e,t){return yt("readToGPU")}numDataIds(){return yt("numDataIds")}disposeData(e,t){return yt("disposeData")}write(e,t,r){return yt("write")}move(e,t,r,s,i){return yt("move")}createTensorFromTexture(e,t,r){return yt("createTensorFromTexture")}memory(){return yt("memory")}floatPrecision(){return yt("floatPrecision")}epsilon(){return this.floatPrecision()===32?mw:gw}dispose(){return yt("dispose")}}function yt(n){throw new Error(`'${n}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vm(n){let e=n.length,t=0;for(;e>0;)t=Math.random()*e|0,e--,Nn(n,e,t)}function yw(n,e){if(n.length!==e.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${n.length}Second array length was ${e.length}`);let t=n.length,r=0;for(;t>0;)r=Math.random()*t|0,t--,Nn(n,t,r),Nn(e,t,r)}function Ps(n,e,t){return Math.max(n,Math.min(e,t))}function To(n){return n%2===0?n:n+1}function Nn(n,e,t){const r=n[e];n[e]=n[t],n[t]=r}function Um(n){let e=0;for(let t=0;t<n.length;t++)e+=n[t];return e}function xw(n,e){const t=Math.random();return e*t+(1-t)*n}function bw(n,e){let t=0;for(let r=0;r<n.length;r++){const s=Number(n[r])-Number(e[r]);t+=s*s}return t}function N(n,e){if(!n)throw new Error(typeof e=="string"?e:e())}function Je(n,e,t=""){N(Oe(n,e),()=>t+` Shapes ${n} and ${e} must match`)}function kr(n){N(n!=null,()=>"The input to the tensor constructor must be a non-null value.")}function An(n,e=[],t=!1){if(e==null&&(e=[]),Array.isArray(n)||Qe(n)&&!t)for(let r=0;r<n.length;++r)An(n[r],e,t);else e.push(n);return e}function q(n){if(n.length===0)return 1;let e=n[0];for(let t=1;t<n.length;t++)e*=n[t];return e}function ww(n){return n.length===0}function Oe(n,e){if(n===e)return!0;if(n==null||e==null||n.length!==e.length)return!1;for(let t=0;t<n.length;t++)if(n[t]!==e[t])return!1;return!0}function br(n){return n%1===0}function vw(n){if(Math.tanh!=null)return Math.tanh(n);if(n===1/0)return 1;if(n===-1/0)return-1;{const e=Math.exp(2*n);return(e-1)/(e+1)}}function Qi(n){const e=Math.ceil(Math.sqrt(n));return[e,Math.ceil(n/e)]}function $w(n){const e=new Uint32Array(n);for(let t=0;t<n;++t)e[t]=t;return Vm(e),e}function fr(n,e){return e<=n.length?n:n+" ".repeat(e-n.length)}function Ya(n,e=s=>0,t,r){return new Promise((s,i)=>{let o=0;const a=()=>{if(n()){s();return}o++;const u=e(o);if(t!=null&&o>=t){i();return}r!=null?r(a,u):setTimeout(a,u)};a()})}function zm(n,e){let t=1,r=-1;for(let i=0;i<n.length;++i)if(n[i]>=0)t*=n[i];else if(n[i]===-1){if(r!==-1)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${i}`);r=i}else if(n[i]<0)throw Error(`Shapes can not be < 0. Found ${n[i]} at dim ${i}`);if(r===-1){if(e>0&&e!==t)throw Error(`Size(${e}) must match the product of shape ${n}`);return n}if(t===0)throw Error(`Cannot infer the missing size in [${n}] when there are 0 elements`);if(e%t!==0)throw Error(`The implicit shape can't be a fractional number. Got ${e} / ${t}`);const s=n.slice();return s[r]=e/t,s}function Ve(n,e){const t=e.length;return n=n==null?e.map((r,s)=>s):[].concat(n),N(n.every(r=>r>=-t&&r<t),()=>`All values in axis param must be in range [-${t}, ${t}) but got axis ${n}`),N(n.every(r=>br(r)),()=>`All values in axis param must be integers but got axis ${n}`),n.map(r=>r<0?t+r:r)}function Fn(n,e){const t=[],r=[],s=e!=null&&Array.isArray(e)&&e.length===0,i=e==null||s?null:Ve(e,n).sort();let o=0;for(let a=0;a<n.length;++a){if(i!=null){if(i[o]===a&&n[a]!==1)throw new Error(`Can't squeeze axis ${a} since its dim '${n[a]}' is not 1`);(i[o]==null||i[o]>a)&&n[a]===1&&(t.push(n[a]),r.push(a)),i[o]<=a&&o++}n[a]!==1&&(t.push(n[a]),r.push(a))}return{newShape:t,keptDims:r}}function yn(n,e){let t=null;if(n==null||n==="float32")t=new Float32Array(e);else if(n==="int32")t=new Int32Array(e);else if(n==="bool")t=new Uint8Array(e);else throw new Error(`Unknown data type ${n}`);return t}function He(n,e){let t=null;if(n==null||n==="float32")t=new Float32Array(e);else if(n==="int32")t=new Int32Array(e);else if(n==="bool")t=new Uint8Array(e);else if(n==="string")t=new Array(e);else throw new Error(`Unknown data type ${n}`);return t}function Wm(n,e){for(let t=0;t<n.length;t++){const r=n[t];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${e} being uploaded contains ${r}.`)}}function Gm(n){return n==="bool"||n==="complex64"||n==="float32"||n==="int32"||n==="string"}function Hm(n,e){return!(e==="complex64"||e==="float32"&&n!=="complex64"||e==="int32"&&n!=="float32"&&n!=="complex64"||e==="bool"&&n==="bool")}function Qe(n){return n instanceof Float32Array||n instanceof Int32Array||n instanceof Uint8Array||n instanceof Uint8ClampedArray}function Zi(n){if(n==="float32"||n==="int32")return 4;if(n==="complex64")return 8;if(n==="bool")return 1;throw new Error(`Unknown dtype ${n}`)}function jm(n){if(n==null)return 0;let e=0;return n.forEach(t=>e+=t.length),e}function kn(n){return typeof n=="string"||n instanceof String}function qm(n){return typeof n=="boolean"}function Km(n){return typeof n=="number"}function Js(n){return Array.isArray(n)?Js(n[0]):n instanceof Float32Array?"float32":n instanceof Int32Array||n instanceof Uint8Array||n instanceof Uint8ClampedArray?"int32":Km(n)?"float32":kn(n)?"string":qm(n)?"bool":"float32"}function jn(n){return!!(n&&n.constructor&&n.call&&n.apply)}function Ji(n,e){for(let t=e;t<n;++t)if(n%t===0)return t;return n}function ze(n){const e=n.length;if(e<2)return[];const t=new Array(e-1);t[e-2]=n[e-1];for(let r=e-3;r>=0;--r)t[r]=t[r+1]*n[r+1];return t}function Xm(n,e,t,r=!1){const s=new Array;if(e.length===1){const i=e[0]*(r?2:1);for(let o=0;o<i;o++)s[o]=t[n+o]}else{const i=e[0],o=e.slice(1),a=o.reduce((u,l)=>u*l)*(r?2:1);for(let u=0;u<i;u++)s[u]=Xm(n+u*a,o,t,r)}return s}function mr(n,e,t=!1){if(n.length===0)return e[0];const r=n.reduce((s,i)=>s*i)*(t?2:1);if(r===0)return[];if(r!==e.length)throw new Error(`[${n}] does not match the input size ${e.length}${t?" for a complex tensor":""}.`);return Xm(0,n,e,t)}function Bu(n,e){const t=On(n,e);for(let r=0;r<t.length;r++)t[r]=1;return t}function On(n,e){if(e==null||e==="float32"||e==="complex64")return new Float32Array(n);if(e==="int32")return new Int32Array(n);if(e==="bool")return new Uint8Array(n);throw new Error(`Unknown data type ${e}`)}function Sw(n,e){const t=n.reduce((r,s)=>r*s,1);if(e==null||e==="float32")return mr(n,new Float32Array(t));if(e==="int32")return mr(n,new Int32Array(t));if(e==="bool")return mr(n,new Uint8Array(t));throw new Error(`Unknown data type ${e}`)}function Tt(n){n.forEach(e=>{N(Number.isInteger(e)&&e>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${n}].`)})}function eo(n,e,t){if(e===0)return 0;if(e===1)return n[0];let r=n[n.length-1];for(let s=0;s<n.length-1;++s)r+=t[s]*n[s];return r}function Co(n,e,t){if(e===0)return[];if(e===1)return[n];const r=new Array(e);for(let s=0;s<r.length-1;++s)r[s]=Math.floor(n/t[s]),n-=r[s]*t[s];return r[r.length-1]=n,r}function wr(n){return n&&n.then&&typeof n.then=="function"}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Yp="tfjsflags";class Ym{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=Tw,this.populateURLFlags()}setPlatform(e,t){this.platform!=null&&(B().getBool("IS_TEST")||B().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,r){if(this.flagRegistry[e]={evaluationFn:t,setHook:r},this.urlFlags[e]!=null){const s=this.urlFlags[e];B().getBool("IS_TEST")||B().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${s}.`),this.set(e,s)}}async getAsync(e){return e in this.flags?this.flags[e]:(this.flags[e]=await this.evaluateFlag(e),this.flags[e])}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(wr(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(this.flagRegistry[e]==null)throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,this.flagRegistry[e].setHook!=null&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(this.flagRegistry[e]==null)throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(typeof this.global>"u"||typeof this.global.location>"u"||typeof this.global.location.search>"u")return;const e=this.getQueryParams(this.global.location.search);Yp in e&&e[Yp].split(",").forEach(r=>{const[s,i]=r.split(":");this.urlFlags[s]=Ew(s,i)})}}function Tw(n){const e={};return n.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(t,...r)=>(Cw(e,r[0],r[1]),r.join("="))),e}function Cw(n,e,t){n[decodeURIComponent(e)]=decodeURIComponent(t||"")}function Ew(n,e){if(e=e.toLowerCase(),e==="true"||e==="false")return e==="true";if(`${+e}`===e)return+e;throw new Error(`Could not parse value flag value ${e} for flag ${n}.`)}function B(){return Mu}let Mu=null;function Nw(n){Mu=n}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let ka;function Qm(){if(ka==null){let n;if(typeof window<"u")n=window;else if(typeof global<"u")n=global;else if(typeof process<"u")n=process;else if(typeof self<"u")n=self;else throw new Error("Could not find a global object");ka=n}return ka}function Iw(){const n=Qm();return n._tfGlobals==null&&(n._tfGlobals=new Map),n._tfGlobals}function Vu(n,e){const t=Iw();if(t.has(n))return t.get(n);{const r=e();return t.set(n,r),t.get(n)}}const Uu="Abs",zu="Acos",Wu="Acosh",Eo="Add",Gu="AddN",Hu="All",ju="Any",qu="ArgMax",Ku="ArgMin",Xu="Asin",Yu="Asinh",Qu="Atan",Zu="Atanh",Ju="Atan2",el="AvgPool",Zm="AvgPoolGrad",tl="AvgPool3D",Jm="AvgPool3DGrad",nl="BatchMatMul",rl="BatchToSpaceND",sl="Bincount",kw="BroadcastTo",il="BroadcastArgs",No="Cast",ol="Ceil",al="ClipByValue",ul="Complex",ll="ComplexAbs",cl="Concat",hl="Conv2D",dl="Conv2DBackpropFilter",pl="Conv2DBackpropInput",fl="Conv3D",eg="Conv3DBackpropFilterV2",ml="Conv3DBackpropInputV2",gl="Cos",yl="Cosh",xl="Cumprod",bl="Cumsum",wl="CropAndResize",vl="DenseBincount",$l="DepthToSpace",Sl="DepthwiseConv2dNative",Tl="DepthwiseConv2dNativeBackpropFilter",Cl="DepthwiseConv2dNativeBackpropInput",El="Diag",Nl="Dilation2D",_w="Dilation2DBackpropInput",Rw="Dilation2DBackpropFilter",Il="RealDiv",kl="Einsum",_l="Elu",tg="EluGrad",Rl="Erf",Al="Equal",Ol="Exp",Dl="ExpandDims",Fl="Expm1",Pl="FFT",Ll="Fill",Bl="FlipLeftRight",Ml="Floor",Vl="FloorDiv",Ul="FusedBatchNorm",zl="GatherV2",Wl="GatherNd",Gl="Greater",Hl="GreaterEqual",Io="Identity",jl="IFFT",ql="Imag",Kl="IsFinite",Xl="IsInf",Yl="IsNan",Ql="LeakyRelu",Zl="Less",Jl="LessEqual",ec="LinSpace",tc="Log",nc="Log1p",rc="LogicalAnd",sc="LogicalNot",ic="LogicalOr",Aw="LogicalXor",Ow="LogSoftmax",Dw="LowerBound",oc="LRN",ng="LRNGrad",ac="Max",uc="Maximum",lc="MaxPool",rg="MaxPoolGrad",cc="MaxPool3D",sg="MaxPool3DGrad",hc="MaxPoolWithArgmax",dc="Mean",pc="Min",fc="Minimum",mc="MirrorPad",gc="Mod",yc="Multinomial",xc="Multiply",bc="Neg",wc="NotEqual",vc="NonMaxSuppressionV3",$c="NonMaxSuppressionV4",Sc="NonMaxSuppressionV5",Tc="OnesLike",Cc="OneHot",Ec="Pack",Nc="PadV2",Fw="Pool",Ic="Pow",kc="Prelu",_c="Prod",Rc="RaggedGather",Ac="RaggedRange",Oc="RaggedTensorToTensor",Dc="Range",Fc="Real",Pc="Reciprocal",Lc="Relu",Bc="Reshape",Mc="ResizeNearestNeighbor",ig="ResizeNearestNeighborGrad",Vc="ResizeBilinear",og="ResizeBilinearGrad",Uc="Relu6",zc="Reverse",Wc="Round",Gc="Rsqrt",Hc="ScatterNd",jc="SearchSorted",qc="Select",Kc="Selu",Xc="Slice",Yc="Sin",Qc="Sinh",Zc="Sign",Jc="Sigmoid",eh="Softplus",th="Sqrt",nh="Sum",rh="SpaceToBatchND",sh="SplitV",ih="Softmax",oh="SparseFillEmptyRows",ah="SparseReshape",uh="SparseSegmentMean",lh="SparseSegmentSum",ch="SparseToDense",hh="SquaredDifference",ag="Square",dh="StridedSlice",ph="StringNGrams",fh="StringSplit",mh="StringToHashBucketFast",gh="Sub",yh="Tan",xh="Tanh",ko="Tile",bh="TopK",wh="Transform",Fs="Transpose",vh="Unique",$h="Unpack",Sh="UnsortedSegmentSum",Pw="UpperBound",Th="ZerosLike",Ch="Step",to="FromPixels",Eh="RotateWithOffset",no="_FusedMatMul",ro="FusedConv2D",so="FusedDepthwiseConv2D";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lt(...n){B().getBool("IS_TEST")||B().getBool("PROD")||console.warn(...n)}function Lw(...n){B().getBool("IS_TEST")||B().getBool("PROD")||console.log(...n)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Kr=Vu("kernelRegistry",()=>new Map),Ls=Vu("gradRegistry",()=>new Map);function io(n,e){const t=Ih(n,e);return Kr.get(t)}function Qa(n){return Ls.get(n)}function oo(n){const e=Kr.entries(),t=[];for(;;){const{done:r,value:s}=e.next();if(r)break;const[i,o]=s,[a]=i.split("_");a===n&&t.push(o)}return t}function Nh(n){const{kernelName:e,backendName:t}=n,r=Ih(e,t);Kr.has(r)&&Lt(`The kernel '${e}' for backend '${t}' is already registered`),Kr.set(r,n)}function Bw(n){const{kernelName:e}=n;Ls.has(e)&&B().getBool("DEBUG")&&Lt(`Overriding the gradient for '${e}'`),Ls.set(e,n)}function Mw(n,e){const t=Ih(n,e);if(!Kr.has(t))throw new Error(`The kernel '${n}' for backend '${e}' is not registered`);Kr.delete(t)}function Vw(n){if(!Ls.has(n))throw new Error(`The gradient '${n}' for backend is not registered`);Ls.delete(n)}function Uw(n,e){oo(n).forEach(r=>{const s=Object.assign({},r,{backendName:e});Nh(s)})}function Ih(n,e){return`${e}_${n}`}var fn=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{};function zw(n){var e=n.default;if(typeof e=="function"){var t=function(){return e.apply(this,arguments)};t.prototype=e.prototype}else t={};return Object.defineProperty(t,"__esModule",{value:!0}),Object.keys(n).forEach(function(r){var s=Object.getOwnPropertyDescriptor(n,r);Object.defineProperty(t,r,s.get?s:{enumerable:!0,get:function(){return n[r]}})}),t}var Za=ke,Bt=null;try{Bt=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch{}function ke(n,e,t){this.low=n|0,this.high=e|0,this.unsigned=!!t}ke.prototype.__isLong__;Object.defineProperty(ke.prototype,"__isLong__",{value:!0});function Ct(n){return(n&&n.__isLong__)===!0}ke.isLong=Ct;var Qp={},Zp={};function _r(n,e){var t,r,s;return e?(n>>>=0,(s=0<=n&&n<256)&&(r=Zp[n],r)?r:(t=_e(n,(n|0)<0?-1:0,!0),s&&(Zp[n]=t),t)):(n|=0,(s=-128<=n&&n<128)&&(r=Qp[n],r)?r:(t=_e(n,n<0?-1:0,!1),s&&(Qp[n]=t),t))}ke.fromInt=_r;function Mt(n,e){if(isNaN(n))return e?dr:Vt;if(e){if(n<0)return dr;if(n>=ug)return hg}else{if(n<=-ef)return vt;if(n+1>=ef)return cg}return n<0?Mt(-n,e).neg():_e(n%Xr|0,n/Xr|0,e)}ke.fromNumber=Mt;function _e(n,e,t){return new ke(n,e,t)}ke.fromBits=_e;var ao=Math.pow;function kh(n,e,t){if(n.length===0)throw Error("empty string");if(n==="NaN"||n==="Infinity"||n==="+Infinity"||n==="-Infinity")return Vt;if(typeof e=="number"?(t=e,e=!1):e=!!e,t=t||10,t<2||36<t)throw RangeError("radix");var r;if((r=n.indexOf("-"))>0)throw Error("interior hyphen");if(r===0)return kh(n.substring(1),e,t).neg();for(var s=Mt(ao(t,8)),i=Vt,o=0;o<n.length;o+=8){var a=Math.min(8,n.length-o),u=parseInt(n.substring(o,o+a),t);if(a<8){var l=Mt(ao(t,a));i=i.mul(l).add(Mt(u))}else i=i.mul(s),i=i.add(Mt(u))}return i.unsigned=e,i}ke.fromString=kh;function an(n,e){return typeof n=="number"?Mt(n,e):typeof n=="string"?kh(n,e):_e(n.low,n.high,typeof e=="boolean"?e:n.unsigned)}ke.fromValue=an;var Jp=1<<16,Ww=1<<24,Xr=Jp*Jp,ug=Xr*Xr,ef=ug/2,tf=_r(Ww),Vt=_r(0);ke.ZERO=Vt;var dr=_r(0,!0);ke.UZERO=dr;var Wr=_r(1);ke.ONE=Wr;var lg=_r(1,!0);ke.UONE=lg;var Ja=_r(-1);ke.NEG_ONE=Ja;var cg=_e(-1,2147483647,!1);ke.MAX_VALUE=cg;var hg=_e(-1,-1,!0);ke.MAX_UNSIGNED_VALUE=hg;var vt=_e(0,-2147483648,!1);ke.MIN_VALUE=vt;var Q=ke.prototype;Q.toInt=function(){return this.unsigned?this.low>>>0:this.low};Q.toNumber=function(){return this.unsigned?(this.high>>>0)*Xr+(this.low>>>0):this.high*Xr+(this.low>>>0)};Q.toString=function(e){if(e=e||10,e<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative())if(this.eq(vt)){var t=Mt(e),r=this.div(t),s=r.mul(t).sub(this);return r.toString(e)+s.toInt().toString(e)}else return"-"+this.neg().toString(e);for(var i=Mt(ao(e,6),this.unsigned),o=this,a="";;){var u=o.div(i),l=o.sub(u.mul(i)).toInt()>>>0,c=l.toString(e);if(o=u,o.isZero())return c+a;for(;c.length<6;)c="0"+c;a=""+c+a}};Q.getHighBits=function(){return this.high};Q.getHighBitsUnsigned=function(){return this.high>>>0};Q.getLowBits=function(){return this.low};Q.getLowBitsUnsigned=function(){return this.low>>>0};Q.getNumBitsAbs=function(){if(this.isNegative())return this.eq(vt)?64:this.neg().getNumBitsAbs();for(var e=this.high!=0?this.high:this.low,t=31;t>0&&(e&1<<t)==0;t--);return this.high!=0?t+33:t+1};Q.isZero=function(){return this.high===0&&this.low===0};Q.eqz=Q.isZero;Q.isNegative=function(){return!this.unsigned&&this.high<0};Q.isPositive=function(){return this.unsigned||this.high>=0};Q.isOdd=function(){return(this.low&1)===1};Q.isEven=function(){return(this.low&1)===0};Q.equals=function(e){return Ct(e)||(e=an(e)),this.unsigned!==e.unsigned&&this.high>>>31===1&&e.high>>>31===1?!1:this.high===e.high&&this.low===e.low};Q.eq=Q.equals;Q.notEquals=function(e){return!this.eq(e)};Q.neq=Q.notEquals;Q.ne=Q.notEquals;Q.lessThan=function(e){return this.comp(e)<0};Q.lt=Q.lessThan;Q.lessThanOrEqual=function(e){return this.comp(e)<=0};Q.lte=Q.lessThanOrEqual;Q.le=Q.lessThanOrEqual;Q.greaterThan=function(e){return this.comp(e)>0};Q.gt=Q.greaterThan;Q.greaterThanOrEqual=function(e){return this.comp(e)>=0};Q.gte=Q.greaterThanOrEqual;Q.ge=Q.greaterThanOrEqual;Q.compare=function(e){if(Ct(e)||(e=an(e)),this.eq(e))return 0;var t=this.isNegative(),r=e.isNegative();return t&&!r?-1:!t&&r?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1};Q.comp=Q.compare;Q.negate=function(){return!this.unsigned&&this.eq(vt)?vt:this.not().add(Wr)};Q.neg=Q.negate;Q.add=function(e){Ct(e)||(e=an(e));var t=this.high>>>16,r=this.high&65535,s=this.low>>>16,i=this.low&65535,o=e.high>>>16,a=e.high&65535,u=e.low>>>16,l=e.low&65535,c=0,h=0,d=0,p=0;return p+=i+l,d+=p>>>16,p&=65535,d+=s+u,h+=d>>>16,d&=65535,h+=r+a,c+=h>>>16,h&=65535,c+=t+o,c&=65535,_e(d<<16|p,c<<16|h,this.unsigned)};Q.subtract=function(e){return Ct(e)||(e=an(e)),this.add(e.neg())};Q.sub=Q.subtract;Q.multiply=function(e){if(this.isZero())return Vt;if(Ct(e)||(e=an(e)),Bt){var t=Bt.mul(this.low,this.high,e.low,e.high);return _e(t,Bt.get_high(),this.unsigned)}if(e.isZero())return Vt;if(this.eq(vt))return e.isOdd()?vt:Vt;if(e.eq(vt))return this.isOdd()?vt:Vt;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(tf)&&e.lt(tf))return Mt(this.toNumber()*e.toNumber(),this.unsigned);var r=this.high>>>16,s=this.high&65535,i=this.low>>>16,o=this.low&65535,a=e.high>>>16,u=e.high&65535,l=e.low>>>16,c=e.low&65535,h=0,d=0,p=0,m=0;return m+=o*c,p+=m>>>16,m&=65535,p+=i*c,d+=p>>>16,p&=65535,p+=o*l,d+=p>>>16,p&=65535,d+=s*c,h+=d>>>16,d&=65535,d+=i*l,h+=d>>>16,d&=65535,d+=o*u,h+=d>>>16,d&=65535,h+=r*c+s*l+i*u+o*a,h&=65535,_e(p<<16|m,h<<16|d,this.unsigned)};Q.mul=Q.multiply;Q.divide=function(e){if(Ct(e)||(e=an(e)),e.isZero())throw Error("division by zero");if(Bt){if(!this.unsigned&&this.high===-2147483648&&e.low===-1&&e.high===-1)return this;var t=(this.unsigned?Bt.div_u:Bt.div_s)(this.low,this.high,e.low,e.high);return _e(t,Bt.get_high(),this.unsigned)}if(this.isZero())return this.unsigned?dr:Vt;var r,s,i;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return dr;if(e.gt(this.shru(1)))return lg;i=dr}else{if(this.eq(vt)){if(e.eq(Wr)||e.eq(Ja))return vt;if(e.eq(vt))return Wr;var o=this.shr(1);return r=o.div(e).shl(1),r.eq(Vt)?e.isNegative()?Wr:Ja:(s=this.sub(e.mul(r)),i=r.add(s.div(e)),i)}else if(e.eq(vt))return this.unsigned?dr:Vt;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();i=Vt}for(s=this;s.gte(e);){r=Math.max(1,Math.floor(s.toNumber()/e.toNumber()));for(var a=Math.ceil(Math.log(r)/Math.LN2),u=a<=48?1:ao(2,a-48),l=Mt(r),c=l.mul(e);c.isNegative()||c.gt(s);)r-=u,l=Mt(r,this.unsigned),c=l.mul(e);l.isZero()&&(l=Wr),i=i.add(l),s=s.sub(c)}return i};Q.div=Q.divide;Q.modulo=function(e){if(Ct(e)||(e=an(e)),Bt){var t=(this.unsigned?Bt.rem_u:Bt.rem_s)(this.low,this.high,e.low,e.high);return _e(t,Bt.get_high(),this.unsigned)}return this.sub(this.div(e).mul(e))};Q.mod=Q.modulo;Q.rem=Q.modulo;Q.not=function(){return _e(~this.low,~this.high,this.unsigned)};Q.and=function(e){return Ct(e)||(e=an(e)),_e(this.low&e.low,this.high&e.high,this.unsigned)};Q.or=function(e){return Ct(e)||(e=an(e)),_e(this.low|e.low,this.high|e.high,this.unsigned)};Q.xor=function(e){return Ct(e)||(e=an(e)),_e(this.low^e.low,this.high^e.high,this.unsigned)};Q.shiftLeft=function(e){return Ct(e)&&(e=e.toInt()),(e&=63)===0?this:e<32?_e(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):_e(0,this.low<<e-32,this.unsigned)};Q.shl=Q.shiftLeft;Q.shiftRight=function(e){return Ct(e)&&(e=e.toInt()),(e&=63)===0?this:e<32?_e(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):_e(this.high>>e-32,this.high>=0?0:-1,this.unsigned)};Q.shr=Q.shiftRight;Q.shiftRightUnsigned=function(e){if(Ct(e)&&(e=e.toInt()),e&=63,e===0)return this;var t=this.high;if(e<32){var r=this.low;return _e(r>>>e|t<<32-e,t>>>e,this.unsigned)}else return e===32?_e(t,0,this.unsigned):_e(t>>>e-32,0,this.unsigned)};Q.shru=Q.shiftRightUnsigned;Q.shr_u=Q.shiftRightUnsigned;Q.toSigned=function(){return this.unsigned?_e(this.low,this.high,!1):this};Q.toUnsigned=function(){return this.unsigned?this:_e(this.low,this.high,!0)};Q.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()};Q.toBytesLE=function(){var e=this.high,t=this.low;return[t&255,t>>>8&255,t>>>16&255,t>>>24,e&255,e>>>8&255,e>>>16&255,e>>>24]};Q.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,e&255,t>>>24,t>>>16&255,t>>>8&255,t&255]};ke.fromBytes=function(e,t,r){return r?ke.fromBytesLE(e,t):ke.fromBytesBE(e,t)};ke.fromBytesLE=function(e,t){return new ke(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)};ke.fromBytesBE=function(e,t){return new ke(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)};const Gw=fw({__proto__:null,default:Za},[Za]);/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cr=Za||Gw;function ei(n){return cr.fromString(n,!0,16)}const dg=ei("c3a5c85c97cb3127"),lr=ei("b492b66fbe98f273"),st=ei("9ae16a3b2f90404f");function eu(n){return n.xor(n.shru(47))}function pg(n,e,t){const r=n.slice(e,e+t);return cr.fromBytes(Array.from(r),!0,!0)}function Te(n,e){return pg(n,e,8)}function nf(n,e){return pg(n,e,4)}function Ue(n,e){return e===0?n:n.shru(e).or(n.shl(64-e))}function Hn(n,e,t=ei("9ddfea08eb382d69")){let r=n.xor(e).mul(t);r=r.xor(r.shru(47));let s=e.xor(r).mul(t);return s=s.xor(s.shru(47)),s=s.mul(t),s}function Hw(n,e,t,r,s,i){s=s.add(n),i=Ue(i.add(s).add(r),21);const o=s;return s=s.add(e),s=s.add(t),i=i.add(Ue(s,44)),[s.add(r),i.add(o)]}function ki(n,e,t,r){return Hw(Te(n,e),Te(n,e+8),Te(n,e+16),Te(n,e+24),t,r)}function jw(n,e=n.length){if(e>=8){const t=st.add(e*2),r=Te(n,0).add(st),s=Te(n,e-8),i=Ue(s,37).mul(t).add(r),o=Ue(r,25).add(s).mul(t);return Hn(i,o,t)}if(e>=4){const t=st.add(e*2),r=nf(n,0);return Hn(r.shl(3).add(e),nf(n,e-4),t)}if(e>0){const t=n[0],r=n[e>>1],s=n[e-1],i=t+(r<<8),o=e+(s<<2);return eu(st.mul(i).xor(dg.mul(o))).mul(st)}return st}function qw(n,e=n.length){const t=st.add(e*2),r=Te(n,0).mul(lr),s=Te(n,8),i=Te(n,e-8).mul(t),o=Te(n,e-16).mul(st);return Hn(Ue(r.add(s),43).add(Ue(i,30)).add(o),r.add(Ue(s.add(st),18)).add(i),t)}function Kw(n,e=n.length){const t=st.add(e*2),r=Te(n,0).mul(st),s=Te(n,8),i=Te(n,e-8).mul(t),o=Te(n,e-16).mul(st),a=Ue(r.add(s),43).add(Ue(i,30)).add(o),u=Hn(a,r.add(Ue(s.add(st),18)).add(i),t),l=Te(n,16).mul(t),c=Te(n,24),h=a.add(Te(n,e-32)).mul(t),d=u.add(Te(n,e-24)).mul(t);return Hn(Ue(l.add(c),43).add(Ue(h,30)).add(d),l.add(Ue(c.add(r),18)).add(h),t)}function fg(n,e=n.length){const t=cr.fromNumber(81,!0);if(e<=32)return e<=16?jw(n,e):qw(n,e);if(e<=64)return Kw(n,e);let r=t,s=t.mul(lr).add(113),i=eu(s.mul(st).add(113)).mul(st),o=[cr.UZERO,cr.UZERO],a=[cr.UZERO,cr.UZERO];r=r.mul(st).add(Te(n,0));let u=0;const l=(e-1>>6)*64,c=l+(e-1&63)-63;do r=Ue(r.add(s).add(o[0]).add(Te(n,u+8)),37).mul(lr),s=Ue(s.add(o[1]).add(Te(n,u+48)),42).mul(lr),r=r.xor(a[1]),s=s.add(o[0]).add(Te(n,u+40)),i=Ue(i.add(a[0]),33).mul(lr),o=ki(n,u,o[1].mul(lr),r.add(a[0])),a=ki(n,u+32,i.add(a[1]),s.add(Te(n,u+16))),[i,r]=[r,i],u+=64;while(u!==l);const h=lr.add(i.and(255).shl(1));return u=c,a[0]=a[0].add(e-1&63),o[0]=o[0].add(a[0]),a[0]=a[0].add(o[0]),r=Ue(r.add(s).add(o[0]).add(Te(n,u+8)),37).mul(h),s=Ue(s.add(o[1]).add(Te(n,u+48)),42).mul(h),r=r.xor(a[1].mul(9)),s=s.add(o[0].mul(9).add(Te(n,u+40))),i=Ue(i.add(a[0]),33).mul(h),o=ki(n,u,o[1].mul(h),r.add(a[0])),a=ki(n,u+32,i.add(a[1]),s.add(Te(n,u+16))),[i,r]=[r,i],Hn(Hn(o[0],a[0],h).add(eu(s).mul(dg)).add(i),Hn(o[1],a[1],h).add(r),h)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rr(n,e){return e==="string"?_n(n):ti([n],e)}function Xw(n,e){return n instanceof Float32Array&&e==="float32"||n instanceof Int32Array&&e==="int32"||n instanceof Uint8Array&&e==="bool"}function ti(n,e){if(e==="string")throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(n)&&(n=An(n)),B().getBool("DEBUG")&&Wm(n,e),Xw(n,e))return n;if(e==null||e==="float32"||e==="complex64")return new Float32Array(n);if(e==="int32")return new Int32Array(n);if(e==="bool"){const t=new Uint8Array(n.length);for(let r=0;r<t.length;++r)Math.round(n[r])!==0&&(t[r]=1);return t}else throw new Error(`Unknown data type ${e}`)}function Pt(){return B().platform.now()}function Yw(n,e){return B().platform.fetch(n,e)}function _n(n,e="utf-8"){return e=e||"utf-8",B().platform.encode(n,e)}function vr(n,e="utf-8"){return e=e||"utf-8",B().platform.decode(n,e)}const Qw=Object.freeze(Object.defineProperty({__proto__:null,createScalarValue:Rr,toTypedArray:ti,now:Pt,fetch:Yw,encodeString:_n,decodeString:vr,shuffle:Vm,shuffleCombo:yw,clamp:Ps,nearestLargerEven:To,swap:Nn,sum:Um,randUniform:xw,distSquared:bw,assert:N,assertShapesMatch:Je,assertNonNull:kr,flatten:An,sizeFromShape:q,isScalarShape:ww,arraysEqual:Oe,isInt:br,tanh:vw,sizeToSquarishShape:Qi,createShuffledIndices:$w,rightPad:fr,repeatedTry:Ya,inferFromImplicitShape:zm,parseAxisParam:Ve,squeezeShape:Fn,getTypedArrayFromDType:yn,getArrayFromDType:He,checkConversionForErrors:Wm,isValidDtype:Gm,hasEncodingLoss:Hm,isTypedArray:Qe,bytesPerElement:Zi,bytesFromStringArray:jm,isString:kn,isBoolean:qm,isNumber:Km,inferDtype:Js,isFunction:jn,nearestDivisor:Ji,computeStrides:ze,toNestedArray:mr,makeOnesTypedArray:Bu,makeZerosTypedArray:On,makeZerosNestedTypedArray:Sw,assertNonNegativeIntegerDimensions:Tt,locToIndex:eo,indexToLoc:Co,isPromise:wr,hexToLong:ei,fingerPrint64:fg},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Zw{constructor(e,t){this.backendTimer=e,this.logger=t,t==null&&(this.logger=new ev)}profileKernel(e,t,r){let s;const i=()=>{s=r()};let o;const a=Pt();if(this.backendTimer.timerAvailable())o=this.backendTimer.time(i);else{i();for(const l of s)l.dataSync();o=Promise.resolve({kernelMs:Pt()-a})}if(B().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let l=0;l<s.length;l++){const c=s[l];c.data().then(h=>{Jw(h,c.dtype,e)})}return{kernelName:e,outputs:s,inputs:t,timeMs:o.then(l=>l.kernelMs),extraInfo:o.then(l=>l.getExtraProfileInfo!=null?l.getExtraProfileInfo():"")}}logKernelProfile(e){const{kernelName:t,outputs:r,timeMs:s,inputs:i,extraInfo:o}=e;r.forEach(a=>{Promise.all([a.data(),s,o]).then(u=>{this.logger.logKernelProfile(t,a,u[0],u[1],i,u[2])})})}}function Jw(n,e,t){if(e!=="float32")return!1;for(let r=0;r<n.length;r++){const s=n[r];if(isNaN(s)||!isFinite(s))return console.warn(`Found ${s} in the result of '${t}'`),!0}return!1}class ev{logKernelProfile(e,t,r,s,i,o){const a=typeof s=="number"?fr(`${s}ms`,9):s.error,u=fr(e,25),l=t.rank,c=t.size,h=fr(t.shape.toString(),14);let d="";for(const p in i){const m=i[p];if(m!=null){const y=m.shape||t.shape,g=y.length;d+=`${p}: ${g}D ${g>0?y:""} `}}console.log(`%c${u}	%c${a}	%c${l}D ${h}	%c${c}	%c${d}	%c${o}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tv(n,e,t){const r={},s={};for(let u=0;u<e.length;u++)r[e[u].id]=!0;for(let u=0;u<n.length;u++){const l=n[u],c=l.inputs;for(const h in c){const d=c[h];let p=!1;for(let m=0;m<e.length;m++)if(r[d.id]){l.outputs.forEach(y=>r[y.id]=!0),p=!0,s[l.id]=!0;break}if(p)break}}const i={};i[t.id]=!0;const o={};for(let u=n.length-1;u>=0;u--){const l=n[u],c=l.inputs;for(let h=0;h<l.outputs.length;h++)if(i[l.outputs[h].id]){for(const d in c)i[c[d].id]=!0,o[l.id]=!0;break}}const a=[];for(let u=0;u<n.length;u++){const l=n[u];if(s[l.id]&&o[l.id]){const c={};for(const d in l.inputs){const p=l.inputs[d];r[p.id]&&(c[d]=p)}const h=Object.assign({},l);h.inputs=c,h.outputs=l.outputs,a.push(h)}}return a}function nv(n,e,t,r){for(let s=e.length-1;s>=0;s--){const i=e[s],o=[];if(i.outputs.forEach(u=>{const l=n[u.id];l!=null?o.push(l):o.push(null)}),i.gradient==null)throw new Error(`Cannot compute gradient: gradient function not found for ${i.kernelName}.`);const a=i.gradient(o);for(const u in i.inputs){if(!(u in a))throw new Error(`Cannot backprop through input ${u}. Available gradients found: ${Object.keys(a)}.`);const l=t(()=>a[u]());if(l.dtype!=="float32")throw new Error(`Error in gradient for op ${i.kernelName}. The gradient of input ${u} must have 'float32' dtype, but has '${l.dtype}'`);const c=i.inputs[u];if(!Oe(l.shape,c.shape))throw new Error(`Error in gradient for op ${i.kernelName}. The gradient of input '${u}' has shape '${l.shape}', which does not match the shape of the input '${c.shape}'`);if(n[c.id]==null)n[c.id]=l;else{const h=n[c.id];n[c.id]=r(h,l),h.dispose()}}}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rf=20,Es=3,_a=7;function rv(n,e,t,r){const s=ze(e),i=sv(n,e,t,s),o=e.length,a=qi(n,e,t,s,i),u=["Tensor"];return r&&(u.push(`  dtype: ${t}`),u.push(`  rank: ${o}`),u.push(`  shape: [${e}]`),u.push("  values:")),u.push(a.map(l=>"    "+l).join(`
`)),u.join(`
`)}function sv(n,e,t,r){const s=q(e),i=r[r.length-1],o=new Array(i).fill(0),a=e.length,u=t==="complex64"?_s(n):n;if(a>1)for(let l=0;l<s/i;l++){const c=l*i;for(let h=0;h<i;h++)o[h]=Math.max(o[h],ks(u[c+h],0,t).length)}return o}function ks(n,e,t){let r;return Array.isArray(n)?r=`${parseFloat(n[0].toFixed(_a))} + ${parseFloat(n[1].toFixed(_a))}j`:kn(n)?r=`'${n}'`:t==="bool"?r=mg(n):r=parseFloat(n.toFixed(_a)).toString(),fr(r,e)}function mg(n){return n===0?"false":"true"}function qi(n,e,t,r,s,i=!0){const o=t==="complex64"?2:1,a=e[0],u=e.length;if(u===0){if(t==="complex64"){const y=_s(n);return[ks(y[0],0,t)]}return t==="bool"?[mg(n[0])]:[n[0].toString()]}if(u===1){if(a>rf){const g=Es*o;let x=Array.from(n.slice(0,g)),$=Array.from(n.slice((a-Es)*o,a*o));return t==="complex64"&&(x=_s(x),$=_s($)),["["+x.map((C,S)=>ks(C,s[S],t)).join(", ")+", ..., "+$.map((C,S)=>ks(C,s[a-Es+S],t)).join(", ")+"]"]}const y=t==="complex64"?_s(n):Array.from(n);return["["+y.map((g,x)=>ks(g,s[x],t)).join(", ")+"]"]}const l=e.slice(1),c=r.slice(1),h=r[0]*o,d=[];if(a>rf){for(let y=0;y<Es;y++){const g=y*h,x=g+h;d.push(...qi(n.slice(g,x),l,t,c,s,!1))}d.push("...");for(let y=a-Es;y<a;y++){const g=y*h,x=g+h;d.push(...qi(n.slice(g,x),l,t,c,s,y===a-1))}}else for(let y=0;y<a;y++){const g=y*h,x=g+h;d.push(...qi(n.slice(g,x),l,t,c,s,y===a-1))}const p=u===2?",":"";d[0]="["+d[0]+p;for(let y=1;y<d.length-1;y++)d[y]=" "+d[y]+p;let m=`,
`;for(let y=2;y<u;y++)m+=`
`;return d[d.length-1]=" "+d[d.length-1]+"]"+(i?"":m),d}function _s(n){const e=[];for(let t=0;t<n.length;t+=2)e.push([n[t],n[t+1]]);return e}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Yr{constructor(e,t,r){if(this.dtype=t,this.shape=e.slice(),this.size=q(e),r!=null){const s=r.length;N(s===this.size,()=>`Length of values '${s}' does not match the size inferred by the shape '${this.size}'.`)}if(t==="complex64")throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=r||He(t,this.size),this.strides=ze(e)}set(e,...t){t.length===0&&(t=[0]),N(t.length===this.rank,()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`);const r=this.locToIndex(t);this.values[r]=e}get(...e){e.length===0&&(e=[0]);let t=0;for(const s of e){if(s<0||s>=this.shape[t]){const i=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(i)}t++}let r=e[e.length-1];for(let s=0;s<e.length-1;++s)r+=this.strides[s]*e[s];return this.values[r]}locToIndex(e){if(this.rank===0)return 0;if(this.rank===1)return e[0];let t=e[e.length-1];for(let r=0;r<e.length-1;++r)t+=this.strides[r]*e[r];return t}indexToLoc(e){if(this.rank===0)return[];if(this.rank===1)return[e];const t=new Array(this.shape.length);for(let r=0;r<t.length-1;++r)t[r]=Math.floor(e/this.strides[r]),e-=t[r]*this.strides[r];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return Jt().makeTensor(this.values,this.shape,this.dtype)}}let Jt=null,Ur=null;function iv(n){Jt=n}function ov(n){Ur=n}class be{constructor(e,t,r,s){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=q(e),this.strides=ze(e),this.dataId=r,this.id=s,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return Ur.buffer(this.shape,this.dtype,e)}bufferSync(){return Ur.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return mr(this.shape,e,this.dtype==="complex64")}arraySync(){return mr(this.shape,this.dataSync(),this.dtype==="complex64")}async data(){this.throwIfDisposed();const e=Jt().read(this.dataId);if(this.dtype==="string"){const t=await e;try{return t.map(r=>vr(r))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),Jt().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();const e=Jt().readSync(this.dataId);if(this.dtype==="string")try{return e.map(t=>vr(t))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await Jt().read(this.dataId);return this.dtype==="string"?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(Jt().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return Ur.print(this,e)}clone(){return this.throwIfDisposed(),Ur.clone(this)}toString(e=!1){const t=this.dataSync();return rv(t,this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),Ur.cast(this,e)}variable(e=!0,t,r){return this.throwIfDisposed(),Jt().makeVariable(this,e,t,r)}}Object.defineProperty(be,Symbol.hasInstance,{value:n=>!!n&&n.data!=null&&n.dataSync!=null&&n.throwIfDisposed!=null});function av(){return Vu("Tensor",()=>be)}av();class Bs extends be{constructor(e,t,r,s){super(e.shape,e.dtype,e.dataId,s),this.trainable=t,this.name=r}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!Oe(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);Jt().disposeTensor(this),this.dataId=e.dataId,Jt().incRef(this,null)}dispose(){Jt().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(Bs,Symbol.hasInstance,{value:n=>n instanceof be&&n.assign!=null&&n.assign instanceof Function});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var tu;(function(n){n.R0="R0",n.R1="R1",n.R2="R2",n.R3="R3",n.R4="R4",n.R5="R5",n.R6="R6"})(tu||(tu={}));var nu;(function(n){n.float32="float32",n.int32="int32",n.bool="int32",n.complex64="complex64"})(nu||(nu={}));var ru;(function(n){n.float32="float32",n.int32="int32",n.bool="bool",n.complex64="complex64"})(ru||(ru={}));var su;(function(n){n.float32="float32",n.int32="float32",n.bool="float32",n.complex64="complex64"})(su||(su={}));var iu;(function(n){n.float32="complex64",n.int32="complex64",n.bool="complex64",n.complex64="complex64"})(iu||(iu={}));const uv={float32:su,int32:nu,bool:ru,complex64:iu};function sn(n,e){if(n==="string"||e==="string"){if(n==="string"&&e==="string")return"string";throw new Error(`Can not upcast ${n} with ${e}`)}return uv[n][e]}function _o(n){return sn(n,"int32")}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pe(n,e){if(n.dtype===e.dtype)return[n,e];const t=sn(n.dtype,e.dtype);return[n.cast(t),e.cast(t)]}function gg(n,e){N(n.dtype===e.dtype,()=>`The dtypes of the first(${n.dtype}) and second(${e.dtype}) input must match`)}function lv(n,e){return e.some(t=>t.id===n.id)}function _h(n){const e=[];return yg(n,e,new Set),e}function yg(n,e,t){if(n==null)return;if(n instanceof be){e.push(n);return}if(!cv(n))return;const r=n;for(const s in r){const i=r[s];t.has(i)||(t.add(i),yg(i,e,t))}}function cv(n){return Array.isArray(n)||typeof n=="object"}const hv=Object.freeze(Object.defineProperty({__proto__:null,makeTypesMatch:Pe,assertTypesMatch:gg,isTensorInList:lv,getTensorsInContainer:_h},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ra(n){return n.kernelName!=null}class sf{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(e=>e.name)))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class Qr{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new sf}async ready(){if(this.pendingBackendInit!=null)return this.pendingBackendInit.then(()=>{});if(this.backendInstance!=null)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const r=e[t];if(await this.initializeBackend(r).success){await this.setBackend(r);return}}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(this.pendingBackendInit!=null)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(this.backendInstance==null){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry))if(e in this.registryFactory){const{asyncInit:t}=this.initializeBackend(e);if(t)return null}else return null;return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,r=1){return e in this.registryFactory?(Lt(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:r},!0)}async setBackend(e){if(this.registryFactory[e]==null)throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,this.registry[e]==null){this.backendInstance=null;const{success:t,asyncInit:r}=this.initializeBackend(e);if(!(r?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new Zw(this.backendInstance),!0}setupRegisteredKernels(){oo(this.backendName).forEach(t=>{t.setupFunc!=null&&t.setupFunc(this.backendInstance)})}disposeRegisteredKernels(e){oo(e).forEach(r=>{r.disposeFunc!=null&&r.disposeFunc(this.registry[e])})}initializeBackend(e){const t=this.registryFactory[e];if(t==null)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const r=t.factory();if(r&&!(r instanceof Lu)&&typeof r.then=="function"){const s=++this.pendingBackendInitId,i=r.then(o=>s<this.pendingBackendInitId?!1:(this.registry[e]=o,this.pendingBackendInit=null,!0)).catch(o=>(s<this.pendingBackendInitId||(this.pendingBackendInit=null,Lt(`Initialization of backend ${e} failed`),Lt(o.stack||o.message)),!1));return this.pendingBackendInit=i,{success:i,asyncInit:!0}}else return this.registry[e]=r,{success:!0,asyncInit:!1}}catch(r){return Lt(`Initialization of backend ${e} failed`),Lt(r.stack||r.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&this.pendingBackendInit!=null&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(Object.keys(this.registryFactory).length===0)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority)}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const r=e[t],{success:s,asyncInit:i}=this.initializeBackend(r);if(i||s)return{name:r,asyncInit:i}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const r=this.state.tensorInfo.get(t),s=r.backend,i=this.readSync(t),o=s.refCount(t);s.disposeData(t,!0),r.backend=e,e.move(t,i,r.shape,r.dtype,o),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let r=null;if(t==null){if(typeof e!="function")throw new Error("Please provide a function to tidy()");t=e}else{if(typeof e!="string"&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if(typeof t!="function")throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=e}let s;return this.scopedRun(()=>this.startScope(r),()=>this.endScope(s),()=>(s=t(),s instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),s))}scopedRun(e,t,r){e();try{const s=r();return t(),s}catch(s){throw t(),s}}nextTensorId(){return Qr.nextTensorId++}nextVariableId(){return Qr.nextVariableId++}clone(e){const t=D.runKernel(Io,{x:e}),r={x:e},s=o=>({x:()=>{const a="float32",u={x:o},l={dtype:a};return D.runKernel(No,u,l)}}),i=[];return this.addTapeNode(this.state.activeScope.name,r,[t],s,i,{}),t}runKernel(e,t,r){if(this.backendName==null&&this.backend,!(io(e,this.backendName)!=null))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:r})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,r){const s=this.backend.numDataIds();let i=0;r.forEach(u=>{i+=u.dtype==="complex64"?3:1});const o=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],a=s-t-i-o;if(a>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${a} data ids) after running '${e}'`)}runKernelFunc(e){let t,r=[];const s=this.isTapeOn(),i=this.state.numBytes,o=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);let a;this.backendName==null&&this.backend;let u;const l=Ra(e)?e.kernelName:this.state.activeScope!=null?this.state.activeScope.name:"";if(Ra(e)){const{kernelName:m,inputs:y,attrs:g}=e;this.backendName==null&&this.backend;const x=io(m,this.backendName);N(x!=null,()=>`Cannot find registered kernel '${m}' for backend '${this.backendName}'`),a=()=>{const $=this.backend.numDataIds();u=x.kernelFunc({inputs:y,attrs:g,backend:this.backend});const C=Array.isArray(u)?u:[u];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(m,$,C);const S=C.map(I=>I.rank!=null?I:this.makeTensorFromTensorInfo(I));if(s){const I=this.getTensorsForGradient(m,y,S);r=this.saveTensorsForBackwardMode(I)}return S}}else{const{forwardFunc:m}=e,y=g=>{!s||(r=g.map(x=>this.keep(this.clone(x))))};a=()=>{const g=this.backend.numDataIds();u=this.tidy(()=>m(this.backend,y));const x=Array.isArray(u)?u:[u];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(l,g,x),x}}const{inputs:c,attrs:h}=e,d=Ra(e)?null:e.backwardsFunc;let p;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{!this.ENV.getBool("DEBUG")&&!this.state.profiling?t=a():(p=this.profiler.profileKernel(l,c,()=>a()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(p),t=p.outputs)}),s&&this.addTapeNode(l,c,t,d,r,h),this.state.profiling&&this.state.activeProfile.kernels.push({name:l,bytesAdded:this.state.numBytes-i,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-o,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(c).map(m=>c[m]!=null?c[m].shape:null),outputShapes:t.map(m=>m.shape),kernelTimeMs:p.timeMs,extraInfo:p.extraInfo}),Array.isArray(u)?t:t[0]}saveTensorsForBackwardMode(e){return e.map(r=>this.keep(this.clone(r)))}getTensorsForGradient(e,t,r){const s=Qa(e);if(s!=null){const i=s.inputsToSave||[],o=s.outputsToSave||[];let a;s.saveAllInputs?(N(Array.isArray(t),()=>"saveAllInputs is true, expected inputs to be an array."),a=Object.keys(t).map(l=>t[l])):a=i.map(l=>t[l]);const u=r.filter((l,c)=>o[c]);return a.concat(u)}return[]}makeTensor(e,t,r,s){if(e==null)throw new Error("Values passed to engine.makeTensor() are null");r=r||"float32",s=s||this.backend;let i=e;r==="string"&&kn(e[0])&&(i=e.map(u=>_n(u)));const o=s.write(i,t,r),a=new be(t,r,o,this.nextTensorId());if(this.trackTensor(a,s),r==="string"){const u=this.state.tensorInfo.get(o),l=jm(i);this.state.numBytes+=l-u.bytes,u.bytes=l}return a}makeTensorFromDataId(e,t,r,s){r=r||"float32";const i={dataId:e,shape:t,dtype:r};return this.makeTensorFromTensorInfo(i,s)}makeTensorFromTensorInfo(e,t){const{dataId:r,shape:s,dtype:i}=e,o=new be(s,i,r,this.nextTensorId());return this.trackTensor(o,t),o}makeVariable(e,t=!0,r,s){r=r||this.nextVariableId().toString(),s!=null&&s!==e.dtype&&(e=e.cast(s));const i=new Bs(e,t,r,this.nextTensorId());if(this.state.registeredVariables[i.name]!=null)throw new Error(`Variable with name ${i.name} was already registered`);return this.state.registeredVariables[i.name]=i,this.incRef(i,this.backend),i}trackTensor(e,t){this.state.numTensors++,e.dtype==="string"&&this.state.numStringTensors++;let r=0;e.dtype!=="complex64"&&e.dtype!=="string"&&(r=e.size*Zi(e.dtype)),this.state.numBytes+=r,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:r})),e instanceof Bs||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,e.dtype==="string"&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),e.dtype!=="complex64"&&e.dtype!=="string"){const r=e.size*Zi(e.dtype);this.state.numBytes-=r}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),this.state.registeredVariables[e.name]!=null&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,e.reasons==null&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,r=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(s=>s.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-r;for(const s of this.state.activeProfile.kernels)s.kernelTimeMs=await s.kernelTimeMs,s.extraInfo=await s.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&this.state.kernelDepth===0}addTapeNode(e,t,r,s,i,o){const a={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:r,saved:i},u=Qa(e);u!=null&&(s=u.gradFunc),s!=null&&(a.gradient=l=>(l=l.map((c,h)=>{if(c==null){const d=r[h],p=On(d.size,d.dtype);return this.makeTensor(p,d.shape,d.dtype)}return c}),s(l.length>1?l:l[0],i,o))),this.state.activeTape.push(a)}keep(e){return e.kept=!0,e}startTape(){this.state.gradientDepth===0&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=_h(e),r=new Set(t.map(i=>i.id));for(let i=0;i<this.state.activeScope.track.length;i++){const o=this.state.activeScope.track[i];!o.kept&&!r.has(o.id)&&o.dispose()}const s=this.state.scopeStack.pop();this.state.activeScope=this.state.scopeStack.length===0?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach(i=>{!i.kept&&i.scopeId===s.id&&this.track(i)})}gradients(e,t,r,s=!1){if(N(t.length>0,()=>"gradients() received an empty list of xs."),r!=null&&r.dtype!=="float32")throw new Error(`dy must have 'float32' dtype, but has '${r.dtype}'`);const i=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",e));N(i instanceof be,()=>"The result y returned by f() must be a tensor.");const o=tv(this.state.activeTape,t,i);if(!s&&o.length===0&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{const a={};a[i.id]=r==null?dv(i.shape):r,nv(a,o,l=>this.tidy(l),pv);const u=t.map(l=>a[l.id]);return this.state.gradientDepth===0&&(this.state.activeTape.forEach(l=>{for(const c of l.saved)c.dispose()}),this.state.activeTape=null),{value:i,grads:u}})}customGrad(e){return N(jn(e),()=>"The f passed in customGrad(f) must be a function."),(...t)=>{N(t.every(a=>a instanceof be),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let r;const s={};t.forEach((a,u)=>{s[u]=a});const i=(a,u)=>(r=e(...t,u),N(r.value instanceof be,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),N(jn(r.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),r.value),o=(a,u)=>{const l=r.gradFunc(a,u),c=Array.isArray(l)?l:[l];N(c.length===t.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),N(c.every(d=>d instanceof be),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");const h={};return c.forEach((d,p)=>{h[p]=()=>d}),h};return this.runKernelFunc({forwardFunc:i,backwardsFunc:o,inputs:s})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){const t=Pt(),r=await this.backend.time(e);return r.wallMs=Pt()-t,r}track(e){return this.state.activeScope!=null&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new sf;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}Qr.nextTensorId=0;Qr.nextVariableId=0;function dv(n){const e=Bu(q(n),"float32");return D.makeTensor(e,n,"float32")}function xg(){const n=Qm();if(n._tfengine==null){const e=new Ym(n);n._tfengine=new Qr(e)}return Nw(n._tfengine.ENV),iv(()=>n._tfengine),n._tfengine}const D=xg();function pv(n,e){const t={a:n,b:e};return D.runKernel(Eo,t)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fv(){return typeof navigator<"u"&&navigator!=null}let ou;function mv(n){ou=n}function Rh(n){if(ou!==void 0)return ou;if(n||fv()){if(n||(n=navigator),n.product==="ReactNative")return!0;const e=n.userAgent||n.vendor||(typeof window<"u"?window.opera:"");if(!e){const t=n;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(e)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(e.substr(0,4))}return!1}function Ah(){return typeof window<"u"&&window.document!=null||typeof WorkerGlobalScope<"u"}const gv=Object.freeze(Object.defineProperty({__proto__:null,mockIsMobile:mv,isMobile:Rh,isBrowser:Ah},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const It=B();It.registerFlag("DEBUG",()=>!1,n=>{n&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")});It.registerFlag("IS_BROWSER",()=>Ah());It.registerFlag("IS_NODE",()=>typeof process<"u"&&typeof process.versions<"u"&&typeof process.versions.node<"u");It.registerFlag("IS_CHROME",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor));It.registerFlag("PROD",()=>!1);It.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>It.getBool("DEBUG"));It.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0);It.registerFlag("IS_TEST",()=>!1);It.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>!0);It.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1);It.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",()=>!1);It.registerFlag("USE_SETTIMEOUTCUSTOM",()=>!1);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xn(n,e){let t=n;if(Qe(n))return e==="string"?[]:[n.length];if(typeof n=="object"&&"texture"in n){const s=n.channels||"RGBA";return[n.height,n.width*s.length]}if(!Array.isArray(n))return[];const r=[];for(;Array.isArray(t)||Qe(t)&&e!=="string";)r.push(t.length),t=t[0];return Array.isArray(n)&&B().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&bg(n,r,[]),r}function bg(n,e,t){if(t=t||[],!Array.isArray(n)&&!Qe(n)){N(e.length===0,()=>`Element arr[${t.join("][")}] is a primitive, but should be an array/TypedArray of ${e[0]} elements`);return}N(e.length>0,()=>`Element arr[${t.join("][")}] should be a primitive, but is an array of ${n.length} elements`),N(n.length===e[0],()=>`Element arr[${t.join("][")}] should have ${e[0]} elements, but has ${n.length} elements`);const r=e.slice(1);for(let s=0;s<n.length;++s)bg(n[s],r,t.concat(s))}function of(n,e,t,r){if(n!=="string_or_numeric"){if(n==null)throw new Error("Expected dtype cannot be null.");if(n!=="numeric"&&n!==e||n==="numeric"&&e==="string")throw new Error(`Argument '${t}' passed to '${r}' must be ${n} tensor, but got ${e} tensor`)}}function E(n,e,t,r="numeric"){if(n instanceof be)return of(r,n.dtype,e,t),n;let s=Js(n);if(s!=="string"&&["bool","int32","float32"].indexOf(r)>=0&&(s=r),of(r,s,e,t),n==null||!Qe(n)&&!Array.isArray(n)&&typeof n!="number"&&typeof n!="boolean"&&typeof n!="string"){const u=n==null?"null":n.constructor.name;throw new Error(`Argument '${e}' passed to '${t}' must be a Tensor or TensorLike, but got '${u}'`)}const i=xn(n,s);!Qe(n)&&!Array.isArray(n)&&(n=[n]);const a=s!=="string"?ti(n,s):An(n,[],!0);return D.makeTensor(a,i,s)}function Ms(n,e,t,r="numeric"){if(!Array.isArray(n))throw new Error(`Argument ${e} passed to ${t} must be a \`Tensor[]\` or \`TensorLike[]\``);return n.map((i,o)=>E(i,`${e}[${o}]`,t,r))}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Oh="__op";function O(n){const e=Object.keys(n);if(e.length!==1)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${e.length} keys.`);let t=e[0];const r=n[t];t.endsWith("_")&&(t=t.substring(0,t.length-1)),t=t+Oh;const s=(...i)=>{D.startScope(t);try{const o=r(...i);return wr(o)&&console.error("Cannot return a Promise inside of tidy."),D.endScope(o),o}catch(o){throw D.endScope(null),o}};return Object.defineProperty(s,"name",{value:t,configurable:!0}),s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yv(n,e){const t=E(n,"real","complex"),r=E(e,"imag","complex");Je(t.shape,r.shape,`real and imag shapes, ${t.shape} and ${r.shape}, must match in call to tf.complex().`);const s={real:t,imag:r};return D.runKernel(ul,s)}const Dn=O({complex_:yv});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qn(n,e,t,r){if(r==null&&(r=Js(n)),r==="complex64")throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(typeof n=="object"&&"texture"in n){if(r!=="float32"&&r!=="int32")throw new Error(`Creating tensor from texture only supports 'float32'|'int32' dtype, while the dtype is ${r}.`);return n.channels=n.channels||"RGBA",D.backend.createTensorFromTexture(n,e||t,r)}if(!Qe(n)&&!Array.isArray(n)&&typeof n!="number"&&typeof n!="boolean"&&typeof n!="string")throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(e!=null){Tt(e);const s=q(e),i=q(t);N(s===i,()=>`Based on the provided shape, [${e}], the tensor should have ${s} values but has ${i}`);for(let o=0;o<t.length;++o){const a=t[o],u=o===t.length-1?a!==q(e.slice(o)):!0;N(t[o]===e[o]||!u,()=>`Error creating a new Tensor. Inferred shape (${t}) does not match the provided shape (${e}). `)}}return!Qe(n)&&!Array.isArray(n)&&(n=[n]),e=e||t,n=r!=="string"?ti(n,r):An(n,[],!0),D.makeTensor(n,e,r)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gt(n,e,t){const r=xn(n,t);return Qn(n,e,r,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const au={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uo=4;async function xv(n,e){const t=[],r=[],s=Array.isArray(n)?n.map(o=>o.name):Object.keys(n);for(let o=0;o<s.length;++o){const a=s[o],u=Array.isArray(n)?n[o].tensor:n[a];if(u.dtype!=="float32"&&u.dtype!=="int32"&&u.dtype!=="bool"&&u.dtype!=="string"&&u.dtype!=="complex64")throw new Error(`Unsupported dtype in weight '${a}': ${u.dtype}`);const l={name:a,shape:u.shape,dtype:u.dtype};if(u.dtype==="string"){const c=new Promise(async h=>{const d=await u.bytes(),p=d.reduce((g,x)=>g+x.length,0)+uo*d.length,m=new Uint8Array(p);let y=0;for(let g=0;g<d.length;g++){const x=d[g],$=new Uint8Array(new Uint32Array([x.length]).buffer);m.set($,y),y+=uo,m.set(x,y),y+=x.length}h(m)});r.push(c)}else r.push(u.data());e!=null&&(l.group=e),t.push(l)}const i=await Promise.all(r);return{data:bv(i),specs:t}}function wg(n,e){const t={};let r,s=0;for(const i of e){const o=i.name,a=i.dtype,u=i.shape,l=q(u);let c;if("quantization"in i){const h=i.quantization;if(h.dtype==="uint8"||h.dtype==="uint16"){if(!("min"in h&&"scale"in h))throw new Error(`Weight ${i.name} with quantization ${h.dtype} doesn't have corresponding metadata min and scale.`)}else if(h.dtype==="float16"){if(a!=="float32")throw new Error(`Weight ${i.name} is quantized with ${h.dtype} which only supports weights of type float32 not ${a}.`)}else throw new Error(`Weight ${i.name} has unknown quantization dtype ${h.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);const d=au[h.dtype],p=n.slice(s,s+l*d),m=h.dtype==="uint8"?new Uint8Array(p):new Uint16Array(p);if(a==="float32")if(h.dtype==="uint8"||h.dtype==="uint16"){c=new Float32Array(m.length);for(let y=0;y<m.length;y++){const g=m[y];c[y]=g*h.scale+h.min}}else if(h.dtype==="float16")r===void 0&&(r=Cv()),c=r(m);else throw new Error(`Unsupported quantization type ${h.dtype} for weight type float32.`);else if(a==="int32"){if(h.dtype!=="uint8"&&h.dtype!=="uint16")throw new Error(`Unsupported quantization type ${h.dtype} for weight type int32.`);c=new Int32Array(m.length);for(let y=0;y<m.length;y++){const g=m[y];c[y]=Math.round(g*h.scale+h.min)}}else throw new Error(`Unsupported dtype in weight '${o}': ${a}`);s+=l*d}else if(a==="string"){const h=q(i.shape);c=[];for(let d=0;d<h;d++){const p=new Uint32Array(n.slice(s,s+uo))[0];s+=uo;const m=new Uint8Array(n.slice(s,s+p));c.push(m),s+=p}}else{const h=au[a],d=n.slice(s,s+l*h);if(a==="float32")c=new Float32Array(d);else if(a==="int32")c=new Int32Array(d);else if(a==="bool")c=new Uint8Array(d);else if(a==="complex64"){c=new Float32Array(d);const p=new Float32Array(c.length/2),m=new Float32Array(c.length/2);for(let x=0;x<p.length;x++)p[x]=c[x*2],m[x]=c[x*2+1];const y=Gt(p,u,"float32"),g=Gt(m,u,"float32");t[o]=Dn(y,g),y.dispose(),g.dispose()}else throw new Error(`Unsupported dtype in weight '${o}': ${a}`);s+=l*h}a!=="complex64"&&(t[o]=Gt(c,u,a))}return t}function bv(n){if(n===null)throw new Error(`Invalid input value: ${JSON.stringify(n)}`);let e=0;const t=[];n.forEach(i=>{if(e+=i.byteLength,t.push(i.byteLength===i.buffer.byteLength?i:new i.constructor(i)),!(i instanceof Float32Array||i instanceof Int32Array||i instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${i.constructor.name}`)});const r=new Uint8Array(e);let s=0;return t.forEach(i=>{r.set(new Uint8Array(i.buffer),s),s+=i.byteLength}),r.buffer}const Dh=typeof Buffer<"u"&&(typeof Blob>"u"||typeof atob>"u"||typeof btoa>"u");function af(n){return Dh?Buffer.byteLength(n):new Blob([n]).size}function wv(n){if(Dh)return Buffer.from(n).toString("base64");const e=new Uint8Array(n);let t="";for(let r=0,s=e.length;r<s;r++)t+=String.fromCharCode(e[r]);return btoa(t)}function vv(n){if(Dh){const r=Buffer.from(n,"base64");return r.buffer.slice(r.byteOffset,r.byteOffset+r.byteLength)}const e=atob(n),t=new Uint8Array(e.length);for(let r=0;r<e.length;++r)t.set([e.charCodeAt(r)],r);return t.buffer}function Fh(n){if(n.length===1)return n[0];let e=0;n.forEach(s=>{e+=s.byteLength});const t=new Uint8Array(e);let r=0;return n.forEach(s=>{t.set(new Uint8Array(s),r),r+=s.byteLength}),t.buffer}function uf(n){const e="/";for(n=n.trim();n.endsWith(e);)n=n.slice(0,n.length-1);const t=n.split(e);return t[t.length-1]}function vg(n,e){const t={modelTopology:n.modelTopology,format:n.format,generatedBy:n.generatedBy,convertedBy:n.convertedBy,weightsManifest:e};return n.signature!=null&&(t.signature=n.signature),n.userDefinedMetadata!=null&&(t.userDefinedMetadata=n.userDefinedMetadata),n.modelInitializer!=null&&(t.modelInitializer=n.modelInitializer),n.initializerSignature!=null&&(t.initializerSignature=n.initializerSignature),n.trainingConfig!=null&&(t.trainingConfig=n.trainingConfig),t}function $g(n,e,t){const r={modelTopology:n.modelTopology,format:n.format,generatedBy:n.generatedBy,convertedBy:n.convertedBy};if(n.trainingConfig!=null&&(r.trainingConfig=n.trainingConfig),n.weightsManifest!=null){if(!e)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!t)throw new Error("modelJSON has weightsManifest but weightData is null");r.weightSpecs=e,r.weightData=t}return n.signature!=null&&(r.signature=n.signature),n.userDefinedMetadata!=null&&(r.userDefinedMetadata=n.userDefinedMetadata),n.modelInitializer!=null&&(r.modelInitializer=n.modelInitializer),n.initializerSignature!=null&&(r.initializerSignature=n.initializerSignature),r}async function Ph(n,e){let t,r;return n.weightsManifest!=null&&([t,r]=await e(n.weightsManifest)),$g(n,t,r)}function ni(n){if(n.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:n.modelTopology==null?0:af(JSON.stringify(n.modelTopology)),weightSpecsBytes:n.weightSpecs==null?0:af(JSON.stringify(n.weightSpecs)),weightDataBytes:n.weightData==null?0:n.weightData.byteLength}}function Sg(n){const e=[];for(const t of n)e.push(...t.weights);return e}function $v(){const n=t=>{let r=t<<13,s=0;for(;(r&8388608)===0;)s-=8388608,r<<=1;return r&=-8388609,s+=947912704,r|s},e=new Uint32Array(2048);e[0]=0;for(let t=1;t<1024;t++)e[t]=n(t);for(let t=1024;t<2048;t++)e[t]=939524096+(t-1024<<13);return e}function Sv(){const n=new Uint32Array(64);n[0]=0,n[31]=1199570944,n[32]=2147483648,n[63]=3347054592;for(let e=1;e<31;e++)n[e]=e<<23;for(let e=33;e<63;e++)n[e]=2147483648+(e-32<<23);return n}function Tv(){const n=new Uint32Array(64);for(let e=0;e<64;e++)n[e]=1024;return n[0]=n[32]=0,n}function Cv(){const n=$v(),e=Sv(),t=Tv();return r=>{const s=new ArrayBuffer(4*r.length),i=new Uint32Array(s);for(let o=0;o<r.length;o++){const a=r[o],u=n[t[a>>10]+(a&1023)]+e[a>>10];i[o]=u}return new Float32Array(s)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Fe{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return Fe.instance==null&&(Fe.instance=new Fe),Fe.instance}static registerSaveRouter(e){Fe.getInstance().saveRouters.push(e)}static registerLoadRouter(e){Fe.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return Fe.getHandlers(e,"save")}static getLoadHandlers(e,t){return Fe.getHandlers(e,"load",t)}static getHandlers(e,t,r){const s=[];return(t==="load"?Fe.getInstance().loadRouters:Fe.getInstance().saveRouters).forEach(o=>{const a=o(e,r);a!==null&&s.push(a)}),s}}const Ev=n=>Fe.registerSaveRouter(n),Nv=n=>Fe.registerLoadRouter(n),Iv=n=>Fe.getSaveHandlers(n),kv=(n,e)=>Fe.getLoadHandlers(n,e);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uu="tensorflowjs",lu=1,pr="models_store",zn="model_info_store";function Tg(){if(!B().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const n=typeof window>"u"?self:window,e=n.indexedDB||n.mozIndexedDB||n.webkitIndexedDB||n.msIndexedDB||n.shimIndexedDB;if(e==null)throw new Error("The current browser does not appear to support IndexedDB.");return e}function cu(n){const e=n.result;e.createObjectStore(pr,{keyPath:"modelPath"}),e.createObjectStore(zn,{keyPath:"modelPath"})}class $r{constructor(e){if(this.indexedDB=Tg(),e==null||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise((r,s)=>{const i=this.indexedDB.open(uu,lu);i.onupgradeneeded=()=>cu(i),i.onsuccess=()=>{const o=i.result;if(t==null){const a=o.transaction(pr,"readonly"),l=a.objectStore(pr).get(this.modelPath);l.onsuccess=()=>{if(l.result==null)return o.close(),s(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));r(l.result.modelArtifacts)},l.onerror=c=>(o.close(),s(l.error)),a.oncomplete=()=>o.close()}else{const a=ni(t),u=o.transaction(zn,"readwrite");let l=u.objectStore(zn);const c=l.put({modelPath:this.modelPath,modelArtifactsInfo:a});let h;c.onsuccess=()=>{h=o.transaction(pr,"readwrite");const p=h.objectStore(pr).put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:a});p.onsuccess=()=>r({modelArtifactsInfo:a}),p.onerror=m=>{l=u.objectStore(zn);const y=l.delete(this.modelPath);y.onsuccess=()=>(o.close(),s(p.error)),y.onerror=g=>(o.close(),s(p.error))}},c.onerror=d=>(o.close(),s(c.error)),u.oncomplete=()=>{h==null?o.close():h.oncomplete=()=>o.close()}}},i.onerror=o=>s(i.error)})}}$r.URL_SCHEME="indexeddb://";const Cg=n=>B().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith($r.URL_SCHEME)?_v(n.slice($r.URL_SCHEME.length)):null;Fe.registerSaveRouter(Cg);Fe.registerLoadRouter(Cg);function _v(n){return new $r(n)}function Rv(n){return n.startsWith($r.URL_SCHEME)?n.slice($r.URL_SCHEME.length):n}class Av{constructor(){this.indexedDB=Tg()}async listModels(){return new Promise((e,t)=>{const r=this.indexedDB.open(uu,lu);r.onupgradeneeded=()=>cu(r),r.onsuccess=()=>{const s=r.result,i=s.transaction(zn,"readonly"),a=i.objectStore(zn).getAll();a.onsuccess=()=>{const u={};for(const l of a.result)u[l.modelPath]=l.modelArtifactsInfo;e(u)},a.onerror=u=>(s.close(),t(a.error)),i.oncomplete=()=>s.close()},r.onerror=s=>t(r.error)})}async removeModel(e){return e=Rv(e),new Promise((t,r)=>{const s=this.indexedDB.open(uu,lu);s.onupgradeneeded=()=>cu(s),s.onsuccess=()=>{const i=s.result,o=i.transaction(zn,"readwrite"),a=o.objectStore(zn),u=a.get(e);let l;u.onsuccess=()=>{if(u.result==null)return i.close(),r(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const c=a.delete(e),h=()=>{l=i.transaction(pr,"readwrite");const p=l.objectStore(pr).delete(e);p.onsuccess=()=>t(u.result.modelArtifactsInfo),p.onerror=m=>r(u.error)};c.onsuccess=h,c.onerror=d=>(h(),i.close(),r(u.error))}},u.onerror=c=>(i.close(),r(u.error)),o.oncomplete=()=>{l==null?i.close():l.oncomplete=()=>i.close()}},s.onerror=i=>r(s.error)})}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const In="/",zr="tensorflowjs_models",Eg="info",Ov="model_topology",Dv="weight_specs",Fv="weight_data",Pv="model_metadata";function Ng(n){return{info:[zr,n,Eg].join(In),topology:[zr,n,Ov].join(In),weightSpecs:[zr,n,Dv].join(In),weightData:[zr,n,Fv].join(In),modelMetadata:[zr,n,Pv].join(In)}}function Ig(n){for(const e of Object.values(n))window.localStorage.removeItem(e)}function Lv(n){const e=n.split(In);if(e.length<3)throw new Error(`Invalid key format: ${n}`);return e.slice(1,e.length-1).join(In)}function Bv(n){return n.startsWith(Sr.URL_SCHEME)?n.slice(Sr.URL_SCHEME.length):n}class Sr{constructor(e){if(!B().getBool("IS_BROWSER")||typeof window>"u"||typeof window.localStorage>"u")throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,e==null||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=Ng(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const t=JSON.stringify(e.modelTopology),r=JSON.stringify(e.weightSpecs),s=ni(e);try{this.LS.setItem(this.keys.info,JSON.stringify(s)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,r),this.LS.setItem(this.keys.weightData,wv(e.weightData));const i={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:e.signature!=null?e.signature:void 0,userDefinedMetadata:e.userDefinedMetadata!=null?e.userDefinedMetadata:void 0,modelInitializer:e.modelInitializer!=null?e.modelInitializer:void 0,initializerSignature:e.initializerSignature!=null?e.initializerSignature:void 0,trainingConfig:e.trainingConfig!=null?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(i)),{modelArtifactsInfo:s}}catch{throw Ig(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${s.modelTopologyBytes}, weightSpecsBytes=${s.weightSpecsBytes}, weightDataBytes=${s.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(e==null)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if(e.modelTopologyType!=="JSON")throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},r=JSON.parse(this.LS.getItem(this.keys.topology));if(r==null)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=r;const s=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(s==null)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=s;const i=this.LS.getItem(this.keys.modelMetadata);if(i!=null){const a=JSON.parse(i);t.format=a.format,t.generatedBy=a.generatedBy,t.convertedBy=a.convertedBy,a.signature!=null&&(t.signature=a.signature),a.userDefinedMetadata!=null&&(t.userDefinedMetadata=a.userDefinedMetadata),a.modelInitializer!=null&&(t.modelInitializer=a.modelInitializer),a.initializerSignature!=null&&(t.initializerSignature=a.initializerSignature),a.trainingConfig!=null&&(t.trainingConfig=a.trainingConfig)}const o=this.LS.getItem(this.keys.weightData);if(o==null)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=vv(o),t}}Sr.URL_SCHEME="localstorage://";const kg=n=>B().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(Sr.URL_SCHEME)?Mv(n.slice(Sr.URL_SCHEME.length)):null;Fe.registerSaveRouter(kg);Fe.registerLoadRouter(kg);function Mv(n){return new Sr(n)}class Vv{constructor(){N(B().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),N(typeof window>"u"||typeof window.localStorage<"u",()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){const e={},t=zr+In,r=In+Eg;for(let s=0;s<this.LS.length;++s){const i=this.LS.key(s);if(i.startsWith(t)&&i.endsWith(r)){const o=Lv(i);e[o]=JSON.parse(this.LS.getItem(i))}}return e}async removeModel(e){e=Bv(e);const t=Ng(e);if(this.LS.getItem(t.info)==null)throw new Error(`Cannot find model at path '${e}'`);const r=JSON.parse(this.LS.getItem(t.info));return Ig(t),r}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Gr="://";class rt{constructor(){this.managers={}}static getInstance(){return rt.instance==null&&(rt.instance=new rt),rt.instance}static registerManager(e,t){N(e!=null,()=>"scheme must not be undefined or null."),e.endsWith(Gr)&&(e=e.slice(0,e.indexOf(Gr))),N(e.length>0,()=>"scheme must not be an empty string.");const r=rt.getInstance();N(r.managers[e]==null,()=>`A model store manager is already registered for scheme '${e}'.`),r.managers[e]=t}static getManager(e){const t=rt.getInstance().managers[e];if(t==null)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(rt.getInstance().managers)}}function Ki(n){if(n.indexOf(Gr)===-1)throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${rt.getSchemes().join(",")}`);return{scheme:n.split(Gr)[0],path:n.split(Gr)[1]}}async function _g(n,e,t=!1){N(n!==e,()=>`Old path and new path are the same: '${n}'`);const r=Fe.getLoadHandlers(n);N(r.length>0,()=>`Copying failed because no load handler is found for source URL ${n}.`),N(r.length<2,()=>`Copying failed because more than one (${r.length}) load handlers for source URL ${n}.`);const s=r[0],i=Fe.getSaveHandlers(e);N(i.length>0,()=>`Copying failed because no save handler is found for destination URL ${e}.`),N(i.length<2,()=>`Copying failed because more than one (${r.length}) save handlers for destination URL ${e}.`);const o=i[0],a=Ki(n).scheme,u=Ki(n).path,l=a===Ki(n).scheme,c=await s.load();t&&l&&await rt.getManager(a).removeModel(u);const h=await o.save(c);return t&&!l&&await rt.getManager(a).removeModel(u),h.modelArtifactsInfo}async function Uv(){const n=rt.getSchemes(),e={};for(const t of n){const r=await rt.getManager(t).listModels();for(const s in r){const i=t+Gr+s;e[i]=r[s]}}return e}async function zv(n){const e=Ki(n);return rt.getManager(e.scheme).removeModel(e.path)}async function Wv(n,e){return _g(n,e,!1)}async function Gv(n,e){return _g(n,e,!0)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Hv{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return this.textEncoder==null&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}setTimeoutCustom(e,t){if(typeof window>"u"||!B().getBool("USE_SETTIMEOUTCUSTOM")){setTimeout(e,t);return}this.functionRefs.push(e),setTimeout(()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")},t),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",r=>{if(r.source===window&&r.data.name===this.messageName){r.stopPropagation();const s=this.functionRefs[r.data.index];s(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0)}},!0))}}if(B().get("IS_BROWSER")){B().setPlatform("browser",new Hv);try{rt.registerManager(Sr.URL_SCHEME,new Vv)}catch{}try{rt.registerManager($r.URL_SCHEME,new Av)}catch{}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jv={importFetch:()=>require("node-fetch")};let Aa;class qv{constructor(){this.util=require("util"),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return B().global.fetch!=null?B().global.fetch(e,t):(Aa==null&&(Aa=jv.importFetch()),Aa(e,t))}now(){const e=process.hrtime();return e[0]*1e3+e[1]/1e6}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return e.length===0?"":new this.util.TextDecoder(t).decode(e)}}B().get("IS_NODE")&&!B().get("IS_BROWSER")&&B().setPlatform("node",new qv);/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function De(n,e="float32",t){return e=e||"float32",Tt(n),new Yr(n,e,t)}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kv(n,e){const t=E(n,"x","cast");if(!Gm(e))throw new Error(`Failed to cast to unknown dtype ${e}`);if(e==="string"&&t.dtype!=="string"||e!=="string"&&t.dtype==="string")throw new Error("Only strings can be casted to strings");const r={x:t},s={dtype:e};return D.runKernel(No,r,s)}const xe=O({cast_:Kv});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xv(n){const t={x:E(n,"x","clone","string_or_numeric")};return D.runKernel(Io,t)}const Rn=O({clone_:Xv});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lh(n,e=!1){console.log(n.toString(e))}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */xg();const Yv={buffer:De,cast:xe,clone:Rn,print:Lh};ov(Yv);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qv="model",Zv=".json",Jv=".weights.bin";function lf(n){return new Promise(e=>setTimeout(e)).then(n)}class Tr{constructor(e){if(!B().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(Tr.URL_SCHEME)&&(e=e.slice(Tr.URL_SCHEME.length)),(e==null||e.length===0)&&(e=Qv),this.modelJsonFileName=e+Zv,this.weightDataFileName=e+Jv}async save(e){if(typeof document>"u")throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const r=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],s=vg(e,r),i=window.URL.createObjectURL(new Blob([JSON.stringify(s)],{type:"application/json"})),o=this.modelJsonAnchor==null?document.createElement("a"):this.modelJsonAnchor;if(o.download=this.modelJsonFileName,o.href=i,await lf(()=>o.dispatchEvent(new MouseEvent("click"))),e.weightData!=null){const a=this.weightDataAnchor==null?document.createElement("a"):this.weightDataAnchor;a.download=this.weightDataFileName,a.href=t,await lf(()=>a.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:ni(e)}}}}Tr.URL_SCHEME="downloads://";class e2{constructor(e){if(e==null||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise((e,t)=>{const r=new FileReader;r.onload=s=>{const i=JSON.parse(s.target.result),o=i.modelTopology;if(o==null){t(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));return}if(i.weightsManifest==null){t(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));return}if(this.weightsFiles.length===0){e({modelTopology:o});return}const u=Ph(i,l=>this.loadWeights(l));e(u)},r.onerror=s=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),r.readAsText(this.jsonFile)})}loadWeights(e){const t=[],r=[];for(const o of e)t.push(...o.weights),r.push(...o.paths);const s=this.checkManifestAndWeightFiles(e),i=r.map(o=>this.loadWeightsFile(o,s[o]));return Promise.all(i).then(o=>[t,Fh(o)])}loadWeightsFile(e,t){return new Promise((r,s)=>{const i=new FileReader;i.onload=o=>{const a=o.target.result;r(a)},i.onerror=o=>s(`Failed to weights data from file of path '${e}'.`),i.readAsArrayBuffer(t)})}checkManifestAndWeightFiles(e){const t=[],r=this.weightsFiles.map(i=>uf(i.name)),s={};for(const i of e)i.paths.forEach(o=>{const a=uf(o);if(t.indexOf(a)!==-1)throw new Error(`Duplicate file basename found in weights manifest: '${a}'`);if(t.push(a),r.indexOf(a)===-1)throw new Error(`Weight file with basename '${a}' is not provided.`);s[o]=this.weightsFiles[r.indexOf(a)]});if(t.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return s}}const t2=n=>B().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(Tr.URL_SCHEME)?n2(n.slice(Tr.URL_SCHEME.length)):null;Fe.registerSaveRouter(t2);function n2(n="model"){return new Tr(n)}function r2(n){return new e2(n)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cf(n,e,t,r){o(n),t=t==null?0:t,r=r==null?1:r,a(t,r);let s=0;const i=u=>(u.then(l=>{const c=t+ ++s/n.length*(r-t);return e(c),l}),u);function o(u){N(u!=null&&Array.isArray(u)&&u.length>0,()=>"promises must be a none empty array")}function a(u,l){N(u>=0&&u<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${u}`),N(l>=0&&l<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${l}`),N(l>=u,()=>`startFraction must be no more than endFraction, but got startFraction ${u} and endFraction ${l}`)}return Promise.all(n.map(i))}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function Rg(n,e){e==null&&(e={});const t=e.fetchFunc==null?B().platform.fetch:e.fetchFunc,r=n.map(h=>t(h,e.requestInit,{isBinary:!0})),s=0,i=.5,a=(e.onProgress==null?await Promise.all(r):await cf(r,e.onProgress,s,i)).map(h=>h.arrayBuffer()),u=.5,l=1;return e.onProgress==null?await Promise.all(a):await cf(a,e.onProgress,u,l)}async function s2(n,e="",t,r){return Ag(o=>Rg(o,{requestInit:r}))(n,e,t)}function Ag(n){return async(e,t="",r)=>{const s=e.map(()=>!1),i={},o=r!=null?r.map(()=>!1):[],a=[];if(e.forEach((p,m)=>{let y=0;p.weights.forEach(g=>{const x="quantization"in g?g.quantization.dtype:g.dtype,$=au[x]*q(g.shape),C=()=>{s[m]=!0,i[m]==null&&(i[m]=[]),i[m].push({manifestEntry:g,groupOffset:y,sizeBytes:$})};r!=null?r.forEach((S,I)=>{S===g.name&&(C(),o[I]=!0)}):C(),a.push(g.name),y+=$})}),!o.every(p=>p)){const p=r.filter((m,y)=>!o[y]);throw new Error(`Could not find weights in manifest with names: ${p.join(", ")}. 
Manifest JSON has weights with names: ${a.join(", ")}.`)}const u=s.reduce((p,m,y)=>(m&&p.push(y),p),[]),l=[];u.forEach(p=>{e[p].paths.forEach(m=>{const y=t+(t.endsWith("/")?"":"/")+m;l.push(y)})});const c=await n(l),h={};let d=0;return u.forEach(p=>{const m=e[p].paths.length;let y=0;for(let S=0;S<m;S++)y+=c[d+S].byteLength;const g=new ArrayBuffer(y),x=new Uint8Array(g);let $=0;for(let S=0;S<m;S++){const I=new Uint8Array(c[d+S]);x.set(I,$),$+=I.byteLength}i[p].forEach(S=>{const I=g.slice(S.groupOffset,S.groupOffset+S.sizeBytes),A=wg(I,[S.manifestEntry]);for(const L in A)h[L]=A[L]}),d+=m}),h}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const i2="application/octet-stream",o2="application/json";class Bh{constructor(e,t){if(this.DEFAULT_METHOD="POST",t==null&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,t.fetchFunc!=null?(N(typeof t.fetchFunc=="function",()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=t.fetchFunc):this.fetch=B().platform.fetch,N(e!=null&&e.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(e)&&N(e.length===2,()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`),this.path=e,t.requestInit!=null&&t.requestInit.body!=null)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const r=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],s=vg(e,r);t.body.append("model.json",new Blob([JSON.stringify(s)],{type:o2}),"model.json"),e.weightData!=null&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:i2}),"model.weights.bin");const i=await this.fetch(this.path,t);if(i.ok)return{modelArtifactsInfo:ni(e),responses:[i]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${i.status}.`)}async load(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch{let o=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?o+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":o+=" Please make sure the server is serving valid JSON for this request.",new Error(o)}const r=t.modelTopology,s=t.weightsManifest;if(r==null&&s==null)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return Ph(t,i=>this.loadWeights(i))}async loadWeights(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[r,s]=a2(t),i=this.weightPathPrefix||r,o=Sg(e),a=[],u=[];for(const c of e)for(const h of c.paths)this.weightUrlConverter!=null?u.push(this.weightUrlConverter(h)):a.push(i+h+s);this.weightUrlConverter&&a.push(...await Promise.all(u));const l=await Rg(a,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress});return[o,Fh(l)]}}Bh.URL_SCHEME_REGEX=/^https?:\/\//;function a2(n){const e=n.lastIndexOf("/"),t=n.lastIndexOf("?"),r=n.substring(0,e),s=t>e?n.substring(t):"";return[r+"/",s]}function hu(n){return n.match(Bh.URL_SCHEME_REGEX)!=null}const Og=(n,e)=>{if(typeof fetch>"u"&&(e==null||e.fetchFunc==null))return null;{let t=!0;if(Array.isArray(n)?t=n.every(r=>hu(r)):t=hu(n),t)return Mh(n,e)}return null};Fe.registerSaveRouter(Og);Fe.registerLoadRouter(Og);function Mh(n,e){return new Bh(n,e)}function u2(n,e){return Mh(n,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Oa{constructor(e){this.modelArtifacts=e}load(){return this.modelArtifacts}}class Dg{constructor(e){this.saveHandler=e}save(e){return this.saveHandler(e)}}class l2{constructor(e){e.load&&(this.load=()=>Promise.resolve(e.load())),e.save&&(this.save=t=>Promise.resolve(e.save(t)))}}function c2(n,e,t,r){const s=arguments;return new l2(Fg(...s))}function Fg(n,e,t,r){return arguments.length===1?n.modelTopology!=null||n.weightSpecs!=null?new Oa(n):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Oa({modelTopology:n})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Oa({modelTopology:n,weightSpecs:e,weightData:t,trainingConfig:r}))}function h2(n){return new Dg(n)}function d2(n){return new Dg(n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vh=Object.freeze(Object.defineProperty({__proto__:null,browserFiles:r2,browserHTTPRequest:u2,concatenateArrayBuffers:Fh,decodeWeights:wg,encodeWeights:xv,fromMemory:c2,fromMemorySync:Fg,getLoadHandlers:kv,getModelArtifactsForJSON:Ph,getModelArtifactsForJSONSync:$g,getModelArtifactsInfoForJSON:ni,getSaveHandlers:Iv,getWeightSpecs:Sg,http:Mh,isHTTPScheme:hu,loadWeights:s2,registerLoadRouter:Nv,registerSaveRouter:Ev,weightsLoaderFactory:Ag,withSaveHandler:h2,withSaveHandlerSync:d2,copyModel:Wv,listModels:Uv,moveModel:Gv,removeModel:zv},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function p2(n,e,t=!1,r=!1){let s=E(n,"a","matMul"),i=E(e,"b","matMul");[s,i]=Pe(s,i);const o={a:s,b:i},a={transposeA:t,transposeB:r};return D.runKernel(nl,o,a)}const ge=O({matMul_:p2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function f2(n,e,t=1,r=0,s="int32"){if(e<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${e}`);const o={indices:E(n,"indices","oneHot","int32")},a={dtype:s,depth:e,onValue:t,offValue:r};return D.runKernel(Cc,o,a)}const Vs=O({oneHot_:f2});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function m2(){B().set("PROD",!0)}function g2(){B().set("DEBUG",!0)}function y2(){B().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function x2(n){B().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(n+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function b2(){D.disposeVariables()}function Zt(){return D}function w2(){return D.memory()}function v2(n){return D.profile(n)}function ie(n,e){return D.tidy(n,e)}function ut(n){_h(n).forEach(t=>t.dispose())}function nn(n){return D.keep(n)}function $2(n){return D.time(n)}function S2(n){return D.setBackend(n)}function T2(){return D.ready()}function Pg(){return D.backendName}function C2(n){D.removeBackend(n)}function E2(n){return D.findBackend(n)}function N2(n){return D.findBackendFactory(n)}function Lg(n,e,t=1){return D.registerBackend(n,e,t)}function Bg(){return D.backend}function I2(n,e){B().setPlatform(n,e)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function k2(n){const t={input:E(n,"input","imag")};return D.runKernel(ql,t)}const ri=O({imag_:k2});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _2(n){const t={x:E(n,"x","neg")};return D.runKernel(bc,t)}const mn=O({neg_:_2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function R2(n){const t={input:E(n,"input","real")};return D.runKernel(Fc,t)}const Zr=O({real_:R2});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function A2(n,e,t){const r=E(n,"x","transpose");if(e==null&&(e=r.shape.map((o,a)=>a).reverse()),N(r.rank===e.length,()=>`Error in transpose: rank of input ${r.rank} must match length of perm ${e}.`),e.forEach(o=>{N(o>=0&&o<r.rank,()=>`All entries in 'perm' must be between 0 and ${r.rank-1} but got ${e}`)}),r.rank<=1)return r.clone();const s={x:r},i={perm:e};return r.dtype==="complex64"?ie(()=>{let o=Zr(r),a=ri(r);return o=D.runKernel(Fs,{x:o},i),a=D.runKernel(Fs,{x:a},i),t&&(a=mn(a)),Dn(o,a)}):D.runKernel(Fs,s,i)}const Us=O({transpose_:A2});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function O2(n,e,t){const r=E(n,"labels","confusionMatrix"),s=E(e,"predictions","confusionMatrix");N(t==null||t>0&&Number.isInteger(t),()=>`If provided, numClasses must be a positive integer, but got ${t}`),N(r.rank===1,()=>`Expected the rank of labels to be 1, but got ${r.rank}`),N(s.rank===1,()=>`Expected the rank of predictions to be 1, but got ${s.rank}`),N(r.shape[0]===s.shape[0],()=>`Mismatch in the number of examples: ${r.shape[0]} vs. ${s.shape[0]}. Labels and predictions should have the same number of elements.`),N(t>0&&Number.isInteger(t),()=>`numClasses is required to be a positive integer, but got ${t}`);const i=Vs(xe(r,"int32"),t),o=Vs(xe(s,"int32"),t),a=Us(i),u=ge(a,o);return xe(u,"int32")}const D2=O({confusionMatrix_:O2});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const F2=Object.freeze(Object.defineProperty({__proto__:null,confusionMatrix:D2},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zs(n,e){const t=n.length,r=[];for(let s=0;s<t;s++){const i=t-1-s,o=n[i]||1;(e[e.length-1-s]||1)>1&&o===1&&r.unshift(i)}return r}function Uh(n,e){const t=[];for(let r=0;r<e.length;r++){const s=n[n.length-r-1],i=e.length-r-1,o=e[i];(s==null||s===1&&o>1)&&t.unshift(i)}return t}function fe(n,e){const t=[],r=Math.max(n.length,e.length);for(let s=0;s<r;s++){let i=n[n.length-s-1];i==null&&(i=1);let o=e[e.length-s-1];if(o==null&&(o=1),i===1)t.unshift(o);else if(o===1)t.unshift(i);else if(i!==o){const a=`Operands could not be broadcast together with shapes ${n} and ${e}.`;throw Error(a)}else t.unshift(i)}return t}const P2=Object.freeze(Object.defineProperty({__proto__:null,getBroadcastDims:zs,getReductionAxes:Uh,assertAndGetBroadcastShape:fe},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zh(n,e,t){if(kr(n),e!=null&&e.length!==3)throw new Error("tensor3d() requires shape to have three numbers");const r=xn(n,t);if(r.length!==3&&r.length!==1)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(r.length===1&&e==null)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return Qn(n,e,r,t)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let ar;function Mg(n,e=3){if(e>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(n==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let t=!1,r=!1,s=!1,i=!1,o=!1,a=!1;if(n.data instanceof Uint8Array)t=!0;else if(typeof ImageData<"u"&&n instanceof ImageData)r=!0;else if(typeof HTMLVideoElement<"u"&&n instanceof HTMLVideoElement)s=!0;else if(typeof HTMLImageElement<"u"&&n instanceof HTMLImageElement)i=!0;else if(n.getContext!=null)o=!0;else if(typeof ImageBitmap<"u"&&n instanceof ImageBitmap)a=!0;else throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${n.constructor.name}`);if(io(to,D.backendName)!=null){const m={pixels:n},y={numChannels:e};return D.runKernel(to,m,y)}const[l,c]=s?[n.videoWidth,n.videoHeight]:[n.width,n.height];let h;if(o)h=n.getContext("2d").getImageData(0,0,l,c).data;else if(r||t)h=n.data;else if(i||s||a){if(ar==null)if(typeof document>"u")if(typeof OffscreenCanvas<"u"&&typeof OffscreenCanvasRenderingContext2D<"u")ar=new OffscreenCanvas(1,1).getContext("2d");else throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");else ar=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});ar.canvas.width=l,ar.canvas.height=c,ar.drawImage(n,0,0,l,c),h=ar.getImageData(0,0,l,c).data}let d;if(e===4)d=new Int32Array(h);else{const m=l*c;d=new Int32Array(m*e);for(let y=0;y<m;y++)for(let g=0;g<e;++g)d[y*e+g]=h[y*4+g]}return zh(d,[c,l,e],"int32")}function L2(n){return n!=null&&n.data instanceof Uint8Array}function B2(){return typeof window<"u"&&typeof ImageBitmap<"u"&&window.hasOwnProperty("createImageBitmap")}function M2(n){return n!=null&&n.width!==0&&n.height!==0}function V2(n){return B2()&&!(n instanceof ImageBitmap)&&M2(n)&&!L2(n)}async function U2(n,e=3){let t=null;if(B().getBool("WRAP_TO_IMAGEBITMAP")&&V2(n)){let r;try{r=await createImageBitmap(n,{premultiplyAlpha:"none"})}catch{r=null}r!=null&&r.width===n.width&&r.height===n.height?t=r:t=n}else t=n;return Mg(t,e)}async function Ro(n,e){let t=E(n,"img","toPixels");if(!(n instanceof be)){const l=t;t=xe(l,"int32"),l.dispose()}if(t.rank!==2&&t.rank!==3)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${t.rank}.`);const[r,s]=t.shape.slice(0,2),i=t.rank===2?1:t.shape[2];if(i>4||i===2)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${i}`);if(t.dtype!=="float32"&&t.dtype!=="int32")throw new Error(`Unsupported type for toPixels: ${t.dtype}. Please use float32 or int32 tensors.`);const o=await t.data(),a=t.dtype==="float32"?255:1,u=new Uint8ClampedArray(s*r*4);for(let l=0;l<r*s;++l){const c=[0,0,0,255];for(let d=0;d<i;d++){const p=o[l*i+d];if(t.dtype==="float32"){if(p<0||p>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${p}.`)}else if(t.dtype==="int32"&&(p<0||p>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${p}.`);i===1?(c[0]=p*a,c[1]=p*a,c[2]=p*a):c[d]=p*a}const h=l*4;u[h+0]=Math.round(c[0]),u[h+1]=Math.round(c[1]),u[h+2]=Math.round(c[2]),u[h+3]=Math.round(c[3])}if(e!=null){e.width=s,e.height=r;const l=e.getContext("2d"),c=new ImageData(u,s,r);l.putImageData(c,0,0)}return t!==n&&t.dispose(),u}const Ao=O({fromPixels_:Mg}),z2=Object.freeze(Object.defineProperty({__proto__:null,fromPixelsAsync:U2,toPixels:Ro,fromPixels:Ao},Symbol.toStringTag,{value:"Module"}));function Wh(n,e){const t=n.shape.length,r=e.shape.length;if(t<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${t}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if(e.dtype!=="int32")throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.shape[r-1]>t)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${e.shape[r-1]} vs. ${t}`);if(q(n.shape)===0)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${n.shape}.`);const s=e.shape,i=s[s.length-1];let o=1;for(let h=0;h<s.length-1;++h)o*=s[h];const a=n.shape,u=s.slice();u.pop();let l=1;for(let h=i;h<t;++h)l*=a[h],u.push(a[h]);const c=[...ze(n.shape).map(h=>h/l),1].slice(0,i);return[u,o,l,c]}const W2=Object.freeze(Object.defineProperty({__proto__:null,prepareAndValidate:Wh},Symbol.toStringTag,{value:"Module"}));function Gh(n,e,t){const r=e.rank>1?e.shape[e.rank-1]:1,s=e.rank>1?e.rank-1:1,i=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${t.shape}, indices.shape: ${e.shape}, shape: ${n}, sliceDim: ${r}, and batchDim: ${s}.`;if(t.rank<s)throw new Error(i+` update.rank < ${s}. `);if(n.length<r+(t.rank-s))throw new Error(i+` Output shape length < ${r+(t.rank-s)}`);if(t.rank!==s+n.length-r)throw new Error(i+` update.rank != ${s+n.length-r}`);for(let o=0;o<s;++o)if(t.shape[o]!==e.shape[o])throw new Error(i+` updates.shape[${o}] (${t.shape[o]}) != indices.shape[${o}] (${e.shape[o]}).`);for(let o=0;o<t.rank-s;++o)if(t.shape[o+s]!==n[o+r])throw new Error(i+` updates.shape[${o+s}] (${t.shape[o+s]}) != shape[${o+s}] (${n[o+s]})`)}function Hh(n,e,t){if(e.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${e.rank}.`);if(n.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${n.rank}.`);if(e.dtype!=="int32")throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${e.dtype}`);if(t.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${t}`);if(t.length===0){if(e.size===0)throw new Error(`Indices specified for empty output. indices shape: ${e.shape}`);if(n.size===0)throw new Error(`Updates specified for empty output. updates shape: ${n.shape}`)}Gh(t,e,n)}function Oo(n,e,t){const r=e.shape.length,s=r>1?e.shape[r-1]:1,i=t.length;let o=1;for(let h=s;h<i;++h)o*=t[h];const a=s<1?1:s,u=q(e.shape)/a,l=[...ze(t.slice(0,s)),1],c=q(t);return{sliceRank:s,numUpdates:u,sliceSize:o,strides:l,outputSize:c}}const G2=Object.freeze(Object.defineProperty({__proto__:null,validateUpdateShape:Gh,validateInput:Hh,calculateShapes:Oo},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const du=-2,H2=-1;function Vg(n,e,t){const r=n.shape.length;N(r===e.length,()=>`Error in slice${r}D: Length of begin ${e} must match the rank of the array (${r}).`),N(r===t.length,()=>`Error in slice${r}D: Length of size ${t} must match the rank of the array (${r}).`);for(let s=0;s<r;++s)N(e[s]+t[s]<=n.shape[s],()=>`Error in slice${r}D: begin[${s}] + size[${s}] (${e[s]+t[s]}) would overflow input.shape[${s}] (${n.shape[s]})`)}function j2(n){const e=[];let t=0;for(;n>0;)n&1&&e.push(t),n/=2,t++;return e}function Ug(n,e,t){const r=[];for(let s=0;s<n.length;s++)r[s]=Math.ceil((e[s]-n[s])/t[s]);return r}function zg(n,e,t,r){const s=[...n];for(let i=s.length;i<r.length;i++)s.push(1);for(let i=0;i<t;i++)i===0?s[e]=1:(s.splice(e,0,1),s.pop());return s}function Wg(n,e,t){return t<=n?t:t-(e-1)}function Gg(n,e){const t=[];for(let r=0;r<n;r++)t.push(e+r);return t}function q2(n,e,t,r,s,i,o,a,u){const l=n.length;let c=new Array(l),h=new Array(l),d=new Array(l);if(e.length&&t>0){const p=e[0],m=t+1;c=Hg(o,p,m,r,n),h=jg(a,p,m,s,n),d=zg(i,p,m,n)}else for(let p=0;p<l;p++)c[p]=Kg(o,r,i,n,p,u),h[p]=Xg(a,s,i,n,p,u),d[p]=qg(i,p,u);return{begin:c,end:h,strides:d}}function Hg(n,e,t,r,s){const i=[...s],o=Gg(t,e);for(let a=0;a<i.length;a++)if(o.indexOf(a)>-1)i[a]=0;else{const u=Wg(e,t,a);let l=r[u];n&1<<u&&(l=0),i[a]=l}return i}function jg(n,e,t,r,s){const i=[...s],o=Gg(t,e);for(let a=0;a<i.length;a++)if(o.indexOf(a)>-1)i[a]=Number.MAX_SAFE_INTEGER;else{const u=Wg(e,t,a);let l=r[u];n&1<<u&&(l=Number.MAX_SAFE_INTEGER),i[a]=l}for(let a=0;a<i.length;a++){const u=s[a];i[a]<0&&(i[a]+=u),i[a]=Ps(0,i[a],s[a])}return i}function qg(n,e,t){let r=n[e];return(t&1<<e||r==null)&&(r=1),r}function Kg(n,e,t,r,s,i){let o=e[s];const a=t[s]||1;(n&1<<s||i&1<<s||o==null)&&(a>0?o=Number.MIN_SAFE_INTEGER:o=Number.MAX_SAFE_INTEGER);const u=r[s];return o<0&&(o+=u),o=Ps(0,o,u-1),o}function Xg(n,e,t,r,s,i){let o=e[s];const a=t[s]||1;(n&1<<s||i&1<<s||o==null)&&(a>0?o=Number.MAX_SAFE_INTEGER:o=Number.MIN_SAFE_INTEGER);const u=r[s];return o<0&&(o+=u),a>0?o=Ps(0,o,u):o=Ps(-1,o,u-1),o}function jh(n,e,t){let r=t.length;for(let s=0;s<t.length;s++)if(t[s]>1){r=s;break}for(let s=r+1;s<t.length;s++)if(e[s]>0||t[s]!==n[s])return!1;return!0}function qh(n,e){let t=n.length>0?n[n.length-1]:1;for(let r=0;r<n.length-1;r++)t+=n[r]*e[r];return t}function Yg(n,e,t){let r;const s=n.shape.length;typeof e=="number"?r=[e,...new Array(s-1).fill(0)]:e.length<s?r=e.concat(new Array(s-e.length).fill(0)):r=e.slice(),r.forEach(o=>{N(o!==-1,()=>"slice() does not support negative begin indexing.")});let i;return t==null?i=new Array(s).fill(-1):typeof t=="number"?i=[t,...new Array(s-1).fill(-1)]:t.length<s?i=t.concat(new Array(s-t.length).fill(-1)):i=t,i=i.map((o,a)=>o>=0?o:(N(o===-1,()=>`Negative size values should be exactly -1 but got ${o} for the slice() size at index ${a}.`),n.shape[a]-r[a])),[r,i]}function Qg(n,e,t,r,s,i,o,a,u){let l;if(r==null?(l=new Array(e.length),l.fill(1)):l=r,o!=null&&(o&o-1)!==0)throw new Error("Multiple ellipses in slice is not allowed.");let c=!1;const h={dims:l.length,numAddAxisAfterEllipsis:0,begin:e.slice(),end:t.slice(),strides:l.slice(),beginMask:s,endMask:i,ellipsisMask:o,newAxisMask:a,shrinkAxisMask:u};for(let C=0;C<h.dims;C++)c&&(1<<C&a)!==0&&h.numAddAxisAfterEllipsis++,1<<C&o&&(c=!0);c||(h.ellipsisMask|=1<<h.dims,h.dims++);const d={dims:n.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};K2(h,d);let p=!0,m=!0,y=!0;const g=[],x=[];for(let C=0;C<n.length;++C){if(d.strides[C]===0)throw Error(`strides[${C}] must be non-zero`);const S=!!(d.shrinkAxisMask&1<<C),I=n[C];if(I===-1){g.push(S?1:-1);continue}const A=[d.beginMask&1<<C,d.endMask&1<<C],L=[d.strides[C]>0?0:-1,d.strides[C]>0?I:I-1];if(S&&d.strides[C]<=0)throw Error("only stride 1 allowed on non-range indexing.");y=y&&d.strides[C]===1;const P=!!(d.beginMask&1<<C&&d.endMask&1<<C);if(d.beginValid&&d.endValid){if(S){const j=d.begin[C]<0?I+d.begin[C]:d.begin[C];if(d.begin[C]=j,d.end[C]=d.begin[C]+1,j<0||j>=I)throw Error(`slice index ${d.begin[C]} of dimension ${C} out of bounds.`)}else d.begin[C]=hf(d.begin[C],0,d.strides[C],I,A,L),d.end[C]=hf(d.end[C],1,d.strides[C],I,A,L);const V=d.strides[C]===1&&d.begin[C]===0&&d.end[C]===I;p=p&&V,m=m&&(C===0&&d.strides[C]===1||V)}else p=p&&d.strides[C]===1&&P,m=m&&(C===0&&d.strides[C]===1||P);let M,U=!1;if(d.beginValid&&d.endValid?(M=d.end[C]-d.begin[C],U=!0):S?(M=1,U=!0):P&&I>=0&&(d.strides[C]<0?M=-I:M=I,U=!0),U){let V;M===0||M<0!=d.strides[C]<0?V=0:V=Math.trunc(M/d.strides[C])+(M%d.strides[C]!==0?1:0),g.push(V)}else g.push(-1)}for(let C=0;C<d.finalShapeGatherIndices.length;++C){const S=d.finalShapeGatherIndices[C];S>=0?x.push(g[S]):S===du&&x.push(1)}return{finalShapeSparse:x.filter((C,S)=>d.finalShapeGatherIndices[S]!==du),finalShape:x,isIdentity:p,sliceDim0:m,isSimpleSlice:y,begin:d.begin,end:d.end,strides:d.strides}}function K2(n,e){e.beginMask=0,e.endMask=0,e.shrinkAxisMask=0;let t=0;e.beginValid=n.begin!=null,e.endValid=n.end!=null,e.begin=new Array(e.dims),e.end=new Array(e.dims),e.strides=new Array(e.dims),e.finalShapeGatherIndices=[],e.finalShapeGatherIndicesSparse=[],e.inputShapeGatherIndicesSparse=new Array(e.dims);for(let r=0;r<n.dims;r++)if(1<<r&n.ellipsisMask){const s=Math.min(e.dims-(n.dims-r)+1+n.numAddAxisAfterEllipsis,e.dims);for(;t<s;t++)e.begin[t]=0,e.end[t]=0,e.strides[t]=1,e.beginMask|=1<<t,e.endMask|=1<<t,e.finalShapeGatherIndices.push(t),e.finalShapeGatherIndicesSparse.push(-1),e.inputShapeGatherIndicesSparse[t]=r}else if(1<<r&n.newAxisMask)e.finalShapeGatherIndices.push(du),e.finalShapeGatherIndicesSparse.push(-1);else{if(t===e.begin.length)throw Error(`Index out of range using input dim ${t}; input has only ${e.dims} dims, ${e.begin.length}.`);n.begin!=null&&(e.begin[t]=n.begin[r]),n.end!=null&&(e.end[t]=n.end[r]),e.strides[t]=n.strides[r],n.beginMask&1<<r&&(e.beginMask|=1<<t),n.endMask&1<<r&&(e.endMask|=1<<t),n.shrinkAxisMask&1<<r?(e.finalShapeGatherIndices.push(H2),e.finalShapeGatherIndicesSparse.push(-1),e.shrinkAxisMask|=1<<t):(e.finalShapeGatherIndices.push(t),e.finalShapeGatherIndicesSparse.push(r)),e.inputShapeGatherIndicesSparse[t]=r,t++}}function hf(n,e,t,r,s,i){if(s[e])return t>0?i[e]:i[e+1&1];{const o=n<0?r+n:n;return o<i[0]?i[0]:o>i[1]?i[1]:o}}const Zg=Object.freeze(Object.defineProperty({__proto__:null,assertParamsValid:Vg,maskToAxes:j2,computeOutShape:Ug,stridesWithElidedDims:zg,getNormalizedAxes:q2,startIndicesWithElidedDims:Hg,stopIndicesWithElidedDims:jg,stridesForAxis:qg,startForAxis:Kg,stopForAxis:Xg,isSliceContinous:jh,computeFlatOffset:qh,parseSliceParams:Yg,sliceInfo:Qg},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Jg{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class Un{constructor(){this.classNameMap={}}static getMap(){return Un.instance==null&&(Un.instance=new Un),Un.instance}static register(e){Un.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function Zn(n){N(n.className!=null,()=>"Class being registered does not have the static className property defined."),N(typeof n.className=="string",()=>"className is required to be a string, but got type "+typeof n.className),N(n.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),Un.register(n)}const X2=Object.freeze(Object.defineProperty({__proto__:null,Serializable:Jg,SerializationMap:Un,registerClass:Zn},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Y2=.001,ey=.1;function Q2(n,e,t){return t==null&&(t=Kh()),pu(n,e,(r,s)=>Xh(r,s,t))}function Kh(){return D.backend.floatPrecision()===32?Y2:ey}function pu(n,e,t){let r=!0;if((Qe(n)||Qe(e))&&(r=!1),Qe(n)&&Qe(e)&&(r=!0),r){const o=n.constructor.name,a=e.constructor.name;if(o!==a)throw new Error(`Arrays are of different type. Actual: ${o}. Expected: ${a}`)}if(Array.isArray(n)&&Array.isArray(e)){const o=xn(n),a=xn(e);if(!Oe(o,a))throw new Error(`Arrays have different shapes. Actual: [${o}]. Expected: [${a}]`)}const s=Qe(n)?n:An(n),i=Qe(e)?e:An(e);if(s.length!==i.length)throw new Error(`Arrays have different lengths actual: ${s.length} vs expected: ${i.length}.
Actual:   ${s}.
Expected: ${i}.`);for(let o=0;o<i.length;++o){const a=s[o],u=i[o];if(!t(a,u))throw new Error(`Arrays differ: actual[${o}] = ${a}, expected[${o}] = ${u}.
Actual:   ${s}.
Expected: ${i}.`)}typeof expect<"u"&&expect().nothing()}function Z2(n,e){n().then(()=>e.fail(),()=>e()),typeof expect<"u"&&expect().nothing()}function J2(n,e){const t=typeof e=="string"||typeof e=="number"||typeof e=="boolean"?[e]:e;return kn(n)||kn(n[0])||kn(e)||kn(e[0])?pu(n,t,(r,s)=>r==s):pu(n,e,(r,s)=>Xh(r,s,0))}function e$(n,e,t){if(t==null&&(t=Kh()),!Xh(n,e,t))throw new Error(`Numbers differ: actual === ${n}, expected === ${e}`);typeof expect<"u"&&expect().nothing()}function Xh(n,e,t){return!isFinite(n)&&!isFinite(e)?!0:!(isNaN(n)||isNaN(e)||Math.abs(n-e)>t)}function t$(n,e,t){for(let r=0;r<n.length;r++)if(n[r]<e||n[r]>t)throw new Error(`Value out of range:${n[r]} low: ${e}, high: ${t}`)}function n$(n,e){const t=new Float32Array(n),r=new Float32Array(e);if(t.length!==r.length)throw new Error(`Expected ArrayBuffer to be of length ${r.length}, but it was ${t.length}`);for(let s=0;s<r.length;s++)if(t[s]!==r[s])throw new Error(`Expected ArrayBuffer value at ${s} to be ${r[s]} but got ${t[s]} instead`)}function ty(n){for(let e=0;e<n.length;e++){const t=n[e];Array.isArray(t)?ty(t):n[e]=_n(t)}return n}function r$(n){const e=document.createElement("video");return"playsInline"in e&&(e.playsInline=!0),e.muted=!0,e.loop=!0,e.style.position="fixed",e.style.left="0px",e.style.top="0px",e.preload="auto",e.appendChild(n),new Promise(t=>{e.addEventListener("loadeddata",r=>t(e)),e.load()})}async function s$(n){await n.play(),"requestVideoFrameCallback"in n&&await new Promise(e=>{n.requestVideoFrameCallback(e)})}const i$=Object.freeze(Object.defineProperty({__proto__:null,TEST_EPSILON_FLOAT16:ey,expectArraysClose:Q2,testEpsilon:Kh,expectPromiseToFail:Z2,expectArraysEqual:J2,expectNumbersClose:e$,expectValuesInRange:t$,expectArrayBuffersEqual:n$,encodeStrings:ty,createVideoElement:r$,play:s$},Symbol.toStringTag,{value:"Module"}));/** @license See the LICENSE file. */const o$="4.1.0";/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a$(n,e){let t=E(n,"a","add"),r=E(e,"b","add");[t,r]=Pe(t,r);const s={a:t,b:r};return D.runKernel(Eo,s)}const se=O({add_:a$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function u$(n,e){let t=E(n,"a","floorDiv"),r=E(e,"b","floorDiv");[t,r]=Pe(t,r);const s={a:t,b:r};return D.runKernel(Vl,s)}const Yh=O({floorDiv_:u$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function l$(n,e){let t=E(n,"a","div"),r=E(e,"b","div");if([t,r]=Pe(t,r),t.dtype==="int32"&&r.dtype==="int32")return Yh(t,r);const s={a:t,b:r},i={};return D.runKernel(Il,s,i)}const Se=O({div_:l$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function c$(n,e){let t=E(n,"a","mul"),r=E(e,"b","mul");[t,r]=Pe(t,r);const s={a:t,b:r};return D.runKernel(xc,s)}const Y=O({mul_:c$});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function h$(n){const e=E(n,"x","abs");if(e.dtype==="complex64"){const t={x:e};return D.runKernel(ll,t)}else{const t={x:e};return D.runKernel(Uu,t)}}const bt=O({abs_:h$});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function d$(n){const t={x:E(n,"x","acos")};return D.runKernel(zu,t)}const ny=O({acos_:d$});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function p$(n){const t={x:E(n,"x","acosh")};return D.runKernel(Wu,t)}const ry=O({acosh_:p$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function f$(n){N(Array.isArray(n),()=>"The argument passed to tf.addN() must be a list of tensors"),N(n.length>=1,()=>`Must pass at least one tensor to tf.addN(), but got ${n.length}`);const e=n.map((s,i)=>E(s,`tensors${i}`,"addN")),t=e[0];e.forEach(s=>{if(s.dtype!==t.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),e.forEach(s=>{if(!Oe(s.shape,t.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});const r=e;return D.runKernel(Gu,r)}const sy=O({addN_:f$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function m$(n,e=null,t=!1){const s={x:E(n,"x","all","bool")},i={axis:e,keepDims:t};return D.runKernel(Hu,s,i)}const iy=O({all_:m$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function g$(n,e=null,t=!1){const s={x:E(n,"x","any","bool")},i={axis:e,keepDims:t};return D.runKernel(ju,s,i)}const oy=O({any_:g$});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function y$(n,e=0){const r={x:E(n,"x","argMax")},s={axis:e};return D.runKernel(qu,r,s)}const Qh=O({argMax_:y$});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function x$(n,e=0){const r={x:E(n,"x","argMin")},s={axis:e};return D.runKernel(Ku,r,s)}const ay=O({argMin_:x$});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function b$(n){const t={x:E(n,"x","asin")};return D.runKernel(Xu,t)}const uy=O({asin_:b$});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function w$(n){const t={x:E(n,"x","asinh")};return D.runKernel(Yu,t)}const ly=O({asinh_:w$});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function v$(n){const t={x:E(n,"x","atan")};return D.runKernel(Qu,t)}const cy=O({atan_:v$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $$(n,e){let t=E(n,"a","atan2"),r=E(e,"b","atan2");[t,r]=Pe(t,r);const s={a:t,b:r};return D.runKernel(Ju,s)}const hy=O({atan2_:$$});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function S$(n){const t={x:E(n,"x","atanh")};return D.runKernel(Zu,t)}const dy=O({atanh_:S$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function py(n,e,t,r,s="NHWC",i){const o=n[3],a=[...e,o],u=is(s);return kt(n,a,t,i,r,null,null,u)}function Ar(n,e,t,r,s,i,o="channelsLast"){const[a,u]=lo(e);let l;if(o==="channelsLast")l=[a,u,n[3],n[3]];else if(o==="channelsFirst")l=[a,u,n[1],n[1]];else throw new Error(`Unknown dataFormat ${o}`);return kt(n,l,t,r,s,i,!1,o)}function si(n,e,t,r,s,i,o="NDHWC"){const[a,u,l]=fu(e);let c,h;if(o==="NDHWC")h="channelsLast",c=[a,u,l,n[4],n[4]];else if(o==="NCDHW")h="channelsFirst",c=[a,u,l,n[1],n[1]];else throw new Error(`Unknown dataFormat ${o}`);return ii(n,c,t,r,s,!1,h,i)}function kt(n,e,t,r,s,i,o=!1,a="channelsLast"){let[u,l,c,h]=[-1,-1,-1,-1];if(a==="channelsLast")[u,l,c,h]=n;else if(a==="channelsFirst")[u,h,l,c]=n;else throw new Error(`Unknown dataFormat ${a}`);const[d,p,,m]=e,[y,g]=lo(t),[x,$]=lo(r),C=Hr(d,x),S=Hr(p,$),{padInfo:I,outHeight:A,outWidth:L}=E$(s,l,c,y,g,C,S,i,a),P=o?m*h:m;let M;return a==="channelsFirst"?M=[u,P,A,L]:a==="channelsLast"&&(M=[u,A,L,P]),{batchSize:u,dataFormat:a,inHeight:l,inWidth:c,inChannels:h,outHeight:A,outWidth:L,outChannels:P,padInfo:I,strideHeight:y,strideWidth:g,filterHeight:d,filterWidth:p,effectiveFilterHeight:C,effectiveFilterWidth:S,dilationHeight:x,dilationWidth:$,inShape:n,outShape:M,filterShape:e}}function ii(n,e,t,r,s,i=!1,o="channelsLast",a){let[u,l,c,h,d]=[-1,-1,-1,-1,-1];if(o==="channelsLast")[u,l,c,h,d]=n;else if(o==="channelsFirst")[u,d,l,c,h]=n;else throw new Error(`Unknown dataFormat ${o}`);const[p,m,y,,g]=e,[x,$,C]=fu(t),[S,I,A]=fu(r),L=Hr(p,S),P=Hr(m,I),M=Hr(y,A),{padInfo:U,outDepth:V,outHeight:j,outWidth:K}=N$(s,l,c,h,x,$,C,L,P,M,a),H=i?g*d:g;let ne;return o==="channelsFirst"?ne=[u,H,V,j,K]:o==="channelsLast"&&(ne=[u,V,j,K,H]),{batchSize:u,dataFormat:o,inDepth:l,inHeight:c,inWidth:h,inChannels:d,outDepth:V,outHeight:j,outWidth:K,outChannels:H,padInfo:U,strideDepth:x,strideHeight:$,strideWidth:C,filterDepth:p,filterHeight:m,filterWidth:y,effectiveFilterDepth:L,effectiveFilterHeight:P,effectiveFilterWidth:M,dilationDepth:S,dilationHeight:I,dilationWidth:A,inShape:n,outShape:ne,filterShape:e}}function T$(n,e,t,r,s){r==null&&(r=Zh(n,e,t));const i=n[0],o=n[1],a=gr((i-e+2*r)/t+1,s),u=gr((o-e+2*r)/t+1,s);return[a,u]}function C$(n,e,t,r,s,i){s==null&&(s=Zh(n,e,r));const o=n[0],a=n[1],u=n[2],l=gr((o-e+2*s)/r+1,i),c=gr((a-e+2*s)/r+1,i),h=gr((u-e+2*s)/r+1,i);return[l,c,h,t]}function Zh(n,e,t,r=1){const s=Hr(e,r);return Math.floor((n[0]*(t-1)-t+s)/2)}function lo(n){return typeof n=="number"?[n,n,n]:n.length===2?[n[0],n[1],1]:n}function fu(n){return typeof n=="number"?[n,n,n]:n}function Hr(n,e){return e<=1?n:n+(n-1)*(e-1)}function E$(n,e,t,r,s,i,o,a,u){let l,c,h;if(typeof n=="number"){l={top:n,bottom:n,left:n,right:n,type:n===0?"VALID":"NUMBER"};const p=T$([e,t],i,r,n,a);c=p[0],h=p[1]}else if(n==="same"){c=Math.ceil(e/r),h=Math.ceil(t/s);const d=Math.max(0,(c-1)*r+i-e),p=Math.max(0,(h-1)*s+o-t),m=Math.floor(d/2),y=d-m,g=Math.floor(p/2),x=p-g;l={top:m,bottom:y,left:g,right:x,type:"SAME"}}else if(n==="valid")l={top:0,bottom:0,left:0,right:0,type:"VALID"},c=Math.ceil((e-i+1)/r),h=Math.ceil((t-o+1)/s);else if(typeof n=="object"){const d=u==="channelsLast"?n[1][0]:n[2][0],p=u==="channelsLast"?n[1][1]:n[2][1],m=u==="channelsLast"?n[2][0]:n[3][0],y=u==="channelsLast"?n[2][1]:n[3][1];l={top:d,bottom:p,left:m,right:y,type:d===0&&p===0&&m===0&&y===0?"VALID":"EXPLICIT"},c=gr((e-i+d+p)/r+1,a),h=gr((t-o+m+y)/s+1,a)}else throw Error(`Unknown padding parameter: ${n}`);return{padInfo:l,outHeight:c,outWidth:h}}function N$(n,e,t,r,s,i,o,a,u,l,c){let h,d,p,m;if(typeof n=="number"){h={top:n,bottom:n,left:n,right:n,front:n,back:n,type:n===0?"VALID":"NUMBER"};const g=C$([e,t,r,1],a,1,s,n,c);d=g[0],p=g[1],m=g[2]}else if(n==="same"){d=Math.ceil(e/s),p=Math.ceil(t/i),m=Math.ceil(r/o);const y=(d-1)*s+a-e,g=(p-1)*i+u-t,x=(m-1)*o+l-r,$=Math.floor(y/2),C=y-$,S=Math.floor(g/2),I=g-S,A=Math.floor(x/2),L=x-A;h={top:S,bottom:I,left:A,right:L,front:$,back:C,type:"SAME"}}else if(n==="valid")h={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},d=Math.ceil((e-a+1)/s),p=Math.ceil((t-u+1)/i),m=Math.ceil((r-l+1)/o);else throw Error(`Unknown padding parameter: ${n}`);return{padInfo:h,outDepth:d,outHeight:p,outWidth:m}}function gr(n,e){if(!e)return Math.trunc(n);switch(e){case"round":return Math.round(n);case"ceil":return Math.ceil(n);case"floor":return Math.floor(n);default:throw new Error(`Unknown roundingMode ${e}`)}}function Ws(n){const[e,t,r]=lo(n);return e===1&&t===1&&r===1}function Et(n,e){return Ws(n)||Ws(e)}function is(n){if(n==="NHWC")return"channelsLast";if(n==="NCHW")return"channelsFirst";throw new Error(`Unknown dataFormat ${n}`)}function jt(n,e,t){if(t!=null){if(typeof e=="string")throw Error(`Error in ${n}: pad must be an integer when using dimRoundingMode ${t} but got pad ${e}.`);if(typeof e=="number")N(br(e),()=>`Error in ${n}: pad must be an integer when using dimRoundingMode ${t} but got pad ${e}.`);else if(typeof e=="object")e.forEach(r=>{r.forEach(s=>{N(br(s),()=>`Error in ${n}: pad must be an integer when using dimRoundingMode ${t} but got pad ${s}.`)})});else throw Error(`Error in ${n}: Unknown padding parameter: ${e}`)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function I$(n,e){const r={x:E(n,"x","reshape","string_or_numeric")},s={shape:e};return D.runKernel(Bc,r,s)}const W=O({reshape_:I$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function k$(n,e,t,r,s){const i=E(n,"x","avgPool","float32"),o=1;N(Et(t,o),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${t} and dilations '${o}'`);let a=i,u=!1;i.rank===3&&(u=!0,a=W(i,[1,i.shape[0],i.shape[1],i.shape[2]])),N(a.rank===4,()=>`Error in avgPool: x must be rank 4 but got rank ${a.rank}.`),jt("avgPool",r,s);const l={x:a},c={filterSize:e,strides:t,pad:r,dimRoundingMode:s};let h=D.runKernel(el,l,c);return h=xe(h,i.dtype),u?W(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const Jh=O({avgPool_:k$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _$(n,e,t,r,s,i="NDHWC"){const o=E(n,"x","avgPool3d","float32");let a=o,u=!1;o.rank===4&&(u=!0,a=W(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),N(a.rank===5,()=>`Error in avgPool3d: x must be rank 5 but got rank ${a.rank}.`),N(i==="NDHWC",()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${i}`),jt("avgPool3d",r,s);const l={x:a},c={filterSize:e,strides:t,pad:r,dimRoundingMode:s,dataFormat:i};let h=D.runKernel(tl,l,c);return h=xe(h,a.dtype),u?W(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}const fy=O({avgPool3d_:_$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function R$(n,e=0){N(n.length>=1,()=>"Pass at least one tensor to concat");const t=Ms(n,"tensors","concat","string_or_numeric");if(t[0].dtype==="complex64"&&t.forEach(i=>{if(i.dtype!=="complex64")throw new Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${i.dtype}. `)}),t.length===1)return Rn(t[0]);const r=t,s={axis:e};return D.runKernel(cl,r,s)}const Ze=O({concat_:R$});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function A$(n){const t={x:E(n,"x","sigmoid","float32")};return D.runKernel(Jc,t)}const gn=O({sigmoid_:A$});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function O$(n,e,t){const r=E(n,"x","slice","string_or_numeric");if(r.rank===0)throw new Error("Slicing scalar is not possible");const s={x:r},i={begin:e,size:t};return D.runKernel(Xc,s,i)}const $e=O({slice_:O$});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function D$(n){const t={x:E(n,"x","tanh","float32")};return D.runKernel(xh,t)}const co=O({tanh_:D$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function F$(n,e,t,r,s,i){const o=E(n,"forgetBias","basicLSTMCell"),a=E(e,"lstmKernel","basicLSTMCell"),u=E(t,"lstmBias","basicLSTMCell"),l=E(r,"data","basicLSTMCell"),c=E(s,"c","basicLSTMCell"),h=E(i,"h","basicLSTMCell"),d=Ze([l,h],1),p=ge(d,a),m=se(p,u),y=m.shape[0],g=m.shape[1]/4,x=[y,g],$=$e(m,[0,0],x),C=$e(m,[0,g],x),S=$e(m,[0,g*2],x),I=$e(m,[0,g*3],x),A=se(Y(gn($),co(C)),Y(c,gn(se(o,S)))),L=Y(co(A),gn(I));return[A,L]}const my=O({basicLSTMCell_:F$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function P$(n,e,t){const r=E(n,"x","batchToSpaceND"),s=e.reduce((a,u)=>a*u);N(r.rank>=1+e.length,()=>`input rank is ${r.rank} but should be > than blockShape.length ${e.length}`),N(t.length===e.length,()=>`crops.length is ${t.length} but should be equal to blockShape.length  ${e.length}`),N(r.shape[0]%s===0,()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${e.join(" * ")} === ${s}`);const i={x:r},o={blockShape:e,crops:t};return D.runKernel(rl,i,o)}const ed=O({batchToSpaceND_:P$});function L$(n){let e;return n.rank===0||n.rank===1?e=W(n,[1,1,1,n.size]):n.rank===2?e=W(n,[1,1,n.shape[0],n.shape[1]]):n.rank===3?e=W(n,[1,n.shape[0],n.shape[1],n.shape[2]]):e=n,e}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function B$(n,e,t,r,s,i){i==null&&(i=.001);const o=E(n,"x","batchNorm"),a=E(e,"mean","batchNorm"),u=E(t,"variance","batchNorm");let l;s!=null&&(l=E(s,"scale","batchNorm"));let c;r!=null&&(c=E(r,"offset","batchNorm")),N(a.rank===u.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),N(c==null||a.rank===c.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),N(l==null||a.rank===l.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");const d={x:L$(o),scale:l,offset:c,mean:a,variance:u},p={varianceEpsilon:i},m=D.runKernel(Ul,d,p);return W(m,o.shape)}const oi=O({batchNorm_:B$});function M$(n,e,t,r,s,i){const o=E(n,"x","batchNorm"),a=E(e,"mean","batchNorm"),u=E(t,"variance","batchNorm");let l;s!=null&&(l=E(s,"scale","batchNorm"));let c;return r!=null&&(c=E(r,"offset","batchNorm")),N(o.rank===2,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${o.rank}.`),N(a.rank===2||a.rank===1,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${a.rank}.`),N(u.rank===2||u.rank===1,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${u.rank}.`),l!=null&&N(l.rank===2||l.rank===1,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${l.rank}.`),c!=null&&N(c.rank===2||c.rank===1,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${c.rank}.`),oi(o,a,u,c,l,i)}const gy=O({batchNorm2d_:M$});function V$(n,e,t,r,s,i){const o=E(n,"x","batchNorm"),a=E(e,"mean","batchNorm"),u=E(t,"variance","batchNorm");let l;s!=null&&(l=E(s,"scale","batchNorm"));let c;return r!=null&&(c=E(r,"offset","batchNorm")),N(o.rank===3,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${o.rank}.`),N(a.rank===3||a.rank===1,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${a.rank}.`),N(u.rank===3||u.rank===1,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${u.rank}.`),l!=null&&N(l.rank===3||l.rank===1,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${l.rank}.`),c!=null&&N(c.rank===3||c.rank===1,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${c.rank}.`),oi(o,a,u,c,l,i)}const yy=O({batchNorm3d_:V$});function U$(n,e,t,r,s,i){const o=E(n,"x","batchNorm"),a=E(e,"mean","batchNorm"),u=E(t,"variance","batchNorm");let l;s!=null&&(l=E(s,"scale","batchNorm"));let c;return r!=null&&(c=E(r,"offset","batchNorm")),N(o.rank===4,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${o.rank}.`),N(a.rank===4||a.rank===1,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${a.rank}.`),N(u.rank===4||u.rank===1,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${u.rank}.`),l!=null&&N(l.rank===4||l.rank===1,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${l.rank}.`),c!=null&&N(c.rank===4||c.rank===1,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${c.rank}.`),oi(o,a,u,c,l,i)}const xy=O({batchNorm4d_:U$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function z$(n,e,t){const r=E(n,"x","bincount"),s=E(e,"weights","bincount");N(r.dtype==="int32",()=>`Error in bincount: input dtype must be int32, but got ${r.dtype}`),N(t>=0,()=>`size must be non-negative, but got ${t}.`),N(s.size===r.size||s.size===0,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${r.shape}, weights shape: ${s.shape}.`);const i={x:r,weights:s},o={size:t};return D.runKernel(sl,i,o)}const td=O({bincount_:z$});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function W$(n,e){const t=E(n,"s0","broadcastArgs","int32"),r=E(e,"s1","broadcastArgs","int32");if(t.rank!==1)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${t.rank}`);if(r.rank!==1)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${r.rank}`);const s={s0:t,s1:r};return D.runKernel(il,s)}const by=O({broadcastArgs_:W$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function G$(n,e){let t=E(n,"broadcastTo","x");const r=t.shape;if(Tt(e),e.length<t.rank)throw new Error(`broadcastTo(): shape.length=${e.length} < input.rank=${t.rank}.`);if(e.length>t.rank){const l=t.shape.slice();for(;l.length<e.length;)l.unshift(1);t=W(t,l)}const s=t.shape,i=Array.from(e);for(let l=e.length-1;l>=0;l--)if(s[l]===e[l])i[l]=1;else if(t.shape[l]!==1)throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${e}].`);if(i.map((l,c)=>l>1?c:-1).filter(l=>l>=0).length===0)return Rn(t);const a={x:t},u={reps:i};return D.runKernel(ko,a,u)}const jr=O({broadcastTo_:G$});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function H$(n){const t={x:E(n,"x","ceil","float32")};return D.runKernel(ol,t)}const wy=O({ceil_:H$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function os(n,e,t){Tt(n);const r={shape:n,value:e,dtype:t};return D.runKernel(Ll,{},r)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function j$(n,e,t){const r=E(n,"x","clipByValue");if(N(e<=t,()=>`Error in clip: min (${e}) must be less than or equal to max (${t}).`),e===t)return os(r.shape,e,r.dtype);const s={x:r},i={clipValueMin:e,clipValueMax:t};return D.runKernel(al,s,i)}const vy=O({clipByValue_:j$});function q$(n){return Ze(n,0)}const $y=O({concat1d_:q$});function K$(n,e){return Ze(n,e)}const Sy=O({concat2d_:K$});function X$(n,e){return Ze(n,e)}const Ty=O({concat3d_:X$});function Y$(n,e){return Ze(n,e)}const Cy=O({concat4d_:Y$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Q$(n,e,t,r,s="NHWC",i=[1,1],o){const a=E(n,"x","conv2d","float32"),u=E(e,"filter","conv2d","float32");let l=a,c=!1;a.rank===3&&(c=!0,l=W(a,[1,a.shape[0],a.shape[1],a.shape[2]])),N(l.rank===4,()=>`Error in conv2d: input must be rank 4, but got rank ${l.rank}.`),N(u.rank===4,()=>`Error in conv2d: filter must be rank 4, but got rank ${u.rank}.`),jt("conv2d",r,o);const h=s==="NHWC"?l.shape[3]:l.shape[1];N(h===u.shape[2],()=>`Error in conv2d: depth of input (${h}) must match input depth for filter ${u.shape[2]}.`),N(Et(t,i),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${t} and dilations '${i}'`);const d={x:l,filter:u},p={strides:t,pad:r,dataFormat:s,dilations:i,dimRoundingMode:o},m=D.runKernel(hl,d,p);return c?W(m,[m.shape[1],m.shape[2],m.shape[3]]):m}const ai=O({conv2d_:Q$});function Z$(n,e,t,r,s="NWC",i=1,o){const a=E(n,"x","conv1d"),u=E(e,"filter","conv1d");let l=a,c=!1;a.rank===2&&(c=!0,l=W(a,[1,a.shape[0],a.shape[1]])),N(l.rank===3,()=>`Error in conv1d: input must be rank 3, but got rank ${l.rank}.`),N(u.rank===3,()=>`Error in conv1d: filter must be rank 3, but got rank ${u.rank}.`),jt("conv1d",r,o),N(l.shape[2]===u.shape[1],()=>`Error in conv1d: depth of input (${l.shape[2]}) must match input depth for filter ${u.shape[1]}.`),N(Et(t,i),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${t} and dilation '${i}'`),N(s==="NWC",()=>`Error in conv1d: got dataFormat of ${s} but only NWC is currently supported.`);const h=W(u,[1,u.shape[0],u.shape[1],u.shape[2]]),d=W(l,[l.shape[0],1,l.shape[1],l.shape[2]]),g=ai(d,h,[1,t],r,"NHWC",[1,i],o);return c?W(g,[g.shape[2],g.shape[3]]):W(g,[g.shape[0],g.shape[2],g.shape[3]])}const Ey=O({conv1d_:Z$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function J$(n,e,t,r,s,i="NHWC",o){N(n.length===e.rank,()=>`Length of inShape (${n.length}) and rank of dy (${e.rank}) must match`);let a=n,u=e,l=!1;e.rank===3&&(l=!0,u=W(e,[1,e.shape[0],e.shape[1],e.shape[2]]),a=[1,n[0],n[1],n[2]]),N(a.length===4,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${a.length}.`),N(u.rank===4,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${u.rank}`),N(t.rank===4,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${t.rank}`);const c=i==="NHWC"?a[3]:a[1],h=i==="NHWC"?u.shape[3]:u.shape[1];N(c===t.shape[2],()=>`Error in conv2dDerInput: depth of input (${c}) must match input depth for filter ${t.shape[2]}.`),N(h===t.shape[3],()=>`Error in conv2dDerInput: depth of output (${h}) must match output depth for filter ${t.shape[3]}.`),jt("conv2dDerInput",s,o);const d={dy:u,filter:t},p={strides:r,pad:s,dataFormat:i,dimRoundingMode:o,inputShape:a},m=D.runKernel(pl,d,p);return l?W(m,[m.shape[1],m.shape[2],m.shape[3]]):m}const Ny=O({conv2DBackpropInput_:J$});function eS(n,e,t,r,s,i){const o=E(n,"x","conv2dTranspose"),a=E(e,"filter","conv2dTranspose");return Ny(t,o,a,r,s,"NHWC",i)}const Iy=O({conv2dTranspose_:eS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tS(n,e,t,r,s="NDHWC",i=[1,1,1]){const o=E(n,"x","conv3d"),a=E(e,"filter","conv3d");let u=o,l=!1;o.rank===4&&(l=!0,u=W(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),N(u.rank===5,()=>`Error in conv3d: input must be rank 5, but got rank ${u.rank}.`),N(a.rank===5,()=>`Error in conv3d: filter must be rank 5, but got rank ${a.rank}.`),N(u.shape[4]===a.shape[3],()=>`Error in conv3d: depth of input (${u.shape[4]}) must match input depth for filter ${a.shape[3]}.`),N(Et(t,i),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${t} and dilations '${i}'`),N(s==="NDHWC",()=>`Error in conv3d: got dataFormat of ${s} but only NDHWC is currently supported.`);const c={x:u,filter:a},h={strides:t,pad:r,dataFormat:s,dilations:i},d=D.runKernel(fl,c,h);return l?W(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}const ky=O({conv3d_:tS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nS(n,e,t,r,s){N(n.length===e.rank,()=>`Length of inShape (${n.length}) and rank of dy (${e.rank}) must match`);let i=n,o=e,a=!1;e.rank===4&&(a=!0,o=W(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]),i=[1,n[0],n[1],n[2],n[3]]);const u=i[4],l=o.shape[4];N(i.length===5,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${i.length}.`),N(o.rank===5,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${o.rank}`),N(t.rank===5,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${t.rank}`),N(u===t.shape[3],()=>`Error in conv3dDerInput: depth of input (${u}) must match input depth for filter ${t.shape[3]}.`),N(l===t.shape[4],()=>`Error in conv3dDerInput: depth of output (${l}) must match output depth for filter ${t.shape[4]}.`);const c={dy:o,filter:t},h={pad:s,strides:r,inputShape:i},d=D.runKernel(ml,c,h);return a?W(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}const rS=O({conv3DBackpropInput_:nS});function sS(n,e,t,r,s){const i=E(n,"x","conv3dTranspose"),o=E(e,"filter","conv3dTranspose");return rS(t,i,o,r,s)}const _y=O({conv3dTranspose_:sS});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iS(n){const t={x:E(n,"x","cos","float32")};return D.runKernel(gl,t)}const Ry=O({cos_:iS});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oS(n){const t={x:E(n,"x","cosh","float32")};return D.runKernel(yl,t)}const Ay=O({cosh_:oS});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aS(n,e=0,t=!1,r=!1){const i={x:E(n,"x","cumprod")},o={axis:e,exclusive:t,reverse:r};return D.runKernel(xl,i,o)}const Oy=O({cumprod_:aS});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uS(n,e=0,t=!1,r=!1){const i={x:E(n,"x","cumsum")},o={axis:e,exclusive:t,reverse:r};return D.runKernel(bl,i,o)}const Dy=O({cumsum_:uS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lS(n,e,t,r=!1){const s=E(n,"x","denseBincount"),i=E(e,"weights","denseBincount");N(s.dtype==="int32",()=>`Error in denseBincount: input dtype must be int32, but got ${s.dtype}`),N(s.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${s.rank}.`),N(t>=0,()=>`size must be non-negative, but got ${t}.`),N(i.size===s.size||i.size===0,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${s.shape}, weights shape: ${i.shape}.`);const o={x:s,weights:i},a={size:t,binaryOutput:r};return D.runKernel(vl,o,a)}const Fy=O({denseBincount_:lS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cS(n,e,t="NHWC"){const r=E(n,"x","depthToSpace","float32"),s=t==="NHWC"?r.shape[1]:r.shape[2],i=t==="NHWC"?r.shape[2]:r.shape[3],o=t==="NHWC"?r.shape[3]:r.shape[1];N(e>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${e}`),N(s*e>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${s} and ${e}  for depthToSpace with input shape
    ${r.shape}`),N(i*e>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${i} and ${e} for depthToSpace with input shape
        ${r.shape}`),N(o%(e*e)===0,()=>`Dimension size must be evenly divisible by ${e*e} but is ${o} for depthToSpace with input shape ${r.shape}`);const a={x:r},u={blockSize:e,dataFormat:t};return D.runKernel($l,a,u)}const Py=O({depthToSpace_:cS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hS(n,e,t,r,s="NHWC",i=[1,1],o){const a=E(n,"x","depthwiseConv2d","float32"),u=E(e,"filter","depthwiseConv2d","float32");let l=a,c=!1;a.rank===3&&(c=!0,l=W(a,[1,a.shape[0],a.shape[1],a.shape[2]])),N(l.rank===4,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${l.rank}.`),N(u.rank===4,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${u.rank}.`);const h=s==="NHWC"?l.shape[3]:l.shape[1];N(h===u.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${h}) must match the inChannels dimension in filter ${u.shape[2]}.`),jt("depthwiseConv2d",r,o);const d={x:l,filter:u},p={strides:t,pad:r,dataFormat:s,dilations:i,dimRoundingMode:o},m=D.runKernel(Sl,d,p);return c?W(m,[m.shape[1],m.shape[2],m.shape[3]]):m}const Do=O({depthwiseConv2d_:hS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dS(n){const t={x:E(n,"x","diag")};return D.runKernel(El,t)}const Ly=O({diag_:dS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pS(n,e,t,r,s=[1,1],i="NHWC"){const o=E(n,"x","dilation2d"),a=E(e,"filter","dilation2d");N(o.rank===3||o.rank===4,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${o.rank}.`),N(a.rank===3,()=>`Error in dilation2d: filter must be rank 3, but got rank ${a.rank}.`),N(i==="NHWC",()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${i}`);let u=o,l=!1;o.rank===3&&(u=W(o,[1,o.shape[0],o.shape[1],o.shape[2]]),l=!0);const c={x:u,filter:a},h={strides:t,pad:r,dilations:s},d=D.runKernel(Nl,c,h);return l?W(d,[d.shape[1],d.shape[2],d.shape[3]]):d}const By=O({dilation2d_:pS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fS(n,e){let t=E(n,"a","equal","string_or_numeric"),r=E(e,"b","equal","string_or_numeric");[t,r]=Pe(t,r),fe(t.shape,r.shape);const s={a:t,b:r};return D.runKernel(Al,s)}const ui=O({equal_:fS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mS(n,e,t){const r=E(e,"a","where"),s=E(t,"b","where"),i=E(n,"condition","where","bool"),o=fe(fe(i.shape,r.shape),s.shape),a=jr(i,o),u=jr(r,o),l=jr(s,o),c={condition:a,t:u,e:l};return D.runKernel(qc,c)}const Cr=O({where_:mS});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gS(n){const t={x:E(n,"x","zerosLike")};return D.runKernel(Th,t)}const $t=O({zerosLike_:gS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yS(n,e){let t=E(n,"a","div"),r=E(e,"b","div");[t,r]=Pe(t,r);const s=Se(t,r),i=$t(s),o=ui(r,i);return Cr(o,i,s)}const My=O({divNoNan_:yS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xS(n,e){const t=E(n,"t1","dot"),r=E(e,"t2","dot");N((t.rank===1||t.rank===2)&&(r.rank===1||r.rank===2),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${t.rank} and ${r.rank}.`);const s=t.rank===1?t.size:t.shape[1],i=r.rank===1?r.size:r.shape[0];if(N(s===i,()=>`Error in dot: inner dimensions of inputs must match, but got ${s} and ${i}.`),t.rank===1&&r.rank===1){const o=W(t,[1,-1]),a=W(r,[-1,1]),u=ge(o,a);return W(u,[])}else if(t.rank===1&&r.rank===2){const o=W(t,[1,-1]),a=W(r,[r.shape[0],r.shape[1]]),u=ge(o,a);return W(u,[u.size])}else if(t.rank===2&&r.rank===1){const o=W(r,[-1,1]),a=ge(t,o);return W(a,[a.size])}else{const o=W(r,[r.shape[0],r.shape[1]]);return ge(t,o)}}const Vy=O({dot_:xS});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bS(n,...e){const t=e.map((s,i)=>E(s,`tensors${i}`,"einsum")),r={equation:n};return D.runKernel(kl,t,r)}const Uy=O({einsum_:bS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wS(n){const t={x:E(n,"x","elu","float32")};return D.runKernel(_l,t)}const nd=O({elu_:wS});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vS(n){let e=E(n,"x","erf");N(e.dtype==="int32"||e.dtype==="float32",()=>"Input dtype must be `int32` or `float32`."),e.dtype==="int32"&&(e=xe(e,"float32"));const t={x:e};return D.runKernel(Rl,t)}const zy=O({erf_:vS});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rd(n,e){for(let t=0;t<n.length;++t)if(n[n.length-t-1]!==e-1-t)return!1;return!0}function Wy(n,e,t){const r=n.length+e.length,s=[];let i=0,o=0;for(let a=0;a<r;a++)t.indexOf(a)===-1?s.push(n[i++]):s.push(e[o++]);return s}function $n(n,e){const t=[],r=n.length;for(let i=0;i<r;i++)e.indexOf(i)===-1&&t.push(n[i]);const s=e.map(i=>n[i]);return[t,s]}function _t(n,e){const t=e.map(r=>1);return Wy(n,t,e)}function un(n,e,t){N(rd(e,t),()=>`${n} supports only inner-most axes for now. Got axes ${e} and rank-${t} input.`)}function qt(n,e){if(rd(n,e))return null;const t=[];for(let r=0;r<e;++r)n.indexOf(r)===-1&&t.push(r);return n.forEach(r=>t.push(r)),t}function sd(n){return n.map((e,t)=>[t,e]).sort((e,t)=>e[1]-t[1]).map(e=>e[0])}function Kt(n,e){const t=[];for(let r=e-n;r<e;++r)t.push(r);return t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $S(n,e=null,t=!1){const s={x:E(n,"x","max")},i={reductionIndices:e,keepDims:t};return D.runKernel(ac,s,i)}const yr=O({max_:$S});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SS(n,e=null,t=!1){const s={x:E(n,"x","min")},i={axis:e,keepDims:t};return D.runKernel(pc,s,i)}const ho=O({min_:SS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TS(n,e){let t=E(n,"base","pow"),r=E(e,"exp","pow");[t,r]=Pe(t,r);const s={a:t,b:r};return D.runKernel(Ic,s)}const Jr=O({pow_:TS});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ue(n,e){if((Qe(n)&&e!=="string"||Array.isArray(n))&&e!=="complex64")throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if(e==="string"&&Qe(n)&&!(n instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Qn(n,[],[],e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CS(n){const t={x:E(n,"x","sqrt","float32")};return D.runKernel(th,t)}const bn=O({sqrt_:CS});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ES(n){const e=E(n,"x","square"),t={};return D.runKernel("Square",{x:e},t)}const Ht=O({square_:ES});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NS(n,e=null,t=!1){let r=E(n,"x","sum");r.dtype==="bool"&&(r=xe(r,"int32"));const s={x:r},i={axis:e,keepDims:t};return D.runKernel(nh,s,i)}const Ce=O({sum_:NS});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IS(n,e="euclidean",t=null,r=!1){n=E(n,"x","norm");const s=Gy(n,e,t);let i=s.shape;if(r){const o=Ve(t,n.shape);i=_t(s.shape,o)}return W(s,i)}function Gy(n,e,t=null){if(n.rank===0)return bt(n);if(n.rank!==1&&t===null)return Gy(W(n,[-1]),e,t);if(n.rank===1||typeof t=="number"||Array.isArray(t)&&t.length===1){if(e===1)return Ce(bt(n),t);if(e===1/0)return yr(bt(n),t);if(e===-1/0)return ho(bt(n),t);if(e==="euclidean"||e===2)return bn(Ce(Jr(bt(n),ue(2,"int32")),t));throw new Error(`Error in norm: invalid ord value: ${e}`)}if(Array.isArray(t)&&t.length===2){if(e===1)return yr(Ce(bt(n),t[0]),t[1]-1);if(e===1/0)return yr(Ce(bt(n),t[1]),t[0]);if(e===-1/0)return ho(Ce(bt(n),t[1]),t[0]);if(e==="fro"||e==="euclidean")return bn(Ce(Ht(n),t));throw new Error(`Error in norm: invalid ord value: ${e}`)}throw new Error(`Error in norm: invalid axis: ${t}`)}const li=O({norm_:IS});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kS(n,e=null,t=!1){return li(n,"euclidean",e,t)}const Hy=O({euclideanNorm_:kS});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _S(n){const t={x:E(n,"x","exp")};return D.runKernel(Ol,t)}const qn=O({exp_:_S});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RS(n,e=0){const t=E(n,"x","expandDims","string_or_numeric");N(e<=t.rank,()=>"Axis must be <= rank of the tensor");const r={input:t},s={dim:e};return D.runKernel(Dl,r,s)}const wt=O({expandDims_:RS});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AS(n){const t={x:E(n,"x","expm1")};return D.runKernel(Fl,t)}const jy=O({expm1_:AS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OS(n,e){const t=E(n,"x","tile","string_or_numeric");N(t.rank===e.length,()=>`Error in transpose: rank of input ${t.rank} must match length of reps ${e}.`);const r={x:t},s={reps:e};return D.runKernel(ko,r,s)}const qr=O({tile_:OS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DS(n,e,t,r="float32"){e==null&&(e=n);const s=De([n,e],r),i=n<=e?n:e;for(let a=0;a<i;++a)s.set(1,a,a);const o=W(s.toTensor(),[n,e]);if(t==null)return o;if(t.length===1)return qr(wt(o,0),[t[0],1,1]);if(t.length===2)return qr(wt(wt(o,0),0),[t[0],t[1],1,1]);if(t.length===3)return qr(wt(wt(wt(o,0),0),0),[t[0],t[1],t[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${t.length}D.`)}const id=O({eye_:DS});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FS(n){const t={x:E(n,"x","floor","float32")};return D.runKernel(Ml,t)}const od=O({floor_:FS});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PS(n,e,t=0,r=0){const s=E(n,"x","gather"),i=E(e,"indices","gather","int32"),o={x:s,indices:i},a={axis:t,batchDims:r};return D.runKernel(zl,o,a)}const ad=O({gather_:PS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LS(n,e){let t=E(n,"a","greater","string_or_numeric"),r=E(e,"b","greater","string_or_numeric");[t,r]=Pe(t,r),fe(t.shape,r.shape);const s={a:t,b:r};return D.runKernel(Gl,s)}const as=O({greater_:LS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BS(n,e){let t=E(n,"a","greaterEqual","string_or_numeric"),r=E(e,"b","greaterEqual","string_or_numeric");[t,r]=Pe(t,r),fe(t.shape,r.shape);const s={a:t,b:r};return D.runKernel(Hl,s)}const ud=O({greaterEqual_:BS});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MS(n){const t={x:E(n,"x","isFinite")};return D.runKernel(Kl,t)}const qy=O({isFinite_:MS});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VS(n){const t={x:E(n,"x","isInf")};return D.runKernel(Xl,t)}const Ky=O({isInf_:VS});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function US(n){const t={x:E(n,"x","isNaN")};return D.runKernel(Yl,t)}const Xy=O({isNaN_:US});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zS(n,e=.2){const r={x:E(n,"x","leakyRelu")},s={alpha:e};return D.runKernel(Ql,r,s)}const ld=O({leakyRelu_:zS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WS(n,e){let t=E(n,"a","less","string_or_numeric"),r=E(e,"b","less","string_or_numeric");[t,r]=Pe(t,r),fe(t.shape,r.shape);const s={a:t,b:r};return D.runKernel(Zl,s)}const Yy=O({less_:WS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GS(n,e){let t=E(n,"a","lessEqual","string_or_numeric"),r=E(e,"b","lessEqual","string_or_numeric");[t,r]=Pe(t,r),fe(t.shape,r.shape);const s={a:t,b:r};return D.runKernel(Jl,s)}const Fo=O({lessEqual_:GS});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qy(n,e,t){if(t<=0)throw new Error("The number of values should be positive.");const r={start:n,stop:e,num:t};return D.runKernel(ec,{},r)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HS(n,e=5,t=1,r=1,s=.5){const i=E(n,"x","localResponseNormalization");N(i.rank===4||i.rank===3,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${i.rank}.`),N(br(e),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${e}.`);let o=i,a=!1;i.rank===3&&(a=!0,o=W(i,[1,i.shape[0],i.shape[1],i.shape[2]]));const u={x:o},l={depthRadius:e,bias:t,alpha:r,beta:s},c=D.runKernel(oc,u,l);return a?W(c,[c.shape[1],c.shape[2],c.shape[3]]):c}const Zy=O({localResponseNormalization_:HS});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jS(n){const t={x:E(n,"x","log","float32")};return D.runKernel(tc,t)}const es=O({log_:jS});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qS(n){const t={x:E(n,"x","log1p")};return D.runKernel(nc,t)}const cd=O({log1p_:qS});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KS(n){return N(jn(n),()=>"The f passed in grad(f) must be a function"),(e,t)=>{const r=E(e,"x","tf.grad","string_or_numeric"),s=t!=null?E(t,"dy","tf.grad"):null;return D.tidy(()=>{const{value:i,grads:o}=D.gradients(()=>n(r),[r],s);return s!=null&&Je(i.shape,s.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),Po(o),o[0]})}}function XS(n){return N(jn(n),()=>"The f passed in grads(f) must be a function"),(e,t)=>{N(Array.isArray(e),()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s");const r=Ms(e,"args","tf.grads","string_or_numeric"),s=t!=null?E(t,"dy","tf.grads"):null;return D.tidy(()=>{const{value:i,grads:o}=D.gradients(()=>n(...r),r,s);return s!=null&&Je(i.shape,s.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),Po(o),o})}}function YS(n){return N(jn(n),()=>"The f passed in valueAndGrad(f) must be a function"),(e,t)=>{N(e instanceof be,()=>"The x passed in valueAndGrad(f)(x) must be a tensor"),N(t==null||t instanceof be,()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor");const{grads:r,value:s}=D.gradients(()=>n(e),[e],t);return Po(r),{grad:r[0],value:s}}}function QS(n){return N(jn(n),()=>"The f passed in valueAndGrads(f) must be a function"),(e,t)=>{N(Array.isArray(e)&&e.every(s=>s instanceof be),()=>"The args passed in valueAndGrads(f)(args) must be array of tensors"),N(t==null||t instanceof be,()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor");const r=D.gradients(()=>n(...e),e,t);return t!=null&&Je(r.value.shape,t.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),Po(r.grads),r}}function Jy(n,e){N(jn(n),()=>"The f passed in variableGrads(f) must be a function"),N(e==null||Array.isArray(e)&&e.every(l=>l instanceof Bs),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");const t=e!=null;if(!t){e=[];for(const l in D.registeredVariables)e.push(D.registeredVariables[l])}const r=t?e.filter(l=>!l.trainable):null,s=e.length;e=e.filter(l=>l.trainable),N(e.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${s} variables is trainable.`);const i=!0,{value:o,grads:a}=D.gradients(n,e,null,i);N(a.some(l=>l!=null),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),N(o.rank===0,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${o.rank} tensor`);const u={};return e.forEach((l,c)=>{a[c]!=null&&(u[l.name]=a[c])}),r!=null&&r.forEach(l=>u[l.name]=null),{value:o,grads:u}}function wn(n){return D.customGrad(n)}function Po(n){if(n.filter(t=>t==null).length>0)throw new Error(`Cannot compute gradient of y=f(x) with respect to x. Make sure that
    the f you passed encloses all operations that lead from x to y.`)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZS(n){const t={x:E(n,"x","softplus")};return D.runKernel(eh,t)}const hd=O({softplus_:ZS});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JS(n){const e=E(n,"x","logSigmoid");return wn(r=>({value:mn(hd(mn(r))),gradFunc:o=>Y(o,gn(mn(r)))}))(e)}const e0=O({logSigmoid_:JS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eT(n,e){let t=E(n,"a","sub"),r=E(e,"b","sub");[t,r]=Pe(t,r);const s={a:t,b:r};return D.runKernel(gh,s)}const ce=O({sub_:eT});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tT(n,e=-1){const t=E(n,"logits","logSoftmax");if(e===-1&&(e=t.rank-1),e!==t.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${t.rank} and axis was ${e}`);return wn((s,i)=>{const a=yr(s,e,!0),u=ce(s,a),l=ce(xe(u,"float32"),es(Ce(qn(u),e,!0)));return i([l]),{value:l,gradFunc:(h,d)=>{const[p]=d,m=!0,y=qn(p);return ce(h,Y(Ce(h,e,m),y))}}})(t)}const t0=O({logSoftmax_:tT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nT(n,e=null,t=!1){const r=E(n,"x","logSumExp"),s=Ve(e,r.shape),i=yr(r,s,!0),o=ce(r,i),a=qn(o),u=Ce(a,s),l=es(u),c=se(W(i,l.shape),l);if(t){const h=_t(c.shape,s);return W(c,h)}return c}const dd=O({logSumExp_:nT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rT(n,e){const t=E(n,"a","logicalAnd","bool"),r=E(e,"b","logicalAnd","bool");fe(t.shape,r.shape);const s={a:t,b:r};return D.runKernel(rc,s)}const Gs=O({logicalAnd_:rT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sT(n){const t={x:E(n,"x","logicalNot","bool")};return D.runKernel(sc,t)}const pd=O({logicalNot_:sT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iT(n,e){const t=E(n,"a","logicalOr","bool"),r=E(e,"b","logicalOr","bool");fe(t.shape,r.shape);const s={a:t,b:r};return D.runKernel(ic,s)}const fd=O({logicalOr_:iT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oT(n,e){const t=E(n,"a","logicalXor","bool"),r=E(e,"b","logicalXor","bool");return fe(t.shape,r.shape),Gs(fd(n,e),pd(Gs(n,e)))}const n0=O({logicalXor_:oT});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _i=2147483648;function aT(n,e,t="left"){const r=E(n,"sortedSequence","searchSorted"),s=E(e,"values","searchSorted"),i=r.shape[r.shape.length-1],o=s.shape[s.shape.length-1],a=W(r,[-1,i]),u=W(s,[-1,o]);if(a.rank<2)throw new Error("Sorted input argument must be at least 2-dimensional");if(a.shape[0]!==u.shape[0])throw new Error("Leading dimension of 'sortedSequence' and 'values' must match.");if(q(u.shape)>=_i)throw new Error(`values tensor size must less than ${_i}`);if(a.shape[1]>=_i)throw new Error(`trailing dim_size must less than ${_i} for int32 output type, was ${a.shape[1]}`);const l={sortedSequence:a,values:u},c={side:t};return D.runKernel(jc,l,c)}const Lo=O({searchSorted_:aT});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function r0(n,e){return Lo(n,e,"left")}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uT(n,e,t,r,s){const i=E(n,"x","maxPool"),o=1;let a=i,u=!1;i.rank===3&&(u=!0,a=W(i,[1,i.shape[0],i.shape[1],i.shape[2]])),N(a.rank===4,()=>`Error in maxPool: input must be rank 4 but got rank ${a.rank}.`),N(Et(t,o),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${t} and dilations '${o}'`),jt("maxPool",r,s);const l={x:a},c={filterSize:e,strides:t,pad:r,dimRoundingMode:s},h=D.runKernel(lc,l,c);return u?W(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const md=O({maxPool_:uT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lT(n,e=[1,1,1],t,r,s,i="NDHWC"){const o=E(n,"x","maxPool3d");let a=o,u=!1;o.rank===4&&(u=!0,a=W(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),N(a.rank===5,()=>`Error in maxPool3d: x must be rank 5 but got rank ${a.rank}.`),N(i==="NDHWC",()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${i}`),jt("maxPool3d",r,s);const l={x:a},c={filterSize:e,strides:t,pad:r,dimRoundingMode:s,dataFormat:i},h=D.runKernel(cc,l,c);return u?W(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}const s0=O({maxPool3d_:lT});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cT(n,e,t,r,s=!1){const o={x:E(n,"x","maxPoolWithArgmax")},a={filterSize:e,strides:t,pad:r,includeBatchInIndex:s},u=D.runKernel(hc,o,a);return{result:u[0],indexes:u[1]}}const i0=O({maxPoolWithArgmax_:cT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hT(n,e){let t=E(n,"a","maximum"),r=E(e,"b","maximum");[t,r]=Pe(t,r),t.dtype==="bool"&&(t=xe(t,"int32"),r=xe(r,"int32")),fe(t.shape,r.shape);const s={a:t,b:r};return D.runKernel(uc,s)}const gd=O({maximum_:hT});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dT(n,e=null,t=!1){const s={x:E(n,"x","mean")},i={axis:e,keepDims:t};return D.runKernel(dc,s,i)}const Hs=O({mean_:dT});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kn(n,e="float32"){if(Tt(n),e==="complex64"){const r=Kn(n,"float32"),s=Kn(n,"float32");return Dn(r,s)}const t=On(q(n),e);return D.makeTensor(t,n,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wn(n,e="float32"){if(Tt(n),e==="complex64"){const r=Wn(n,"float32"),s=Kn(n,"float32");return Dn(r,s)}const t=Bu(q(n),e);return D.makeTensor(t,n,e)}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function o0(n,e,{indexing:t="xy"}={}){if(t!=="xy"&&t!=="ij")throw new TypeError(`${t} is not a valid third argument to meshgrid`);if(n===void 0)return[];let r=E(n,"x","meshgrid",n instanceof be?n.dtype:"float32");if(e===void 0)return[r];let s=E(e,"y","meshgrid",e instanceof be?e.dtype:"float32");const i=q(r.shape),o=q(s.shape);return t==="xy"?(r=W(r,[1,-1]),s=W(s,[-1,1]),[ge(Wn([o,1],r.dtype),r),ge(s,Wn([1,i],s.dtype))]):(r=W(r,[-1,1]),s=W(s,[1,-1]),[ge(r,Wn([1,o],r.dtype)),ge(Wn([i,1],s.dtype),s)])}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pT(n,e){let t=E(n,"a","minimum"),r=E(e,"b","minimum");[t,r]=Pe(t,r),t.dtype==="bool"&&(t=xe(t,"int32"),r=xe(r,"int32")),fe(t.shape,r.shape);const s={a:t,b:r};return D.runKernel(fc,s)}const yd=O({minimum_:pT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fT(n,e,t){N(t==="reflect"||t==="symmetric",()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${t}.`);const r=E(n,"x","mirrorPad");if(r.rank===0)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");N(e.length===r.rank,()=>`Padding doesn't match input. Must be ${r.rank}. Got ${e.length}.`);const s=t==="reflect"?1:0;for(let a=0;a<r.rank;a++)N(e[a].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),N(e[a][0]>=0&&e[a][0]<=r.shape[a]-s&&e[a][1]>=0&&e[a][1]<=r.shape[a]-s,()=>`Padding in dimension ${a} cannot be greater than or equal to ${r.shape[a]-s} or less than 0 for input of shape ${r.shape}`);const i={paddings:e,mode:t},o={x:r};return D.runKernel(mc,o,i)}const xd=O({mirrorPad_:fT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mT(n,e){let t=E(n,"a","mod"),r=E(e,"b","mod");[t,r]=Pe(t,r);const s={a:t,b:r};return D.runKernel(gc,s)}const a0=O({mod_:mT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gT(n,e=null,t=!1){n=E(n,"x","moments");const r=Ve(e,n.shape),s=Hs(n,r,t);let i=s.shape;t||(i=_t(s.shape,r));const o=Ht(ce(xe(n,"float32"),W(s,i))),a=Hs(o,r,t);return{mean:s,variance:a}}const u0=O({moments_:gT});function yT(n,e,t,r){const s=E(e,"data","multiRNNCell"),i=Ms(t,"c","multiRNNCell"),o=Ms(r,"h","multiRNNCell");let a=s;const u=[];for(let h=0;h<n.length;h++){const d=n[h](a,i[h],o[h]);u.push(d[0]),u.push(d[1]),a=d[1]}const l=[],c=[];for(let h=0;h<u.length;h+=2)l.push(u[h]),c.push(u[h+1]);return[l,c]}const l0=O({multiRNNCell_:yT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xT(n,e,t,r=!1){const s=E(n,"logits","multinomial"),i=s.size,o=s.rank;if(i<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${i}.`);if(o>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${o}`);t=t||Math.random();const u={logits:o===1?W(s,[1,-1]):s},l={numSamples:e,seed:t,normalized:r},c=D.runKernel(yc,u,l);return o===1?W(c,[c.size]):c}const c0=O({multinomial_:xT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bT(n,e){let t=E(n,"a","notEqual","string_or_numeric"),r=E(e,"b","notEqual","string_or_numeric");[t,r]=Pe(t,r),fe(t.shape,r.shape);const s={a:t,b:r};return D.runKernel(wc,s)}const bd=O({notEqual_:bT});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wT(n){const t={x:E(n,"x","onesLike")};return D.runKernel(Tc,t)}const h0=O({onesLike_:wT});function vT(n,e){const t=E(n,"v1","outerProduct"),r=E(e,"v2","outerProduct");N(t.rank===1&&r.rank===1,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${t.rank} and ${r.rank}.`);const s=W(t,[-1,1]),i=W(r,[1,-1]);return ge(s,i)}const d0=O({outerProduct_:vT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $T(n,e,t=0){const r=E(n,"x","pad");if(r.rank===0)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const s={paddings:e,constantValue:t},i={x:r};return D.runKernel(Nc,i,s)}const Or=O({pad_:$T});function ST(n,e,t=0){return N(e.length===2,()=>"Invalid number of paddings. Must be length of 2."),Or(n,[e],t)}const p0=O({pad1d_:ST});function TT(n,e,t=0){return N(e.length===2&&e[0].length===2&&e[1].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Or(n,e,t)}const f0=O({pad2d_:TT});function CT(n,e,t=0){return N(e.length===3&&e[0].length===2&&e[1].length===2&&e[2].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Or(n,e,t)}const wd=O({pad3d_:CT});function ET(n,e,t=0){return N(e.length===4&&e[0].length===2&&e[1].length===2&&e[2].length===2&&e[3].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Or(n,e,t)}const m0=O({pad4d_:ET});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NT(n,e,t){const r=E(n,"x","spaceToBatchND");N(r.rank>=1+e.length,()=>`input rank ${r.rank} should be > than [blockShape] ${e.length}`),N(t.length===e.length,()=>`paddings.shape[0] ${t.length} must be equal to [blockShape] ${e.length}`),N(r.shape.reduce((o,a,u)=>u>0&&u<=e.length?o&&(a+t[u-1][0]+t[u-1][1])%e[u-1]===0:o,!0),()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${t.toString()} must be divisible by blockShapes ${e.toString()}`);const s={x:r},i={blockShape:e,paddings:t};return D.runKernel(rh,s,i)}const vd=O({spaceToBatchND_:NT});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IT(n,e,t,r,s,i,o){s==null&&(s=[1,1]),i==null&&(i=1),r===0&&(r="valid");const a=E(n,"x","maxPool");let u=a,l=!1;a.rank===3&&(l=!0,u=W(a,[1,a.shape[0],a.shape[1],a.shape[2]])),N(Et(i,s),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${i} and dilations '${s}'`);const c=Ar(u.shape,e,i,s,r),h=[c.dilationHeight,c.dilationWidth];let d;r==="same"?d=_T([c.filterHeight,c.filterWidth],h):d=[[0,0],[0,0]];const p=h[0]===1&&h[1]===1,[m,y]=kT([c.inHeight,c.inWidth],h,d),g=p?r:"valid",x=p?u:vd(u,h,m),C=(t==="avg"?()=>Jh(x,e,i,g,o):()=>md(x,e,i,g,o))(),S=p?C:ed(C,h,y);return l?W(S,[S.shape[1],S.shape[2],S.shape[3]]):S}function kT(n,e,t){const r=t.map(c=>c[0]),s=t.map(c=>c[1]),i=n.concat(r,s),o=e.map((c,h)=>(c-i[h]%c)%c),a=s.map((c,h)=>c+o[h]),u=e.map((c,h)=>[r[h],a[h]]),l=e.map((c,h)=>[0,o[h]]);return[u,l]}function _T(n,e){const r=n.map((o,a)=>o+(o-1)*(e[a]-1)).map(o=>o-1),s=r.map(o=>Math.floor(o/2)),i=r.map((o,a)=>o-s[a]);return r.map((o,a)=>[s[a],i[a]])}const g0=O({pool_:IT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RT(n,e){const t=E(n,"x","prelu"),r=E(e,"alpha","prelu"),s={x:t,alpha:r};return D.runKernel(kc,s)}const $d=O({prelu_:RT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AT(n,e=null,t=!1){let r=E(n,"x","prod");r.dtype==="bool"&&(r=xe(r,"int32"));const s={x:r},i={axis:e,keepDims:t};return D.runKernel(_c,s,i)}const y0=O({prod_:AT});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OT(n,e,t,r){const s=n.map((c,h)=>E(c,`tensors${h}`,"raggedGather","int32")),i=E(e,"paramsDenseValues","raggedGather"),o=E(t,"indices","raggedGather","int32"),a={paramsNestedSplits:s,paramsDenseValues:i,indices:o},u={outputRaggedRank:r},l=D.runKernel(Rc,a,u);return{outputNestedSplits:l.slice(0,l.length-1),outputDenseValues:l[l.length-1]}}const x0=O({raggedGather_:OT});/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DT(n,e,t){const r=E(n,"starts","raggedRange"),s=E(e,"limits","raggedRange",r.dtype),i=E(t,"deltas","raggedRange",r.dtype),o={starts:r,limits:s,deltas:i},a=D.runKernel(Ac,o);return{rtNestedSplits:a[0],rtDenseValues:a[1]}}const b0=O({raggedRange_:DT});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FT(n,e,t,r,s){const i=E(n,"shape","raggedTensorToTensor","int32"),o=E(e,"values","raggedTensorToTensor"),a=E(t,"defaultValue","raggedTensorToTensor",o.dtype),u=r.map((h,d)=>E(h,`tensors${d}`,"raggedTensorToTensor","int32")),l={shape:i,values:o,defaultValue:a,rowPartitionTensors:u},c={rowPartitionTypes:s};return D.runKernel(Oc,l,c)}const w0=O({raggedTensorToTensor_:FT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PT(n,e,t){Tt(n);const r=q(n);let s=null;if(t==null||t==="float32")s=new Float32Array(r);else if(t==="int32")s=new Int32Array(r);else if(t==="bool")s=new Uint8Array(r);else throw new Error(`Unknown data type ${t}`);for(let i=0;i<r;i++)s[i]=e();return D.makeTensor(s,n,t)}const v0=O({rand_:PT});var $0={exports:{}};(function(n){(function(e,t,r){function s(u){var l=this,c=a();l.next=function(){var h=2091639*l.s0+l.c*23283064365386963e-26;return l.s0=l.s1,l.s1=l.s2,l.s2=h-(l.c=h|0)},l.c=1,l.s0=c(" "),l.s1=c(" "),l.s2=c(" "),l.s0-=c(u),l.s0<0&&(l.s0+=1),l.s1-=c(u),l.s1<0&&(l.s1+=1),l.s2-=c(u),l.s2<0&&(l.s2+=1),c=null}function i(u,l){return l.c=u.c,l.s0=u.s0,l.s1=u.s1,l.s2=u.s2,l}function o(u,l){var c=new s(u),h=l&&l.state,d=c.next;return d.int32=function(){return c.next()*4294967296|0},d.double=function(){return d()+(d()*2097152|0)*11102230246251565e-32},d.quick=d,h&&(typeof h=="object"&&i(h,c),d.state=function(){return i(c,{})}),d}function a(){var u=4022871197,l=function(c){c=String(c);for(var h=0;h<c.length;h++){u+=c.charCodeAt(h);var d=.02519603282416938*u;u=d>>>0,d-=u,d*=u,u=d>>>0,d-=u,u+=d*4294967296}return(u>>>0)*23283064365386963e-26};return l}t&&t.exports?t.exports=o:r&&r.amd?r(function(){return o}):this.alea=o})(fn,n,!1)})($0);var S0={exports:{}};(function(n){(function(e,t,r){function s(a){var u=this,l="";u.x=0,u.y=0,u.z=0,u.w=0,u.next=function(){var h=u.x^u.x<<11;return u.x=u.y,u.y=u.z,u.z=u.w,u.w^=u.w>>>19^h^h>>>8},a===(a|0)?u.x=a:l+=a;for(var c=0;c<l.length+64;c++)u.x^=l.charCodeAt(c)|0,u.next()}function i(a,u){return u.x=a.x,u.y=a.y,u.z=a.z,u.w=a.w,u}function o(a,u){var l=new s(a),c=u&&u.state,h=function(){return(l.next()>>>0)/4294967296};return h.double=function(){do var d=l.next()>>>11,p=(l.next()>>>0)/4294967296,m=(d+p)/(1<<21);while(m===0);return m},h.int32=l.next,h.quick=h,c&&(typeof c=="object"&&i(c,l),h.state=function(){return i(l,{})}),h}t&&t.exports?t.exports=o:r&&r.amd?r(function(){return o}):this.xor128=o})(fn,n,!1)})(S0);var T0={exports:{}};(function(n){(function(e,t,r){function s(a){var u=this,l="";u.next=function(){var h=u.x^u.x>>>2;return u.x=u.y,u.y=u.z,u.z=u.w,u.w=u.v,(u.d=u.d+362437|0)+(u.v=u.v^u.v<<4^(h^h<<1))|0},u.x=0,u.y=0,u.z=0,u.w=0,u.v=0,a===(a|0)?u.x=a:l+=a;for(var c=0;c<l.length+64;c++)u.x^=l.charCodeAt(c)|0,c==l.length&&(u.d=u.x<<10^u.x>>>4),u.next()}function i(a,u){return u.x=a.x,u.y=a.y,u.z=a.z,u.w=a.w,u.v=a.v,u.d=a.d,u}function o(a,u){var l=new s(a),c=u&&u.state,h=function(){return(l.next()>>>0)/4294967296};return h.double=function(){do var d=l.next()>>>11,p=(l.next()>>>0)/4294967296,m=(d+p)/(1<<21);while(m===0);return m},h.int32=l.next,h.quick=h,c&&(typeof c=="object"&&i(c,l),h.state=function(){return i(l,{})}),h}t&&t.exports?t.exports=o:r&&r.amd?r(function(){return o}):this.xorwow=o})(fn,n,!1)})(T0);var C0={exports:{}};(function(n){(function(e,t,r){function s(a){var u=this;u.next=function(){var c=u.x,h=u.i,d,p;return d=c[h],d^=d>>>7,p=d^d<<24,d=c[h+1&7],p^=d^d>>>10,d=c[h+3&7],p^=d^d>>>3,d=c[h+4&7],p^=d^d<<7,d=c[h+7&7],d=d^d<<13,p^=d^d<<9,c[h]=p,u.i=h+1&7,p};function l(c,h){var d,p=[];if(h===(h|0))p[0]=h;else for(h=""+h,d=0;d<h.length;++d)p[d&7]=p[d&7]<<15^h.charCodeAt(d)+p[d+1&7]<<13;for(;p.length<8;)p.push(0);for(d=0;d<8&&p[d]===0;++d);for(d==8?p[7]=-1:p[d],c.x=p,c.i=0,d=256;d>0;--d)c.next()}l(u,a)}function i(a,u){return u.x=a.x.slice(),u.i=a.i,u}function o(a,u){a==null&&(a=+new Date);var l=new s(a),c=u&&u.state,h=function(){return(l.next()>>>0)/4294967296};return h.double=function(){do var d=l.next()>>>11,p=(l.next()>>>0)/4294967296,m=(d+p)/(1<<21);while(m===0);return m},h.int32=l.next,h.quick=h,c&&(c.x&&i(c,l),h.state=function(){return i(l,{})}),h}t&&t.exports?t.exports=o:r&&r.amd?r(function(){return o}):this.xorshift7=o})(fn,n,!1)})(C0);var E0={exports:{}};(function(n){(function(e,t,r){function s(a){var u=this;u.next=function(){var c=u.w,h=u.X,d=u.i,p,m;return u.w=c=c+1640531527|0,m=h[d+34&127],p=h[d=d+1&127],m^=m<<13,p^=p<<17,m^=m>>>15,p^=p>>>12,m=h[d]=m^p,u.i=d,m+(c^c>>>16)|0};function l(c,h){var d,p,m,y,g,x=[],$=128;for(h===(h|0)?(p=h,h=null):(h=h+"\0",p=0,$=Math.max($,h.length)),m=0,y=-32;y<$;++y)h&&(p^=h.charCodeAt((y+32)%h.length)),y===0&&(g=p),p^=p<<10,p^=p>>>15,p^=p<<4,p^=p>>>13,y>=0&&(g=g+1640531527|0,d=x[y&127]^=p+g,m=d==0?m+1:0);for(m>=128&&(x[(h&&h.length||0)&127]=-1),m=127,y=4*128;y>0;--y)p=x[m+34&127],d=x[m=m+1&127],p^=p<<13,d^=d<<17,p^=p>>>15,d^=d>>>12,x[m]=p^d;c.w=g,c.X=x,c.i=m}l(u,a)}function i(a,u){return u.i=a.i,u.w=a.w,u.X=a.X.slice(),u}function o(a,u){a==null&&(a=+new Date);var l=new s(a),c=u&&u.state,h=function(){return(l.next()>>>0)/4294967296};return h.double=function(){do var d=l.next()>>>11,p=(l.next()>>>0)/4294967296,m=(d+p)/(1<<21);while(m===0);return m},h.int32=l.next,h.quick=h,c&&(c.X&&i(c,l),h.state=function(){return i(l,{})}),h}t&&t.exports?t.exports=o:r&&r.amd?r(function(){return o}):this.xor4096=o})(fn,n,!1)})(E0);var N0={exports:{}};(function(n){(function(e,t,r){function s(a){var u=this,l="";u.next=function(){var h=u.b,d=u.c,p=u.d,m=u.a;return h=h<<25^h>>>7^d,d=d-p|0,p=p<<24^p>>>8^m,m=m-h|0,u.b=h=h<<20^h>>>12^d,u.c=d=d-p|0,u.d=p<<16^d>>>16^m,u.a=m-h|0},u.a=0,u.b=0,u.c=-1640531527,u.d=1367130551,a===Math.floor(a)?(u.a=a/4294967296|0,u.b=a|0):l+=a;for(var c=0;c<l.length+20;c++)u.b^=l.charCodeAt(c)|0,u.next()}function i(a,u){return u.a=a.a,u.b=a.b,u.c=a.c,u.d=a.d,u}function o(a,u){var l=new s(a),c=u&&u.state,h=function(){return(l.next()>>>0)/4294967296};return h.double=function(){do var d=l.next()>>>11,p=(l.next()>>>0)/4294967296,m=(d+p)/(1<<21);while(m===0);return m},h.int32=l.next,h.quick=h,c&&(typeof c=="object"&&i(c,l),h.state=function(){return i(l,{})}),h}t&&t.exports?t.exports=o:r&&r.amd?r(function(){return o}):this.tychei=o})(fn,n,!1)})(N0);var I0={exports:{}};const LT={},BT=Object.freeze(Object.defineProperty({__proto__:null,default:LT},Symbol.toStringTag,{value:"Module"})),MT=zw(BT);(function(n){(function(e,t,r){var s=256,i=6,o=52,a="random",u=r.pow(s,i),l=r.pow(2,o),c=l*2,h=s-1,d;function p(S,I,A){var L=[];I=I==!0?{entropy:!0}:I||{};var P=x(g(I.entropy?[S,C(t)]:S==null?$():S,3),L),M=new m(L),U=function(){for(var V=M.g(i),j=u,K=0;V<l;)V=(V+K)*s,j*=s,K=M.g(1);for(;V>=c;)V/=2,j/=2,K>>>=1;return(V+K)/j};return U.int32=function(){return M.g(4)|0},U.quick=function(){return M.g(4)/4294967296},U.double=U,x(C(M.S),t),(I.pass||A||function(V,j,K,H){return H&&(H.S&&y(H,M),V.state=function(){return y(M,{})}),K?(r[a]=V,j):V})(U,P,"global"in I?I.global:this==r,I.state)}function m(S){var I,A=S.length,L=this,P=0,M=L.i=L.j=0,U=L.S=[];for(A||(S=[A++]);P<s;)U[P]=P++;for(P=0;P<s;P++)U[P]=U[M=h&M+S[P%A]+(I=U[P])],U[M]=I;(L.g=function(V){for(var j,K=0,H=L.i,ne=L.j,le=L.S;V--;)j=le[H=h&H+1],K=K*s+le[h&(le[H]=le[ne=h&ne+j])+(le[ne]=j)];return L.i=H,L.j=ne,K})(s)}function y(S,I){return I.i=S.i,I.j=S.j,I.S=S.S.slice(),I}function g(S,I){var A=[],L=typeof S,P;if(I&&L=="object")for(P in S)try{A.push(g(S[P],I-1))}catch{}return A.length?A:L=="string"?S:S+"\0"}function x(S,I){for(var A=S+"",L,P=0;P<A.length;)I[h&P]=h&(L^=I[h&P]*19)+A.charCodeAt(P++);return C(I)}function $(){try{var S;return d&&(S=d.randomBytes)?S=S(s):(S=new Uint8Array(s),(e.crypto||e.msCrypto).getRandomValues(S)),C(S)}catch{var I=e.navigator,A=I&&I.plugins;return[+new Date,e,A,e.screen,C(t)]}}function C(S){return String.fromCharCode.apply(0,S)}if(x(r.random(),t),n.exports){n.exports=p;try{d=MT}catch{}}else r["seed"+a]=p})(typeof self<"u"?self:fn,[],Math)})(I0);var VT=$0.exports,UT=S0.exports,zT=T0.exports,WT=C0.exports,GT=E0.exports,HT=N0.exports,Dr=I0.exports;Dr.alea=VT;Dr.xor128=UT;Dr.xorwow=zT;Dr.xorshift7=WT;Dr.xor4096=GT;Dr.tychei=HT;var Sd=Dr;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Td{constructor(e,t,r,s,i){this.mean=e,this.stdDev=t,this.dtype=r,this.nextVal=NaN,this.truncated=s,this.truncated&&(this.upper=this.mean+this.stdDev*2,this.lower=this.mean-this.stdDev*2);const o=i||Math.random();this.random=Sd.alea(o.toString())}nextValue(){if(!isNaN(this.nextVal)){const s=this.nextVal;return this.nextVal=NaN,s}let e,t,r=!1;for(;!r;){let s,i,o;do s=2*this.random()-1,i=2*this.random()-1,o=s*s+i*i;while(o>=1||o===0);const a=Math.sqrt(-2*Math.log(o)/o);e=this.mean+this.stdDev*s*a,t=this.mean+this.stdDev*i*a,(!this.truncated||this.isValidTruncated(e))&&(r=!0)}return(!this.truncated||this.isValidTruncated(t))&&(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return this.dtype==null||this.dtype==="float32"?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class jT{constructor(e,t,r,s){this.alpha=e,this.beta=1/t,this.dtype=r;const i=s||Math.random();this.randu=Sd.alea(i.toString()),this.randn=new Td(0,1,r,!1,this.randu()),e<1?this.d=e+2/3:this.d=e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,r,s,i,o;for(;;){do s=this.randn.nextValue(),o=1+this.c*s;while(o<=0);if(o*=o*o,e=s*s,t=1-.331*e*e,r=.5*e+this.d*(1-o+Math.log(o)),i=this.randu(),i<t||Math.log(i)<r)break}return o=1/this.beta*this.d*o,this.alpha<1&&(o*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(o)}convertValue(e){return this.dtype==="float32"?e:Math.round(e)}}class qT{constructor(e=0,t=1,r,s){if(this.canReturnFloat=()=>this.dtype==null||this.dtype==="float32",this.min=e,this.range=t-e,this.dtype=r,s==null&&(s=Math.random()),typeof s=="number"&&(s=s.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=Sd.alea(s)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KT(n,e,t=1,r="float32",s){if(Tt(n),t==null&&(t=1),r==null&&(r="float32"),r!=="float32"&&r!=="int32")throw new Error(`Unsupported data type ${r}`);const i=new jT(e,t,r,s),o=De(n,r);for(let a=0;a<o.values.length;a++)o.values[a]=i.nextValue();return o.toTensor()}const k0=O({randomGamma_:KT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XT(n,e=0,t=1,r,s){if(Tt(n),r!=null&&r==="bool")throw new Error(`Unsupported data type ${r}`);const i=new Td(e,t,r,!1,s),o=De(n,r);for(let a=0;a<o.values.length;a++)o.values[a]=i.nextValue();return o.toTensor()}const Cd=O({randomNormal_:XT});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YT(n,e,t){if(e!=null&&e==="bool")throw new Error(`Unsupported data type ${e}`);return Cd(n,0,1,e,t)}const _0=O({randomStandardNormal_:YT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QT(n,e=0,t=1,r="float32",s){Tt(n);const i=De(n,r),o=new qT(e,t,null,s);for(let a=0;a<i.values.length;a++)i.values[a]=o.nextValue();return i.toTensor()}const Ed=O({randomUniform_:QT});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xn(n,e,t=1,r="float32"){if(t===0)throw new Error("Cannot have a step of zero");const s={start:n,stop:e,step:t,dtype:r};return D.runKernel(Dc,{},s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZT(n){const t={x:E(n,"x","reciprocal")};return D.runKernel(Pc,t)}const R0=O({reciprocal_:ZT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JT(n){const t={x:E(n,"x","relu")};return D.runKernel(Lc,t)}const ci=O({relu_:JT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eC(n){const t={x:E(n,"x","relu6")};return D.runKernel(Uc,t)}const Nd=O({relu6_:eC});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tC(n,e){const r={x:E(n,"x","reverse")},s={dims:e};return D.runKernel(zc,r,s)}const Yn=O({reverse_:tC});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nC(n){const e=E(n,"x","reverse");return N(e.rank===1,()=>`Error in reverse1D: x must be rank 1 but got rank ${e.rank}.`),Yn(e,0)}const A0=O({reverse1d_:nC});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rC(n,e){const t=E(n,"x","reverse");return N(t.rank===2,()=>`Error in reverse2D: x must be rank 2 but got rank ${t.rank}.`),Yn(t,e)}const O0=O({reverse2d_:rC});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sC(n,e){const t=E(n,"x","reverse");return N(t.rank===3,()=>`Error in reverse3D: x must be rank 3 but got rank ${t.rank}.`),Yn(t,e)}const D0=O({reverse3d_:sC});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iC(n,e){const t=E(n,"x","reverse");return N(t.rank===4,()=>`Error in reverse4D: x must be rank 4 but got rank ${t.rank}.`),Yn(t,e)}const F0=O({reverse4d_:iC});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oC(n){const t={x:E(n,"x","round")};return D.runKernel(Wc,t)}const Id=O({round_:oC});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aC(n){const t={x:E(n,"x","rsqrt","float32")};return D.runKernel(Gc,t)}const P0=O({rsqrt_:aC});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uC(n){const t={x:E(n,"x","selu")};return D.runKernel(Kc,t)}const L0=O({selu_:uC});function lC(n,e,t,r,s,i=[1,1],o="NHWC"){const a=E(n,"x","separableConv2d"),u=E(e,"depthwiseFilter","separableConv2d"),l=E(t,"pointwiseFilter","separableConv2d");let c=a,h=!1;if(a.rank===3&&(h=!0,c=W(a,[1,a.shape[0],a.shape[1],a.shape[2]])),o==="NCHW")throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");N(c.rank===4,()=>`Error in separableConv2d: input must be rank 4, but got rank ${c.rank}.`),N(u.rank===4,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${u.rank}.`),N(l.rank===4,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${u.rank}.`),N(l.shape[0]===1,()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${l.shape[0]}.`),N(l.shape[1]===1,()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${l.shape[1]}.`);const d=u.shape[2],p=u.shape[3];N(l.shape[2]===d*p,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${d*p}, but got ${l.shape[2]}.`);const m=Do(c,u,r,s,o,i),g=ai(m,l,1,"valid",o);return h?W(g,[g.shape[1],g.shape[2],g.shape[3]]):g}const B0=O({separableConv2d_:lC});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function cC(n,e){const t=E(n,"x","setdiff1d"),r=E(e,"y","setdiff1d");N(t.dtype===r.dtype,()=>`x and y should have the same dtype, but got x (${t.dtype}) and y (${r.dtype}).`),N(t.rank===1,()=>`x should be 1D tensor, but got x (${t.shape}).`),N(r.rank===1,()=>`y should be 1D tensor, but got y (${r.shape}).`);const s=await t.data(),i=await r.data(),o=new Set(i);let a=0;for(let c=0;c<s.length;c++)o.has(s[c])||a++;const u=new Yr([a],t.dtype),l=new Yr([a],"int32");for(let c=0,h=0;c<s.length;c++)o.has(s[c])||(u.values[h]=s[c],l.values[h]=c,h++);return[u.toTensor(),l.toTensor()]}const M0=cC;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hC(n){const t={x:E(n,"x","sign")};return D.runKernel(Zc,t)}const V0=O({sign_:hC});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dC(n){const t={x:E(n,"x","sin","float32")};return D.runKernel(Yc,t)}const U0=O({sin_:dC});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pC(n){const t={x:E(n,"x","sinh")};return D.runKernel(Qc,t)}const z0=O({sinh_:pC});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fC(n,e,t){const r=E(n,"x","slice1d");return N(r.rank===1,()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`),$e(r,[e],[t])}const W0=O({slice1d_:fC});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mC(n,e,t){const r=E(n,"x","slice2d");return N(r.rank===2,()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`),$e(r,e,t)}const G0=O({slice2d_:mC});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gC(n,e,t){const r=E(n,"x","slice3d");return N(r.rank===3,()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`),$e(r,e,t)}const H0=O({slice3d_:gC});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yC(n,e,t){const r=E(n,"x","slice4d");return N(r.rank===4,()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`),$e(r,e,t)}const j0=O({slice4d_:yC});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xC(n,e=-1){const t=E(n,"logits","softmax","float32");if(e===-1&&(e=t.rank-1),e!==t.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${t.rank} and dim was ${e}`);const r={logits:t},s={dim:e};return D.runKernel(ih,r,s)}const q0=O({softmax_:xC});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bC(n){N(n.dtype==="complex64",()=>`The dtype for tf.spectral.fft() must be complex64 but got ${n.dtype}.`);const e={input:n};return D.runKernel(Pl,e)}const Bo=O({fft_:bC});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wC(n){N(n.dtype==="complex64",()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${n.dtype}.`);const e={input:n};return D.runKernel(jl,e)}const js=O({ifft_:wC});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vC(n){const e=n.shape[n.shape.length-1],t=n.size/e;let r;if(e<=2){const s=W(n,[t,e]);r=js(s)}else{const s=[t,2*(e-1)],i=W(Zr(n),[t,e]),o=W(ri(n),[t,e]),a=Yn($e(i,[0,1],[t,e-2]),1),u=Y(Yn($e(o,[0,1],[t,e-2]),1),ue(-1)),l=Ze([i,a],1),c=Ze([o,u],1),h=W(Dn(l,c),[s[0],s[1]]);r=js(h)}if(r=Zr(r),n.rank===3&&n.shape[0]!==0){const s=r,i=n.shape[0];r=W(r,[i,r.shape[0]/i,r.shape[1]]),s.dispose()}return r}const kd=O({irfft_:vC});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $C(n,e,t=0){const s={x:E(n,"x","split")},i={numOrSizeSplits:e,axis:t};return D.runKernel(sh,s,i)}const ts=O({split_:$C});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SC(n,e){N(n.dtype==="float32",()=>`The dtype for rfft() must be real value but got ${n.dtype}`);let t=n.shape[n.shape.length-1];const r=n.size/t;let s;if(e!=null&&e<t){const m=n.shape.map(g=>0),y=n.shape.map(g=>g);y[n.shape.length-1]=e,s=$e(n,m,y),t=e}else if(e!=null&&e>t){const m=n.shape.map(y=>y);m[n.shape.length-1]=e-t,s=Ze([n,Kn(m)],n.shape.length-1),t=e}else s=n;const i=$t(s),o=W(Dn(s,i),[r,t]),a=Bo(o),u=Math.floor(t/2)+1,l=Zr(a),c=ri(a),h=ts(l,[u,t-u],l.shape.length-1),d=ts(c,[u,t-u],c.shape.length-1),p=s.shape.slice();return p[s.shape.length-1]=u,W(Dn(h[0],d[0]),p)}const Mo=O({rfft_:SC});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TC(n,e){let t=E(n,"a","squaredDifference"),r=E(e,"b","squaredDifference");[t,r]=Pe(t,r),fe(t.shape,r.shape);const s={a:t,b:r},i={};return D.runKernel(hh,s,i)}const _d=O({squaredDifference_:TC});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CC(n,e){const t=E(n,"x","squeeze","string_or_numeric");return W(t,Fn(t.shape,e).newShape)}const Ut=O({squeeze_:CC});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EC(n,e=0){const t=Ms(n,"tensors","stack","string_or_numeric");N(t.length>=1,()=>"Pass at least one tensor to tf.stack"),t.length>0&&N(e<=t[0].rank,()=>"Axis must be <= rank of the tensor");const r=t,s={axis:e};return D.runKernel(Ec,r,s)}const vn=O({stack_:EC});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NC(n,e=0){const r={x:E(n,"x","step")},s={alpha:e};return D.runKernel(Ch,r,s)}const Rd=O({step_:NC});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IC(n,e,t,r,s=0,i=0,o=0,a=0,u=0){const c={x:E(n,"x","stridedSlice","string_or_numeric")},h={begin:e,end:t,strides:r,beginMask:s,endMask:i,ellipsisMask:o,newAxisMask:a,shrinkAxisMask:u};return D.runKernel(dh,c,h)}const K0=O({stridedSlice_:IC});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kC(n){const t={x:E(n,"x","tan","float32")};return D.runKernel(yh,t)}const X0=O({tan_:kC});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zt(n,e){kr(n);const t=xn(n,e);if(t.length!==1)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Qn(n,null,t,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xr(n,e,t){if(kr(n),e!=null&&e.length!==2)throw new Error("tensor2d() requires shape to have two numbers");const r=xn(n,t);if(r.length!==2&&r.length!==1)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(r.length===1&&e==null)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Qn(n,e,r,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Y0(n,e,t){if(kr(n),e!=null&&e.length!==4)throw new Error("tensor4d() requires shape to have four numbers");const r=xn(n,t);if(r.length!==4&&r.length!==1)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(r.length===1&&e==null)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return Qn(n,e,r,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Q0(n,e,t){if(kr(n),e!=null&&e.length!==5)throw new Error("tensor5d() requires shape to have five numbers");const r=xn(n,t);if(r.length!==5&&r.length!==1)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(r.length===1&&e==null)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return Qn(n,e,r,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Z0(n,e,t){if(kr(n),e!=null&&e.length!==6)throw new Error("tensor6d() requires shape to have six numbers");const r=xn(n,t);if(r.length!==6&&r.length!==1)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(r.length===1&&e==null)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return e=e||r,Qn(n,e,r,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _C(n,e=1,t=!0){const r=E(n,"x","topk");if(r.rank===0)throw new Error("topk() expects the input to be of rank 1 or higher");const s=r.shape[r.shape.length-1];if(e<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${e}`);if(e>s)throw new Error(`'k' passed to topk() must be <= the last dimension (${s}) but got ${e}`);const i={x:r},o={k:e,sorted:t},[a,u]=D.runKernel(bh,i,o);return{values:a,indices:u}}const J0=O({topk_:_C});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RC(n,e=0,t=1,r,s){if(Tt(n),r!=null&&r==="bool")throw new Error("Unsupported data type $ { dtype }");const i=new Td(e,t,r,!0,s),o=De(n,r);for(let a=0;a<o.values.length;a++)o.values[a]=i.nextValue();return o.toTensor()}const ex=O({truncatedNormal_:RC});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AC(n,e=0){const t=E(n,"x","unique","string_or_numeric");N(t.rank>0,()=>"The input tensor must be at least 1D");const r={x:t},s={axis:e},[i,o]=D.runKernel(vh,r,s);return{values:i,indices:o}}const tx=O({unique_:AC});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OC(n,e,t){const r=E(n,"x","unsortedSegmentSum"),s=E(e,"segmentIds","unsortedSegmentSum","int32");N(br(t),()=>"numSegments must be of dtype int");const i={x:r,segmentIds:s},o={numSegments:t};return D.runKernel(Sh,i,o)}const nx=O({unsortedSegmentSum_:OC});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DC(n,e=0){const t=E(n,"x","unstack","string_or_numeric");N(e>=-t.shape.length&&e<t.shape.length,()=>`Axis = ${e} is not in [-${t.shape.length}, ${t.shape.length})`);const r={value:t},s={axis:e};return D.runKernel($h,r,s)}const Jn=O({unstack_:DC});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rx(n,e){return Lo(n,e,"right")}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sx(n,e=!0,t,r){return D.makeVariable(n,e,t,r)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ad(n,e){const t=[];for(let i=0;i<e.length;i++)e[i]&&t.push(i);const r=De(n,"int32"),s=De([t.length,n.length],"int32");for(let i=0;i<t.length;i++){const o=r.indexToLoc(t[i]),a=i*n.length;s.values.set(o,a)}return s.toTensor()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function FC(n){const e=E(n,"condition","whereAsync","bool"),t=await e.data(),r=Ad(e.shape,t);return n!==e&&e.dispose(),r}const Od=FC;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function PC(n,e,t){const r=E(n,"tensor","boolMask"),s=E(e,"mask","boolMask","bool"),i=t==null?0:t,o=s.rank,a=r.shape;N(o>0,()=>"mask cannot be scalar"),Je(a.slice(i,i+o),s.shape,"mask's shape must match the first K dimensions of tensor's shape,");let u=1;for(let y=i;y<i+o;y++)u*=a[y];const l=a.slice(0,i).concat([u],a.slice(i+o)),c=W(r,l),h=W(s,[-1]),d=await Od(h),p=Ut(d,[1]),m=ad(c,p,i);return n!==r&&r.dispose(),e!==s&&s.dispose(),p.dispose(),c.dispose(),h.dispose(),d.dispose(),m}const ix=PC;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LC(n,e,t,r,s=!0){const i=E(n,"v","movingAverage"),o=E(e,"x","movingAverage"),a=E(t,"decay","movingAverage");gg(i,o),N(Oe(i.shape,o.shape),()=>"Shape mismatch in v and x");const u=ue(1),l=ce(u,a);let c=Y(ce(o,i),l);if(s){N(r!=null,()=>"When using zeroDebias: true, step is required.");const h=E(r,"step","movingAverage");c=Se(c,ce(u,Jr(a,h)))}return se(i,c)}const ox=O({movingAverage_:LC});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BC(n,e,t){Tt(t);const r=E(n,"indices","scatterND","int32"),s=E(e,"updates","scatterND");Hh(s,r,t);const i={indices:r,updates:s},o={shape:t};return D.runKernel(Hc,i,o)}const ax=O({scatterND_:BC});function MC(n,e,t,r){if(n.dtype!=="int32")throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${n.dtype}.`);if(n.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${n.shape}.`);const s=n.rank>0?n.shape[0]:1,i=n.rank>1?n.shape[1]:1;if(t.length!==i)throw new Error(`outputShape has incorrect number of elements:, ${t.length}, should be: ${i}.`);const o=e.size;if(!(e.rank===0||e.rank===1&&o===s))throw new Error(`sparseValues has incorrect shape ${e.shape}, should be [] or [${s}]`);if(e.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VC(n,e,t,r=0){Tt(t);const s=E(n,"sparseIndices","sparseToDense","int32"),i=E(e,"sparseValues","sparseToDense","string_or_numeric"),o=E(r,"defaultValue","sparseToDense",i.dtype);MC(s,i,t,o);const a={sparseIndices:s,sparseValues:i,defaultValue:o},u={outputShape:t};return D.runKernel(ch,a,u)}const ux=O({sparseToDense_:VC});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UC(n,e){const t=E(e,"indices","gatherND","int32"),s={params:E(n,"x","gatherND","string_or_numeric"),indices:t};return D.runKernel(Wl,s)}const lx=O({gatherND_:UC});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zC(n,e){if(e==null)return n.shape.slice();if(Oe(n.shape,e))return e;if(n.shape.length===e.length){const t=[];for(let r=0;r<n.shape.length;r++)e[r]==null&&n.shape[r]!=null?t.push(n.shape[r]):t.push(e[r]);return t}return e}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WC(n,e,t,r){const s=E(n,"x","dropout");if(N(s.dtype==="float32",()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${s.dtype} tensor instead.`),N(e>=0&&e<1,()=>`rate must be a float in the range [0, 1), but got ${e}.`),e===0)return n instanceof be?s.clone():s;const i=zC(s,t),o=1-e,a=Se(od(se(Ed(i,0,1,"float32",r),o)),o);return Y(s,a)}const cx=O({dropout_:WC});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dd(n){return Math.floor(Math.pow(2,Math.ceil(Math.log(n)/Math.log(2))))}function Vo(n,e,t){const r=1-n%2,s=new Float32Array(n);for(let i=0;i<n;++i){const o=2*Math.PI*i/(n+r-1);s[i]=e-t*Math.cos(o)}return zt(s,"float32")}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function GC(n,e,t=1){const r=E(n,"predictions","inTopK"),s=E(e,"targets","inTopK");N(r.rank>1,()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${r.rank}`),N(r.rank-1===s.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${r.rank} and targets rank ${s.rank}`),Je(r.shape.slice(0,r.shape.length-1),s.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const i=r.shape[r.shape.length-1];N(t>0&&t<=i,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${i}), but got ${t}`);const o=await r.data(),a=await s.data(),[u,l]=[o.length/i,i],c=yn("bool",u);for(let h=0;h<u;h++){const d=h*l,p=o.subarray(d,d+l),m=[];for(let y=0;y<p.length;y++)m.push({value:p[y],index:y});m.sort((y,g)=>g.value-y.value),c[h]=0;for(let y=0;y<t;y++)if(m[y].index===a[h]){c[h]=1;break}}return n!==r&&r.dispose(),e!==s&&s.dispose(),Gt(c,s.shape,"bool")}const hx=GC;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HC(n,e,t,r,s,i="NHWC",o){let a=n;n.rank===3&&(a=W(n,[1,n.shape[0],n.shape[1],n.shape[2]]));let u=e;u.rank===3&&(u=W(e,[1,e.shape[0],e.shape[1],e.shape[2]])),N(a.rank===4,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${a.shape}.`),N(u.rank===4,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${u.shape}.`),N(t.length===4,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${t}.`);const l=i==="NHWC"?a.shape[3]:a.shape[1],c=i==="NHWC"?u.shape[3]:u.shape[1];N(l===t[2],()=>`Error in conv2dDerFilter: depth of input ${l}) must match input depth in filter (${t[2]}.`),N(c===t[3],()=>`Error in conv2dDerFilter: depth of dy (${c}) must match output depth for filter (${t[3]}).`),jt("conv2dDerFilter",s,o);const h={x:a,dy:u},d={strides:r,pad:s,dataFormat:i,dimRoundingMode:o,filterShape:t};return D.runKernel(dl,h,d)}const jC=O({conv2DBackpropFilter_:HC});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Uo(n,e,t){if(t==null||t==="linear")return n;if(t==="relu")return Y(n,Rd(e));throw new Error(`Cannot compute gradient for fused activation ${t}.`)}function zo(n,e){let t=e;const r=Uh(n.shape,e.shape);return r.length>0&&(t=Ce(t,r)),W(t,n.shape)}function Wo(n,e,t,r){if(e==="linear")return n;if(e==="relu")return ci(n);if(e==="elu")return nd(n);if(e==="relu6")return Nd(n);if(e==="prelu")return $d(n,t);if(e==="leakyrelu")return ld(n,r);if(e==="sigmoid")return gn(n);throw new Error(`Unknown fused activation ${e}.`)}const Go=(n,e)=>!(n>0)||e==="linear";/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qC({x:n,filter:e,strides:t,pad:r,dataFormat:s="NHWC",dilations:i=[1,1],dimRoundingMode:o,bias:a,activation:u="linear",preluActivationWeights:l,leakyreluAlpha:c}){if(u=u||"linear",Go(D.state.gradientDepth,u)===!1){N(s==="NHWC",()=>`Error in fused conv2d: got dataFormat of ${s} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`);let A=ai(n,e,t,r,s,i,o);return a!=null&&(A=se(A,a)),Wo(A,u,l,c)}const h=E(n,"x","conv2d","float32"),d=E(e,"filter","conv2d","float32");let p=h,m=!1;h.rank===3&&(m=!0,p=W(h,[1,h.shape[0],h.shape[1],h.shape[2]])),N(p.rank===4,()=>`Error in fused conv2d: input must be rank 4, but got rank ${p.rank}.`),N(d.rank===4,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${d.rank}.`),jt("fused conv2d",r,o);const y=s==="NHWC"?p.shape[3]:p.shape[1];N(d.shape[2]===y,()=>`Error in conv2d: depth of input (${y}) must match input depth for filter ${d.shape[2]}.`),N(Et(t,i),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${t} and dilations '${i}'`);const g=kt(p.shape,d.shape,t,i,r,o);let x;a!=null&&(x=E(a,"bias","fused conv2d"),[x]=Pe(x,h),s==="NHWC"?fe(g.outShape,x.shape):(N(x.shape.length<=1,()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${x.shape.length}.`),N(x.shape.length===0||x.shape[0]===g.outChannels||x.shape[0]===1,()=>`Error in fused conv2d: bias shape (${x.shape}) is not compatible with the number of output channels (${g.outChannels})`)));let $;if(l!=null){const A=l.shape;if(N(A.length<=1||A.length===3,()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${A.length}.`),A.length===1)N(A[0]===1||A[0]===g.outChannels,()=>`Error in fused conv2d: PReLU activation weights (${A}) is not compatible with the number of output channels (${g.outChannels}).`);else if(A.length===3)try{fe(A,g.outShape)}catch{const P=`Error in fused conv2d: PReLU activation weights (${A}) is not compatible with the output shape of the conv2d (${g.outShape}).`;throw Error(P)}$=E(l,"prelu weights","fused conv2d")}const C=(A,L)=>{N(s==="NHWC",()=>`Error in gradient of fused conv2D: got dataFormat of ${s} but only NHWC is currently supported.`);const[P,M,U,V]=L,j=Uo(A,U,u);N(Ws(i),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${i}'`);const K=Ny(M.shape,j,P,t,r),H=jC(M,j,P.shape,t,r),ne=[K,H];if(V!=null){const le=zo(V,j);ne.push(le)}return ne},S={x:p,filter:d,bias:x,preluActivationWeights:$},I={strides:t,pad:r,dataFormat:s,dilations:i,dimRoundingMode:o,activation:u,leakyreluAlpha:c};return a==null?wn((L,P,M)=>{let U=D.runKernel(ro,S,I);return M([P,L,U]),m&&(U=W(U,[U.shape[1],U.shape[2],U.shape[3]])),{value:U,gradFunc:C}})(p,d):wn((L,P,M,U)=>{let V=D.runKernel(ro,S,I);return U([P,L,V,M]),m&&(V=W(V,[V.shape[1],V.shape[2],V.shape[3]])),{value:V,gradFunc:C}})(p,d,x)}const KC=O({fusedConv2d_:qC});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XC(n,e,t,r,s,i=[1,1],o){let a=n;n.rank===3&&(a=W(n,[1,n.shape[0],n.shape[1],n.shape[2]]));let u=e;u.rank===3&&(u=W(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const l={x:a,dy:u},c={strides:r,pad:s,dimRoundingMode:o,dilations:i,filterShape:t};return D.runKernel(Tl,l,c)}const YC=O({depthwiseConv2dNativeBackpropFilter_:XC});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QC(n,e,t,r,s,i=[1,1],o){let a=e,u=!1;e.rank===3&&(u=!0,a=W(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const l={dy:a,filter:t},c={strides:r,pad:s,dimRoundingMode:o,dilations:i,inputShape:n},h=D.runKernel(Cl,l,c);return u?W(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const ZC=O({depthwiseConv2dNativeBackpropInput_:QC});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JC({x:n,filter:e,strides:t,pad:r,dataFormat:s="NHWC",dilations:i=[1,1],dimRoundingMode:o,bias:a,activation:u="linear",preluActivationWeights:l,leakyreluAlpha:c}){if(Go(D.state.gradientDepth,u)===!1){let I=Do(n,e,t,r,s,i,o);return a!=null&&(I=se(I,a)),Wo(I,u,l,c)}const h=E(n,"x","depthwiseConv2d","float32"),d=E(e,"filter","depthwiseConv2d","float32");let p=h,m=!1;h.rank===3&&(m=!0,p=W(h,[1,h.shape[0],h.shape[1],h.shape[2]])),N(p.rank===4,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${p.rank}.`),N(d.rank===4,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${d.rank}.`),N(p.shape[3]===d.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${p.shape[3]}) must match the inChannels dimension in filter ${d.shape[2]}.`),i==null&&(i=[1,1]),N(Et(t,i),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${t} and dilations '${i}'`),jt("fused depthwiseConv2d",r,o);const y=kt(p.shape,d.shape,t,i,r,o,!0);let g;a!=null&&(g=E(a,"bias","fused conv2d"),[g]=Pe(g,h),fe(y.outShape,g.shape));let x;l!=null&&(x=E(l,"prelu weights","fused depthwiseConv2d"));const $=(I,A)=>{N(Ws(i),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${i}'`);const[L,P,M,U]=A,V=Uo(I,M,u),j=ZC(P.shape,V,L,t,r,i,o),K=YC(P,V,L.shape,t,r,i,o);if(U!=null){const H=zo(g,V);return[j,K,H]}return[j,K]},C={x:p,filter:d,bias:g,preluActivationWeights:x},S={strides:t,pad:r,dataFormat:s,dilations:i,dimRoundingMode:o,activation:u,leakyreluAlpha:c};return a==null?wn((A,L,P)=>{let M=D.runKernel(so,C,S);return P([L,A,M]),m&&(M=W(M,[M.shape[1],M.shape[2],M.shape[3]])),{value:M,gradFunc:$}})(p,d):wn((A,L,P,M)=>{let U=D.runKernel(so,C,S);return M([L,A,U,P]),m&&(U=W(U,[U.shape[1],U.shape[2],U.shape[3]])),{value:U,gradFunc:$}})(p,d,g)}const eE=O({fusedDepthwiseConv2d_:JC});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tE({a:n,b:e,transposeA:t=!1,transposeB:r=!1,bias:s,activation:i="linear",preluActivationWeights:o,leakyreluAlpha:a=.2}){if(Go(D.state.gradientDepth,i)===!1){let V=ge(n,e,t,r);return s!=null&&(V=se(V,s)),Wo(V,i,o,a)}let u=E(n,"a","fused matMul"),l=E(e,"b","fused matMul");[u,l]=Pe(u,l);const c=t?u.shape[u.rank-2]:u.shape[u.rank-1],h=r?l.shape[l.rank-1]:l.shape[l.rank-2],d=t?u.shape[u.rank-1]:u.shape[u.rank-2],p=r?l.shape[l.rank-2]:l.shape[l.rank-1],m=u.shape.slice(0,-2),y=l.shape.slice(0,-2),g=q(m),x=q(y);N(c===h,()=>`Error in fused matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${u.shape} and ${l.shape} and transposeA=${t} and transposeB=${r} must match.`);const C=fe(u.shape.slice(0,-2),l.shape.slice(0,-2)).concat([d,p]),S=t?W(u,[g,c,d]):W(u,[g,d,c]),I=r?W(l,[x,p,h]):W(l,[x,h,p]);let A;s!=null&&(A=E(s,"bias","fused matMul"),[A]=Pe(A,u),fe(C,A.shape));let L;o!=null&&(L=E(o,"prelu weights","fused matMul"));const P=(V,j)=>{const[K,H,ne,le]=j,pe=Uo(W(V,ne.shape),ne,i);let de,Ne;if(!t&&!r?(de=ge(pe,H,!1,!0),Ne=ge(K,pe,!0,!1)):!t&&r?(de=ge(pe,H,!1,!1),Ne=ge(pe,K,!0,!1)):t&&!r?(de=ge(H,pe,!1,!0),Ne=ge(K,pe,!1,!1)):(de=ge(H,pe,!0,!0),Ne=ge(pe,K,!0,!0)),s!=null){const Ke=zo(le,pe);return[de,Ne,Ke]}else return[de,Ne]},M={a:S,b:I,bias:A,preluActivationWeights:L},U={transposeA:t,transposeB:r,activation:i,leakyreluAlpha:a};return s==null?wn((j,K,H)=>{const ne=D.runKernel(no,M,U);return H([j,K,ne]),{value:W(ne,C),gradFunc:P}})(S,I):wn((j,K,H,ne)=>{const le=D.runKernel(no,M,U);return ne([j,K,le,H]),{value:W(le,C),gradFunc:P}})(S,I,A)}const nE=O({fusedMatMul_:tE});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dx=Object.freeze(Object.defineProperty({__proto__:null,conv2d:KC,depthwiseConv2d:eE,matMul:nE},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rE(n){return Vo(n,.54,.46)}const sE=O({hammingWindow_:rE});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iE(n){return Vo(n,.5,.5)}const px=O({hannWindow_:iE});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oE(n,e,t,r=!1,s=0){let i=0;const o=[];for(;i+e<=n.size;)o.push($e(n,i,e)),i+=t;if(r)for(;i<n.size;){const a=i+e-n.size,u=Ze([$e(n,i,e-a),os([a],s)]);o.push(u),i+=t}return o.length===0?xr([],[0,e]):W(Ze(o),[o.length,e])}const fx=O({frame_:oE});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aE(n,e,t,r,s=px){r==null&&(r=Dd(e));const i=fx(n,e,t),o=Y(i,s(e));return Mo(o,r)}const uE=O({stft_:aE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lE(n,e,t,r,s="bilinear",i=0){const o=E(n,"image","cropAndResize"),a=E(e,"boxes","cropAndResize","float32"),u=E(t,"boxInd","cropAndResize","int32"),l=a.shape[0];N(o.rank===4,()=>`Error in cropAndResize: image must be rank 4,but got rank ${o.rank}.`),N(a.rank===2&&a.shape[1]===4,()=>`Error in cropAndResize: boxes must be have size [${l},4] but had shape ${a.shape}.`),N(u.rank===1&&u.shape[0]===l,()=>`Error in cropAndResize: boxInd must be have size [${l}] but had shape ${a.shape}.`),N(r.length===2,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`),N(r[0]>=1&&r[1]>=1,()=>`cropSize must be atleast [1,1], but was ${r}`),N(s==="bilinear"||s==="nearest",()=>`method must be bilinear or nearest, but was ${s}`);const c={image:o,boxes:a,boxInd:u},h={method:s,extrapolationValue:i,cropSize:r};return D.runKernel(wl,c,h)}const cE=O({cropAndResize_:lE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hE(n){const e=E(n,"image","flipLeftRight","float32");N(e.rank===4,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${e.rank}.`);const t={image:e};return D.runKernel(Bl,t,{})}const dE=O({flipLeftRight_:hE});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pE(n){const e=E(n,"image","grayscaleToRGB"),t=e.rank-1,r=e.shape[t];N(e.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${e.rank}.`),N(r===1,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${r}.`);const s=new Array(e.rank);return s.fill(1,0,t),s[t]=3,qr(e,s)}const fE=O({grayscaleToRGB_:pE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mE(n,e,t=0,r=.5){const s=E(n,"image","rotateWithOffset","float32");N(s.rank===4,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${s.rank}.`);const i={image:s},o={radians:e,fillValue:t,center:r};return D.runKernel(Eh,i,o)}const gE=O({rotateWithOffset_:mE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function us(n,e,t,r,s,i){r==null&&(r=.5),s==null&&(s=Number.NEGATIVE_INFINITY),i==null&&(i=0);const o=n.shape[0];return t=Math.min(t,o),N(0<=r&&r<=1,()=>`iouThreshold must be in [0, 1], but was '${r}'`),N(n.rank===2,()=>`boxes must be a 2D tensor, but was of rank '${n.rank}'`),N(n.shape[1]===4,()=>`boxes must have 4 columns, but 2nd dimension was ${n.shape[1]}`),N(e.rank===1,()=>"scores must be a 1D tensor"),N(e.shape[0]===o,()=>`scores has incompatible shape with boxes. Expected ${o}, but was ${e.shape[0]}`),N(0<=i&&i<=1,()=>`softNmsSigma must be in [0, 1], but was '${i}'`),{maxOutputSize:t,iouThreshold:r,scoreThreshold:s,softNmsSigma:i}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yE(n,e,t,r=.5,s=Number.NEGATIVE_INFINITY){const i=E(n,"boxes","nonMaxSuppression","float32"),o=E(e,"scores","nonMaxSuppression","float32"),a=us(i,o,t,r,s);t=a.maxOutputSize,r=a.iouThreshold,s=a.scoreThreshold;const u={maxOutputSize:t,iouThreshold:r,scoreThreshold:s};return D.runKernel(vc,{boxes:i,scores:o},u)}const xE=O({nonMaxSuppression_:yE});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bE(n,e,t){const r=wE(n,e,t),s=r<0?-(r+1):r;n.splice(s,0,e)}function wE(n,e,t){return $E(n,e,t||vE)}function vE(n,e){return n>e?1:n<e?-1:0}function $E(n,e,t){let r=0,s=n.length,i=0,o=!1;for(;r<s;){i=r+(s-r>>>1);const a=t(e,n[i]);a>0?r=i+1:(s=i,o=!a)}return o?r:-r-1}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fd(n,e,t,r,s){return Bd(n,e,t,r,s,0)}function Pd(n,e,t,r,s,i){return Bd(n,e,t,r,s,0,!1,i,!0)}function Ld(n,e,t,r,s,i){return Bd(n,e,t,r,s,i,!0)}function Bd(n,e,t,r,s,i,o=!1,a=!1,u=!1){const l=[];for(let g=0;g<e.length;g++)e[g]>s&&l.push({score:e[g],boxIndex:g,suppressBeginIndex:0});l.sort(df);const c=i>0?-.5/i:0,h=[],d=[];for(;h.length<t&&l.length>0;){const g=l.pop(),{score:x,boxIndex:$,suppressBeginIndex:C}=g;if(x<s)break;let S=!1;for(let I=h.length-1;I>=C;--I){const A=SE(n,$,h[I]);if(A>=r){S=!0;break}if(g.score=g.score*TE(r,c,A),g.score<=s)break}g.suppressBeginIndex=h.length,S||(g.score===x?(h.push($),d.push(g.score)):g.score>s&&bE(l,g,df))}const p=h.length,m=t-p;a&&m>0&&(h.push(...new Array(m).fill(0)),d.push(...new Array(m).fill(0)));const y={selectedIndices:h};return o&&(y.selectedScores=d),u&&(y.validOutputs=p),y}function SE(n,e,t){const r=n.subarray(e*4,e*4+4),s=n.subarray(t*4,t*4+4),i=Math.min(r[0],r[2]),o=Math.min(r[1],r[3]),a=Math.max(r[0],r[2]),u=Math.max(r[1],r[3]),l=Math.min(s[0],s[2]),c=Math.min(s[1],s[3]),h=Math.max(s[0],s[2]),d=Math.max(s[1],s[3]),p=(a-i)*(u-o),m=(h-l)*(d-c);if(p<=0||m<=0)return 0;const y=Math.max(i,l),g=Math.max(o,c),x=Math.min(a,h),$=Math.min(u,d),C=Math.max(x-y,0)*Math.max($-g,0);return C/(p+m-C)}function TE(n,e,t){const r=Math.exp(e*t*t);return t<=n?r:0}function df(n,e){return n.score-e.score||n.score===e.score&&e.boxIndex-n.boxIndex}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function CE(n,e,t,r=.5,s=Number.NEGATIVE_INFINITY){const i=E(n,"boxes","nonMaxSuppressionAsync"),o=E(e,"scores","nonMaxSuppressionAsync"),a=us(i,o,t,r,s);t=a.maxOutputSize,r=a.iouThreshold,s=a.scoreThreshold;const u=await Promise.all([i.data(),o.data()]),l=u[0],c=u[1],{selectedIndices:h}=Fd(l,c,t,r,s);return i!==n&&i.dispose(),o!==e&&o.dispose(),zt(h,"int32")}const EE=CE;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NE(n,e,t,r=.5,s=Number.NEGATIVE_INFINITY,i=0){const o=E(n,"boxes","nonMaxSuppression"),a=E(e,"scores","nonMaxSuppression"),u=us(o,a,t,r,s,i);t=u.maxOutputSize,r=u.iouThreshold,s=u.scoreThreshold,i=u.softNmsSigma;const l={boxes:o,scores:a},c={maxOutputSize:t,iouThreshold:r,scoreThreshold:s,softNmsSigma:i},h=D.runKernel(Sc,l,c);return{selectedIndices:h[0],selectedScores:h[1]}}const IE=O({nonMaxSuppressionWithScore_:NE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function kE(n,e,t,r=.5,s=Number.NEGATIVE_INFINITY,i=0){const o=E(n,"boxes","nonMaxSuppressionAsync"),a=E(e,"scores","nonMaxSuppressionAsync"),u=us(o,a,t,r,s,i);t=u.maxOutputSize,r=u.iouThreshold,s=u.scoreThreshold,i=u.softNmsSigma;const l=await Promise.all([o.data(),a.data()]),c=l[0],h=l[1],{selectedIndices:d,selectedScores:p}=Ld(c,h,t,r,s,i);return o!==n&&o.dispose(),a!==e&&a.dispose(),{selectedIndices:zt(d,"int32"),selectedScores:zt(p)}}const _E=kE;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RE(n,e,t,r=.5,s=Number.NEGATIVE_INFINITY,i=!1){const o=E(n,"boxes","nonMaxSuppression"),a=E(e,"scores","nonMaxSuppression"),u=us(o,a,t,r,s,null),l=u.maxOutputSize,c=u.iouThreshold,h=u.scoreThreshold,d={boxes:o,scores:a},p={maxOutputSize:l,iouThreshold:c,scoreThreshold:h,padToMaxOutputSize:i},m=D.runKernel($c,d,p);return{selectedIndices:m[0],validOutputs:m[1]}}const AE=O({nonMaxSuppressionPadded_:RE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function OE(n,e,t,r=.5,s=Number.NEGATIVE_INFINITY,i=!1){const o=E(n,"boxes","nonMaxSuppressionAsync"),a=E(e,"scores","nonMaxSuppressionAsync"),u=us(o,a,t,r,s,null),l=u.maxOutputSize,c=u.iouThreshold,h=u.scoreThreshold,[d,p]=await Promise.all([o.data(),a.data()]),{selectedIndices:m,validOutputs:y}=Pd(d,p,l,c,h,i);return o!==n&&o.dispose(),a!==e&&a.dispose(),{selectedIndices:zt(m,"int32"),validOutputs:ue(y,"int32")}}const DE=OE;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FE(n,e,t=!1,r=!1){const s=E(n,"images","resizeBilinear");N(s.rank===3||s.rank===4,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${s.rank}.`),N(e.length===2,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${e}.`),N(r===!1||t===!1,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let i=s,o=!1;s.rank===3&&(o=!0,i=W(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const a={images:i},u={alignCorners:t,halfPixelCenters:r,size:e},l=D.runKernel(Vc,a,u);return o?W(l,[l.shape[1],l.shape[2],l.shape[3]]):l}const PE=O({resizeBilinear_:FE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LE(n,e,t=!1,r=!1){const s=E(n,"images","resizeNearestNeighbor");N(s.rank===3||s.rank===4,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${s.rank}.`),N(e.length===2,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${e}.`),N(s.dtype==="float32"||s.dtype==="int32",()=>"`images` must have `int32` or `float32` as dtype"),N(r===!1||t===!1,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let i=s,o=!1;s.rank===3&&(o=!0,i=W(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const a={images:i},u={alignCorners:t,halfPixelCenters:r,size:e},l=D.runKernel(Mc,a,u);return o?W(l,[l.shape[1],l.shape[2],l.shape[3]]):l}const BE=O({resizeNearestNeighbor_:LE});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ME(n,e="binary",t=!1,r=.5){const s=E(n,"image","threshold"),i=.2989,o=.587,a=.114,u=s.shape[0]*s.shape[1];let l=Y(zt([r]),255),c,h,d,p;if(N(s.rank===3,()=>`Error in threshold: image must be rank 3,but got rank ${s.rank}.`),N(s.shape[2]===3||s.shape[2]===1,()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${s.shape[2]}.`),N(s.dtype==="int32"||s.dtype==="float32",()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${s.dtype}.`),N(e==="otsu"||e==="binary",()=>`Method must be binary or otsu, but was ${e}`),s.shape[2]===3){[c,h,d]=ts(s,[1,1,1],-1);const g=Y(c,i),x=Y(h,o),$=Y(d,a);p=se(se(g,x),$)}else p=n;if(e==="otsu"){const g=td(xe(Id(p),"int32"),Gt([]),256);l=VE(g,u)}const m=t?Fo(p,l):as(p,l);return xe(Y(m,255),"int32")}function VE(n,e){let t=zt([-1]),r=zt([0]),s=zt([0]),i,o,a,u,l,c;for(let h=0;h<n.size-1;h++){i=$e(n,0,h+1),o=$e(n,h+1),l=Se(Ce(i),e),c=Se(Ce(o),e);const d=Ce(Y(i,Xn(0,i.size)));a=Se(d,Ce(i));const p=os(o.shape,i.size),m=se(Xn(0,o.size),p),y=Y(o,m);u=Se(Ce(y),Ce(o));const g=ce(a,u),x=ce(a,u),$=Y(l,c);s=Y(Y($,g),x);const C=as(s,r);r=Cr(C,s,r),t=Cr(C,zt([h]),t)}return t}const UE=O({threshold_:ME});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zE(n,e,t="nearest",r="constant",s=0,i){const o=E(n,"image","transform","float32"),a=E(e,"transforms","transform","float32");N(o.rank===4,()=>`Error in transform: image must be rank 4,but got rank ${o.rank}.`),N(a.rank===2&&(a.shape[0]===o.shape[0]||a.shape[0]===1)&&a.shape[1]===8,()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),N(i==null||i.length===2,()=>`Error in transform: outputShape must be [height, width] or null, but got ${i}.`);const u={image:o,transforms:a},l={interpolation:t,fillMode:r,fillValue:s,outputShape:i};return D.runKernel(wh,u,l)}const WE=O({transform_:zE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GE(n,e,t){N(e%1===0,()=>`bandPart(): numLower must be an integer, got ${e}.`),N(t%1===0,()=>`bandPart(): numUpper must be an integer, got ${t}.`);const r=E(n,"a","bandPart");N(r.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`);const s=r.shape,[i,o]=r.shape.slice(-2);if(!(e<=i))throw new Error(`bandPart(): numLower (${e}) must not be greater than the number of rows (${i}).`);if(!(t<=o))throw new Error(`bandPart(): numUpper (${t}) must not be greater than the number of columns (${o}).`);e<0&&(e=i),t<0&&(t=o);const a=W(Xn(0,i,1,"int32"),[-1,1]),u=Xn(0,o,1,"int32"),l=ce(a,u),c=Gs(Fo(l,ue(+e,"int32")),ud(l,ue(-t,"int32"))),h=Kn([i,o],r.dtype);return W(vn(Jn(W(r,[-1,i,o])).map(d=>Cr(c,d,h))),s)}const HE=O({bandPart_:GE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jE(n){let e;if(Array.isArray(n)){e=!1,N(n!=null&&n.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");const s=n[0].shape[0];for(let i=1;i<n.length;++i)N(n[i].shape[0]===s,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${n[i].shape[0]} vs. ${s})`)}else e=!0,n=ts(n,n.shape[0],0).map(s=>Ut(s,[0]));N(n.length<=n[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${n.length}) exceeds number of dimensions (${n[0].shape[0]}).`);const t=[],r=n;for(let s=0;s<n.length;++s)t.push(D.tidy(()=>{let i=r[s];if(s>0)for(let o=0;o<s;++o){const a=Y(Ce(Y(t[o],i)),t[o]);i=ce(i,a)}return Se(i,li(i,"euclidean"))}));return e?vn(t,0):t}const qE=O({gramSchmidt_:jE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KE(n,e=!1){if(N(n.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${n.rank}`),n.rank===2)return pf(n,e);{const t=n.shape.slice(0,n.shape.length-2).reduce((u,l)=>u*l),r=Jn(W(n,[t,n.shape[n.shape.length-2],n.shape[n.shape.length-1]]),0),s=[],i=[];r.forEach(u=>{const[l,c]=pf(u,e);s.push(l),i.push(c)});const o=W(vn(s,0),n.shape),a=W(vn(i,0),n.shape);return[o,a]}}function pf(n,e=!1){return D.tidy(()=>{N(n.shape.length===2,()=>`qr2d() requires a 2D Tensor, but got a ${n.shape.length}D Tensor.`);const t=n.shape[0],r=n.shape[1];let s=id(t),i=Rn(n);const o=xr([[1]],[1,1]);let a=Rn(o);const u=t>=r?r:t;for(let l=0;l<u;++l){const c=i,h=a,d=s;[a,i,s]=D.tidy(()=>{const p=$e(i,[l,l],[t-l,1]),m=li(p),y=$e(i,[l,l],[1,1]),g=Cr(as(y,0),xr([[-1]]),xr([[1]])),x=ce(y,Y(g,m)),$=Se(p,x);$.shape[0]===1?a=Rn(o):a=Ze([o,$e($,[1,0],[$.shape[0]-1,$.shape[1]])],0);const C=mn(Se(ge(g,x),m)),S=$e(i,[l,0],[t-l,r]),I=Y(C,a),A=Us(a);if(l===0)i=ce(S,ge(I,ge(A,S)));else{const M=ce(S,ge(I,ge(A,S)));i=Ze([$e(i,[0,0],[l,r]),M],0)}const L=Us(I),P=$e(s,[0,l],[t,s.shape[1]-l]);if(l===0)s=ce(P,ge(ge(P,a),L));else{const M=ce(P,ge(ge(P,a),L));s=Ze([$e(s,[0,0],[t,l]),M],1)}return[a,i,s]}),ut([c,h,d])}return!e&&t>r&&(s=$e(s,[0,0],[t,r]),i=$e(i,[0,0],[r,r])),[s,i]})}const XE=O({qr_:KE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var it;(function(n){n[n.NONE=0]="NONE",n[n.MEAN=1]="MEAN",n[n.SUM=2]="SUM",n[n.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"})(it||(it={}));function YE(n,e,t=it.SUM_BY_NONZERO_WEIGHTS){const r=E(n,"losses","computeWeightedLoss");let s=null;e!=null&&(s=E(e,"weights","computeWeightedLoss"));const i=s==null?r:Y(r,s);if(t===it.NONE)return i;if(t===it.SUM)return Ce(i);if(t===it.MEAN){if(s==null)return Hs(i);{const o=r.size/s.size,a=Se(Ce(i),Ce(s));return o>1?Se(a,ue(o)):a}}if(t===it.SUM_BY_NONZERO_WEIGHTS){if(s==null)return Se(Ce(i),ue(r.size));{const o=Y(s,Wn(r.shape)),a=xe(Ce(bd(o,ue(0))),"float32");return Se(Ce(i),a)}}throw Error(`Unknown reduction: ${t}`)}const Pn=O({computeWeightedLoss_:YE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QE(n,e,t,r=it.SUM_BY_NONZERO_WEIGHTS){const s=E(n,"labels","absoluteDifference"),i=E(e,"predictions","absoluteDifference");let o=null;t!=null&&(o=E(t,"weights","absoluteDifference")),Je(s.shape,i.shape,"Error in absoluteDifference: ");const a=bt(ce(s,i));return Pn(a,o,r)}const ZE=O({absoluteDifference_:QE});function JE(n,e,t,r,s=it.SUM_BY_NONZERO_WEIGHTS){const i=E(n,"labels","cosineDistance"),o=E(e,"predictions","cosineDistance");let a=null;r!=null&&(a=E(r,"weights","cosineDistance")),Je(i.shape,o.shape,"Error in cosineDistance: ");const u=ue(1),l=ce(u,Ce(Y(i,o),t,!0));return Pn(l,a,s)}const eN=O({cosineDistance_:JE});function tN(n,e,t,r=it.SUM_BY_NONZERO_WEIGHTS){let s=E(n,"labels","hingeLoss");const i=E(e,"predictions","hingeLoss");let o=null;t!=null&&(o=E(t,"weights","hingeLoss")),Je(s.shape,i.shape,"Error in hingeLoss: ");const a=ue(1);s=ce(Y(ue(2),s),a);const u=ci(ce(a,Y(s,i)));return Pn(u,o,r)}const nN=O({hingeLoss_:tN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rN(n,e,t,r=1,s=it.SUM_BY_NONZERO_WEIGHTS){const i=E(n,"labels","huberLoss"),o=E(e,"predictions","huberLoss");let a=null;t!=null&&(a=E(t,"weights","huberLoss")),Je(i.shape,o.shape,"Error in huberLoss: ");const u=ue(r),l=bt(ce(o,i)),c=yd(l,u),h=ce(l,c),d=se(Y(ue(.5),Ht(c)),Y(u,h));return Pn(d,a,s)}const sN=O({huberLoss_:rN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iN(n,e,t,r=1e-7,s=it.SUM_BY_NONZERO_WEIGHTS){const i=E(n,"labels","logLoss"),o=E(e,"predictions","logLoss");let a=null;t!=null&&(a=E(t,"weights","logLoss")),Je(i.shape,o.shape,"Error in logLoss: ");const u=ue(1),l=ue(r),c=mn(Y(i,es(se(o,l)))),h=Y(ce(u,i),es(se(ce(u,o),l))),d=ce(c,h);return Pn(d,a,s)}const oN=O({logLoss_:iN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aN(n,e,t,r=it.SUM_BY_NONZERO_WEIGHTS){const s=E(n,"labels","meanSquaredError"),i=E(e,"predictions","meanSquaredError");let o=null;t!=null&&(o=E(t,"weights","meanSquaredError")),Je(s.shape,i.shape,"Error in meanSquaredError: ");const a=_d(s,i);return Pn(a,o,r)}const uN=O({meanSquaredError_:aN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lN(n,e){const t=E(n,"labels","sigmoidCrossEntropyWithLogits"),r=E(e,"logits","sigmoidCrossEntropyWithLogits");Je(t.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");const s=ci(r),i=Y(r,t),o=cd(qn(mn(bt(r))));return se(ce(s,i),o)}function cN(n,e,t,r=0,s=it.SUM_BY_NONZERO_WEIGHTS){let i=E(n,"multiClassLabels","sigmoidCrossEntropy");const o=E(e,"logits","sigmoidCrossEntropy");let a=null;if(t!=null&&(a=E(t,"weights","sigmoidCrossEntropy")),Je(i.shape,o.shape,"Error in sigmoidCrossEntropy: "),r>0){const l=ue(r),c=ue(1),h=ue(.5);i=se(Y(i,ce(c,l)),Y(h,l))}const u=lN(i,o);return Pn(u,a,s)}const hN=O({sigmoidCrossEntropy_:cN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dN(n,e,t=-1){if(t===-1&&(t=e.rank-1),t!==e.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${e.rank} and dim was ${t}`);return wn((s,i,o)=>{const u=dd(i,[t],!0),l=ce(xe(i,"float32"),u);o([s,l]);const c=mn(Y(l,s));return{value:Ce(c,[t]),gradFunc:(p,m)=>{const[y,g]=m,x=_t(p.shape,[t]);return[Y(W(p,x),ce(xe(y,"float32"),qn(g))),Y(W(p,x),ce(qn(g),xe(y,"float32")))]}}})(n,e)}function pN(n,e,t,r=0,s=it.SUM_BY_NONZERO_WEIGHTS){let i=E(n,"onehotLabels","softmaxCrossEntropy");const o=E(e,"logits","softmaxCrossEntropy");let a=null;if(t!=null&&(a=E(t,"weights","softmaxCrossEntropy")),Je(i.shape,o.shape,"Error in softmaxCrossEntropy: "),r>0){const l=ue(r),c=ue(1),h=ue(i.shape[1]);i=se(Y(i,ce(c,l)),Se(l,h))}const u=dN(i,o);return Pn(u,a,s)}const fN=O({softmaxCrossEntropy_:pN});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mN(n,e,t,r){const s=E(n,"indices","sparseFillEmptyRows","int32"),i=E(e,"values","sparseFillEmptyRows"),o=E(t,"denseShape","sparseFillEmptyRows","int32"),a=E(r,"defaultValue","sparseFillEmptyRows",i.dtype);if(s.rank!==2)throw new Error(`Indices should be Tensor2D but received shape
        ${s.shape}`);if(i.rank!==1)throw new Error(`Values should be Tensor1D but received shape ${i.shape}`);if(o.rank!==1)throw new Error(`Dense shape should be Tensor1D but received shape ${o.shape}`);if(a.rank!==0)throw new Error(`Default value should be a scalar but received shape ${a.shape}`);const u={indices:s,values:i,denseShape:o,defaultValue:a},l=D.runKernel(oh,u);return{outputIndices:l[0],outputValues:l[1],emptyRowIndicator:l[2],reverseIndexMap:l[3]}}const gN=O({sparseFillEmptyRows_:mN});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yN(n,e,t){const r=E(n,"inputIndices","sparseReshape","int32"),s=E(e,"inputShape","sparseReshape","int32"),i=E(t,"newShape","sparseReshape","int32");if(r.rank!==2)throw new Error(`Input indices should be Tensor2D but received shape
        ${r.shape}`);if(s.rank!==1)throw new Error(`Input shape should be Tensor1D but received shape ${s.shape}`);if(i.rank!==1)throw new Error(`New shape should be Tensor1D but received shape ${i.shape}`);const o={inputIndices:r,inputShape:s,newShape:i},a=D.runKernel(ah,o);return{outputIndices:a[0],outputShape:a[1]}}const xN=O({sparseReshape_:yN});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bN(n,e,t){const r=E(n,"data","sparseSegmentMean"),s=E(e,"indices","sparseSegmentMean","int32"),i=E(t,"segmentIds","sparseSegmentMean","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(s.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
          ${s.shape}`);if(i.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
          ${i.shape}`);const o={data:r,indices:s,segmentIds:i};return D.runKernel(uh,o)}const wN=O({sparseSegmentMean_:bN});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vN(n,e,t){const r=E(n,"data","sparseSegmentSum"),s=E(e,"indices","sparseSegmentSum","int32"),i=E(t,"segmentIds","sparseSegmentSum","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(s.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
         ${s.shape}`);if(i.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
         ${i.shape}`);const o={data:r,indices:s,segmentIds:i};return D.runKernel(lh,o)}const $N=O({sparseSegmentSum_:vN});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SN(n,e,t,r,s,i,o,a){const u=E(n,"data","stringNGrams","string");if(u.dtype!=="string")throw new Error("Data must be of datatype string");if(u.shape.length!==1)throw new Error(`Data must be a vector, saw: ${u.shape}`);const l=E(e,"dataSplits","stringNGrams");if(l.dtype!=="int32")throw new Error("Data splits must be of datatype int32");const c={separator:t,nGramWidths:r,leftPad:s,rightPad:i,padWidth:o,preserveShortSequences:a},h={data:u,dataSplits:l},d=D.runKernel(ph,h,c);return{nGrams:d[0],nGramsSplits:d[1]}}const TN=O({stringNGrams_:SN});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CN(n,e,t=!0){const r=E(n,"input","stringSplit","string"),s=E(e,"delimiter","stringSplit","string");if(r.rank!==1)throw new Error(`Input should be Tensor1D but received shape ${r.shape}`);if(s.rank!==0)throw new Error(`Delimiter should be a scalar but received shape ${s.shape}`);const i={skipEmpty:t},o={input:r,delimiter:s},a=D.runKernel(fh,o,i);return{indices:a[0],values:a[1],shape:a[2]}}const EN=O({stringSplit_:CN});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NN(n,e){const t=E(n,"input","stringToHashBucketFast","string"),r={numBuckets:e};if(e<=0)throw new Error("Number of buckets must be at least 1");const s={input:t};return D.runKernel(mh,s,r)}const IN=O({stringToHashBucketFast_:NN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mx={fft:Bo,ifft:js,rfft:Mo,irfft:kd},gx={hammingWindow:sE,hannWindow:px,frame:fx,stft:uE},Er={flipLeftRight:dE,grayscaleToRGB:fE,resizeNearestNeighbor:BE,resizeBilinear:PE,rotateWithOffset:gE,cropAndResize:cE,nonMaxSuppression:xE,nonMaxSuppressionAsync:EE,nonMaxSuppressionWithScore:IE,nonMaxSuppressionWithScoreAsync:_E,nonMaxSuppressionPadded:AE,nonMaxSuppressionPaddedAsync:DE,threshold:UE,transform:WE},yx={bandPart:HE,gramSchmidt:qE,qr:XE},xx={absoluteDifference:ZE,computeWeightedLoss:Pn,cosineDistance:eN,hingeLoss:nN,huberLoss:sN,logLoss:oN,meanSquaredError:uN,sigmoidCrossEntropy:hN,softmaxCrossEntropy:fN},bx={sparseFillEmptyRows:gN,sparseReshape:xN,sparseSegmentMean:wN,sparseSegmentSum:$N},wx={stringNGrams:TN,stringSplit:EN,stringToHashBucketFast:IN};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class er extends Jg{minimize(e,t=!1,r){const{value:s,grads:i}=this.computeGradients(e,r);if(r!=null){const o=r.map(a=>({name:a.name,tensor:i[a.name]}));this.applyGradients(o)}else this.applyGradients(i);return ut(i),t?s:(s.dispose(),null)}get iterations(){return this.iterations_==null&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return Jy(e,t)}dispose(){this.iterations_!=null&&ut(this.iterations_)}async saveIterations(){return this.iterations_==null&&(this.iterations_=0),{name:"iter",tensor:ue(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(er,Symbol.hasInstance,{value:n=>n.minimize!=null&&n.computeGradients!=null&&n.applyGradients!=null});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ho extends er{constructor(e,t,r=null){super(),this.learningRate=e,this.rho=t,this.epsilon=r,this.accumulatedGrads=[],this.accumulatedUpdates=[],r==null&&(this.epsilon=D.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map(r=>r.name):Object.keys(e)).forEach((r,s)=>{const i=D.registeredVariables[r],o=!1;this.accumulatedGrads[s]==null&&(this.accumulatedGrads[s]={originalName:`${r}/accum_grad`,variable:ie(()=>$t(i).variable(o))}),this.accumulatedUpdates[s]==null&&(this.accumulatedUpdates[s]={originalName:`${r}/accum_var`,variable:ie(()=>$t(i).variable(o))});const a=Array.isArray(e)?e[s].tensor:e[r];if(a==null)return;const u=this.accumulatedGrads[s].variable,l=this.accumulatedUpdates[s].variable;ie(()=>{const c=se(Y(u,this.rho),Y(Ht(a),1-this.rho)),h=Y(Se(bn(se(l,this.epsilon)),bn(se(u,this.epsilon))),a),d=se(Y(l,this.rho),Y(Ht(h),1-this.rho));u.assign(c),l.assign(d);const p=se(Y(h,-this.learningRate),i);i.assign(p)})}),this.incrementIterations()}dispose(){this.accumulatedUpdates!=null&&(ut(this.accumulatedGrads.map(e=>e.variable)),ut(this.accumulatedUpdates.map(e=>e.variable)))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=e.length/2,r=!1;this.accumulatedGrads=e.slice(0,t).map(s=>({originalName:s.name,variable:s.tensor.variable(r)})),this.accumulatedUpdates=e.slice(t,t*2).map(s=>({originalName:s.name,variable:s.tensor.variable(r)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}Ho.className="Adadelta";Zn(Ho);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class jo extends er{constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map(r=>r.name):Object.keys(e)).forEach((r,s)=>{const i=D.registeredVariables[r];this.accumulatedGrads[s]==null&&(this.accumulatedGrads[s]={originalName:`${r}/accumulator`,variable:ie(()=>os(i.shape,this.initialAccumulatorValue).variable(!1))});const o=Array.isArray(e)?e[s].tensor:e[r];if(o==null)return;const a=this.accumulatedGrads[s].variable;ie(()=>{const u=se(a,Ht(o));a.assign(u);const l=se(Y(Se(o,bn(se(u,D.backend.epsilon()))),-this.learningRate),i);i.assign(l)})}),this.incrementIterations()}dispose(){this.accumulatedGrads!=null&&ut(this.accumulatedGrads.map(e=>e.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=!1;this.accumulatedGrads=e.map(r=>({originalName:r.name,variable:r.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}jo.className="Adagrad";Zn(jo);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class qo extends er{constructor(e,t,r,s=null){super(),this.learningRate=e,this.beta1=t,this.beta2=r,this.epsilon=s,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],ie(()=>{this.accBeta1=ue(t).variable(),this.accBeta2=ue(r).variable()}),s==null&&(this.epsilon=D.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map(r=>r.name):Object.keys(e);ie(()=>{const r=ce(1,this.accBeta1),s=ce(1,this.accBeta2);t.forEach((i,o)=>{const a=D.registeredVariables[i],u=!1;this.accumulatedFirstMoment[o]==null&&(this.accumulatedFirstMoment[o]={originalName:`${i}/m`,variable:ie(()=>$t(a).variable(u))}),this.accumulatedSecondMoment[o]==null&&(this.accumulatedSecondMoment[o]={originalName:`${i}/v`,variable:ie(()=>$t(a).variable(u))});const l=Array.isArray(e)?e[o].tensor:e[i];if(l==null)return;const c=this.accumulatedFirstMoment[o].variable,h=this.accumulatedSecondMoment[o].variable,d=se(Y(c,this.beta1),Y(l,1-this.beta1)),p=se(Y(h,this.beta2),Y(Ht(l),1-this.beta2)),m=Se(d,r),y=Se(p,s);c.assign(d),h.assign(p);const g=se(Y(Se(m,se(bn(y),this.epsilon)),-this.learningRate),a);a.assign(g)}),this.accBeta1.assign(Y(this.accBeta1,this.beta1)),this.accBeta2.assign(Y(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),this.accumulatedFirstMoment!=null&&ut(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedSecondMoment!=null&&ut(this.accumulatedSecondMoment.map(e=>e.variable))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e),ie(()=>{this.accBeta1.assign(Jr(this.beta1,this.iterations_+1)),this.accBeta2.assign(Jr(this.beta2,this.iterations_+1))});const t=e.length/2,r=!1;this.accumulatedFirstMoment=e.slice(0,t).map(s=>({originalName:s.name,variable:s.tensor.variable(r)})),this.accumulatedSecondMoment=e.slice(t,t*2).map(s=>({originalName:s.name,variable:s.tensor.variable(r)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}qo.className="Adam";Zn(qo);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ko extends er{constructor(e,t,r,s=null,i=0){super(),this.learningRate=e,this.beta1=t,this.beta2=r,this.epsilon=s,this.decay=i,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],ie(()=>{this.iteration=ue(0).variable(),this.accBeta1=ue(t).variable()}),s==null&&(this.epsilon=D.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map(r=>r.name):Object.keys(e);ie(()=>{const r=ce(1,this.accBeta1),s=Se(-this.learningRate,se(Y(this.iteration,this.decay),1));t.forEach((i,o)=>{const a=D.registeredVariables[i],u=!1;this.accumulatedFirstMoment[o]==null&&(this.accumulatedFirstMoment[o]={originalName:`${i}/m`,variable:$t(a).variable(u)}),this.accumulatedWeightedInfNorm[o]==null&&(this.accumulatedWeightedInfNorm[o]={originalName:`${i}/v`,variable:$t(a).variable(u)});const l=Array.isArray(e)?e[o].tensor:e[i];if(l==null)return;const c=this.accumulatedFirstMoment[o].variable,h=this.accumulatedWeightedInfNorm[o].variable,d=se(Y(c,this.beta1),Y(l,1-this.beta1)),p=Y(h,this.beta2),m=bt(l),y=gd(p,m);c.assign(d),h.assign(y);const g=se(Y(Se(s,r),Se(d,se(y,this.epsilon))),a);a.assign(g)}),this.iteration.assign(se(this.iteration,1)),this.accBeta1.assign(Y(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),this.accumulatedFirstMoment!=null&&ut(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedWeightedInfNorm!=null&&ut(this.accumulatedWeightedInfNorm.map(e=>e.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}Ko.className="Adamax";Zn(Ko);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class hi extends er{constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map(r=>r.name):Object.keys(e)).forEach((r,s)=>{const i=Array.isArray(e)?e[s].tensor:e[r];if(i==null)return;const o=D.registeredVariables[r];ie(()=>{const a=se(Y(this.c,i),o);o.assign(a)})}),this.incrementIterations()}setLearningRate(e){this.learningRate=e,this.c!=null&&this.c.dispose(),this.c=nn(ue(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(e=await this.extractIterations(e),e.length!==0)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}hi.className="SGD";Zn(hi);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Xo extends hi{constructor(e,t,r=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=r,this.accumulations=[],this.m=ue(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map(r=>r.name):Object.keys(e)).forEach((r,s)=>{const i=D.registeredVariables[r];this.accumulations[s]==null&&(this.accumulations[s]={originalName:`${r}/momentum`,variable:ie(()=>$t(i).variable(!1))});const o=this.accumulations[s].variable,a=Array.isArray(e)?e[s].tensor:e[r];a!=null&&ie(()=>{let u;const l=se(Y(this.m,o),a);this.useNesterov?u=se(Y(this.c,se(a,Y(l,this.m))),i):u=se(Y(this.c,l),i),o.assign(l),i.assign(u)})}),this.incrementIterations()}dispose(){this.m.dispose(),this.accumulations!=null&&ut(this.accumulations.map(e=>e.variable))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=!1;this.accumulations=e.map(r=>({originalName:r.name,variable:r.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}Xo.className="Momentum";Zn(Xo);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Yo extends er{constructor(e,t=.9,r=0,s=null,i=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=r,this.epsilon=s,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=i,s==null&&(this.epsilon=D.backend.epsilon()),e==null)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map(r=>r.name):Object.keys(e)).forEach((r,s)=>{const i=D.registeredVariables[r],o=!1;this.accumulatedMeanSquares[s]==null&&(this.accumulatedMeanSquares[s]={originalName:`${r}/rms`,variable:ie(()=>$t(i).variable(o))}),this.accumulatedMoments[s]==null&&(this.accumulatedMoments[s]={originalName:`${r}/momentum`,variable:ie(()=>$t(i).variable(o))}),this.accumulatedMeanGrads[s]==null&&this.centered&&(this.accumulatedMeanGrads[s]={originalName:`${r}/mg`,variable:ie(()=>$t(i).variable(o))});const a=Array.isArray(e)?e[s].tensor:e[r];if(a==null)return;const u=this.accumulatedMeanSquares[s].variable,l=this.accumulatedMoments[s].variable;ie(()=>{const c=se(Y(u,this.decay),Y(Ht(a),1-this.decay));if(this.centered){const h=this.accumulatedMeanGrads[s].variable,d=se(Y(h,this.decay),Y(a,1-this.decay)),p=Se(Y(a,this.learningRate),bn(ce(c,se(Ht(d),this.epsilon)))),m=se(Y(l,this.momentum),p);u.assign(c),h.assign(d),l.assign(m);const y=ce(i,m);i.assign(y)}else{const h=se(Y(u,this.decay),Y(Ht(a),1-this.decay)),d=se(Y(l,this.momentum),Se(Y(a,this.learningRate),bn(se(h,this.epsilon))));u.assign(h),l.assign(d);const p=ce(i,d);i.assign(p)}})}),this.incrementIterations()}dispose(){this.accumulatedMeanSquares!=null&&ut(this.accumulatedMeanSquares.map(e=>e.variable)),this.accumulatedMeanGrads!=null&&this.centered&&ut(this.accumulatedMeanGrads.map(e=>e.variable)),this.accumulatedMoments!=null&&ut(this.accumulatedMoments.map(e=>e.variable))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,r=!1;this.accumulatedMeanSquares=e.slice(0,t).map(s=>({originalName:s.name,variable:s.tensor.variable(r)})),this.accumulatedMoments=e.slice(t,t*2).map(s=>({originalName:s.name,variable:s.tensor.variable(r)})),this.centered&&(this.accumulatedMeanGrads=e.slice(t*2,t*3).map(s=>({originalName:s.name,variable:s.tensor.variable(r)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}Yo.className="RMSProp";Zn(Yo);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Mn{static sgd(e){return new hi(e)}static momentum(e,t,r=!1){return new Xo(e,t,r)}static rmsprop(e,t=.9,r=0,s=null,i=!1){return new Yo(e,t,r,s,i)}static adam(e=.001,t=.9,r=.999,s=null){return new qo(e,t,r,s)}static adadelta(e=.001,t=.95,r=null){return new Ho(e,t,r)}static adamax(e=.002,t=.9,r=.999,s=null,i=0){return new Ko(e,t,r,s,i)}static adagrad(e,t=.1){return new jo(e,t)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kN={sgd:Mn.sgd,momentum:Mn.momentum,adadelta:Mn.adadelta,adagrad:Mn.adagrad,rmsprop:Mn.rmsprop,adamax:Mn.adamax,adam:Mn.adam};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _N=(()=>typeof requestAnimationFrame<"u"?requestAnimationFrame:typeof setImmediate<"u"?setImmediate:n=>n())();function vx(){return new Promise(n=>_N(()=>n()))}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $x(n,e){const t=n[0].length;n.forEach((s,i)=>{N(s.length===t,()=>`Error in concat${t}D: rank of tensors[${i}] must be the same as the rank of the rest (${t})`)}),N(e>=0&&e<t,()=>`Error in concat${t}D: axis must be between 0 and ${t-1}.`);const r=n[0];n.forEach((s,i)=>{for(let o=0;o<t;o++)N(o===e||s[o]===r[o],()=>`Error in concat${t}D: Shape of tensors[${i}] (${s}) does not match the shape of the rest (${r}) along the non-concatenated axis ${i}.`)})}function Nr(n,e){const t=n[0].slice();for(let r=1;r<n.length;r++)t[e]+=n[r][e];return t}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var en;(function(n){n[n.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",n[n.VALUE_ROWIDS=1]="VALUE_ROWIDS",n[n.ROW_LENGTHS=2]="ROW_LENGTHS",n[n.ROW_SPLITS=3]="ROW_SPLITS",n[n.ROW_LIMITS=4]="ROW_LIMITS",n[n.ROW_STARTS=5]="ROW_STARTS"})(en||(en={}));function Sx(n,e,t){let r=new Array;if(t==null&&e==null)return r;if(e==null)for(;r.length<n+t.length;)r.push(-1);else r=e.slice();if(t==null)return r;if(n+t.length!==r.length)throw new Error(`rt input.shape and shape=${e} are incompatible: rt input.rank = ${n+t.length}, but shape.rank = ${r.length}`);for(let s=1;s<t.length;++s){const i=t[s],o=r[r.length-t.length+s],a=r[o];if(i>=0)if(a>=0){if(a!==i)throw new Error(`rt input.shape and shape=${e} are incompatible: rt input.shape[${s+n}] = ${i} but shape[${s+n}] = ${a}`)}else r[o]=i}return r}function Tx(n){const e={FIRST_DIM_SIZE:en.FIRST_DIM_SIZE,VALUE_ROWIDS:en.VALUE_ROWIDS,ROW_LENGTHS:en.ROW_LENGTHS,ROW_SPLITS:en.ROW_SPLITS,ROW_LIMITS:en.ROW_LIMITS,ROW_STARTS:en.ROW_STARTS},t=[];for(const r of n)if(r in e)t.push(e[r]);else break;return t}function Cx(n){return n.length===0?0:n[0]===en.FIRST_DIM_SIZE?n.length-1:n.length}function Ex(n,e){if(n==null||e==null)return;const t=n.length,r=e.length;if(t>=r)throw new Error(`defaultValue.shape=${n} and ragged tensor flatValues.shape=${e}, are incompatible: defaultValue.rank = ${t} must be less than ragged tensor input flatValues.rank = ${r})`);for(let s=0;s<Math.min(t,r-1);++s){const i=n[s],o=e[s+1];if(i>=0&&o>=0&&i!==1&&i!==o)throw new Error(`defaultValue.shape=${n}, and ragged tensor input flatValues.shape=${e} are incompatible: defaultValue.shape[${s-n.length}] = ${i} but ragged tensor input.flatValues.shape[${s-n.length}] = ${o}`)}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Md=30;function Qo(n){return n<=Md?n:Ji(n,Math.floor(Math.sqrt(n)))}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nx(n,e,t){const r=t*(typeof n=="number"?n:n[0]),s=e*(typeof n=="number"?n:n[1]);return[r,s]}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vd(n,e,t,r=!0){let s=[];if(r)s=s.concat(e.slice(0)),s.push(n[0]/t),s=s.concat(n.slice(1));else{s=s.concat(n[0]);const i=e.length;for(let o=0;o<i;++o)s=s.concat([n[o+1]/e[o],e[o]]);s=s.concat(n.slice(i+1))}return s}function Ud(n,e,t=!0){const r=[];if(t){r.push(e);for(let s=e+1;s<n;++s)s<=2*e?(r.push(s),r.push(s-(e+1))):r.push(s)}else{const s=[],i=[];for(let o=1;o<n;++o)o>=e*2+1||o%2===1?i.push(o):s.push(o);r.push(...s),r.push(0),r.push(...i)}return r}function zd(n,e,t,r=!0){const s=[];r?s.push(n[0]/t):s.push(n[0]*t);for(let i=1;i<n.length;++i)i<=e.length?r?s.push(e[i-1]*n[i]):s.push(n[i]/e[i-1]):s.push(n[i]);return s}function Ix(n,e){const t=[0];for(let r=0;r<e;++r)t.push(n[r][0]);return t}function kx(n,e,t){const r=n.slice(0,1);for(let s=0;s<t;++s)r.push(n[s+1]-e[s][0]-e[s][1]);return r}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _x=1.7580993408473768,Rx=1.0507009873554805;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ax=.3275911,Ox=.254829592,Dx=-.284496736,Fx=1.421413741,Px=-1.453152027,Lx=1.061405429;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mu(n,e){if(n.length!==e.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${n.length}, imag: ${e.length}.`);const t=new Float32Array(n.length*2);for(let r=0;r<t.length;r+=2)t[r]=n[r/2],t[r+1]=e[r/2];return t}function RN(n){const e=new Float32Array(n.length/2),t=new Float32Array(n.length/2);for(let r=0;r<n.length;r+=2)e[r/2]=n[r],t[r/2]=n[r+1];return{real:e,imag:t}}function AN(n){const e=Math.ceil(n.length/4),t=new Float32Array(e),r=new Float32Array(e);for(let s=0;s<n.length;s+=4)t[Math.floor(s/4)]=n[s],r[Math.floor(s/4)]=n[s+1];return{real:t,imag:r}}function ON(n){const e=Math.floor(n.length/4),t=new Float32Array(e),r=new Float32Array(e);for(let s=2;s<n.length;s+=4)t[Math.floor(s/4)]=n[s],r[Math.floor(s/4)]=n[s+1];return{real:t,imag:r}}function DN(n,e){const t=n[e*2],r=n[e*2+1];return{real:t,imag:r}}function FN(n,e,t,r){n[r*2]=e,n[r*2+1]=t}function PN(n,e){const t=new Float32Array(n/2),r=new Float32Array(n/2);for(let s=0;s<Math.ceil(n/2);s++){const i=(e?2:-2)*Math.PI*(s/n);t[s]=Math.cos(i),r[s]=Math.sin(i)}return{real:t,imag:r}}function LN(n,e,t){const r=(t?2:-2)*Math.PI*(n/e),s=Math.cos(r),i=Math.sin(r);return{real:s,imag:i}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Da="->",BN=/->/g,ff=",",mf="...";function Bx(n,e){n=n.replace(/\s/g,"");const t=(n.length-n.replace(BN,"").length)/Da.length;if(t<1)throw new Error("Equations without an arrow are not supported.");if(t>1)throw new Error(`Equation must contain exactly one arrow ("${Da}").`);const[r,s]=n.split(Da);N(r.indexOf(mf)===-1,()=>`The ellipsis notation ("${mf}") is not supported yet.`);const i=r.split(ff),o=i.length;if(e!==o)throw new Error(`Expected ${o} input tensors, received ${e}`);if(o>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const a=[];for(let d=0;d<s.length;++d){const p=s[d];if(!i.some(m=>m.indexOf(p)!==-1))throw new Error(`Output subscripts contain the label ${p} not present in the input subscripts.`);a.indexOf(p)===-1&&a.push(p)}for(let d=0;d<r.length;++d){const p=r[d];a.indexOf(p)===-1&&p!==ff&&a.push(p)}const u=new Array(i.length);for(let d=0;d<o;++d){if(new Set(i[d].split("")).size!==i[d].length)throw new Error(`Found duplicate axes in input component ${i[d]}. Support for duplicate axes in input is not implemented yet.`);u[d]=[];for(let p=0;p<i[d].length;++p)u[d].push(a.indexOf(i[d][p]))}const l=a.length,c=s.length,h=[];for(let d=c;d<l;++d)h.push(d);return{allDims:a,summedDims:h,idDims:u}}function Mx(n,e){let t=new Array(n);t.fill(-1);for(let s=0;s<e.length;++s)t[e[s]]=s;const r=[];for(let s=0;s<n;++s)t[s]===-1&&r.push(s);return t=t.filter(s=>s!==-1),{permutationIndices:t,expandDims:r}}function Vx(n,e,t){const r=new Array(n);for(let s=0;s<t.length;++s){const i=t[s].shape;for(let o=0;o<e[s].length;++o)r[e[s][o]]===void 0?r[e[s][o]]=i[o]:N(r[e[s][o]]===i[o],()=>`Expected dimension ${r[e[s][o]]} at axis ${o} of input shaped ${JSON.stringify(i)}, but got dimension ${i[o]}`)}}function Ux(n,e){const t=n,r=[];let s=0;n.length===0&&t.push(-1),s=n.length+1;for(let o=0;o<s;++o)r.push([]);const i=[];for(let o=0;o<t.length;++o){const a=t[o],u=MN(e,a);for(const l of u)i.indexOf(l)===-1&&(r[o].push(l),i.push(l))}return{path:t,steps:r}}function zx(n){return n.every((e,t)=>e===t)}function MN(n,e){const t=[];for(let r=0;r<n.length;++r)(n[r].length===0||n[r].indexOf(e)!==-1||e===-1)&&t.push(r);return t}function Wx(n,e,t=0){let r=[];if(typeof e=="number")N(n.shape[t]%e===0,()=>"Number of splits must evenly divide the axis."),r=new Array(e).fill(n.shape[t]/e);else{const s=e.reduce((o,a)=>(a===-1&&(o+=1),o),0);N(s<=1,()=>"There should be only one negative value in split array.");const i=e.indexOf(-1);if(i!==-1){const o=e.reduce((a,u)=>u>0?a+u:a);e[i]=n.shape[t]-o}N(n.shape[t]===e.reduce((o,a)=>o+a),()=>"The sum of sizes must match the size of the axis dimension."),r=e}return r}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gx(n){return`Received SparseTensor with denseShape[0] = 0 but
  indices.shape[0] = ${n}`}function Hx(n,e){return`indices(${n}, 0) is invalid: ${e} < 0`}function jx(n,e,t){return`indices(${n}, 0) is invalid: ${e} >= ${t}`}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qx(n,e){return`only one output dimension may be -1, not both ${n} and ${e}`}function Kx(n,e){return`size ${n} must be non-negative, not ${e}`}function Xx(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function Yx(n,e){const t=q(n),r=q(e);return`Input to reshape is a SparseTensor with ${t}
  dense values, but the requested shape requires a multiple of ${r}. inputShape=${n} outputShape= ${e}`}function Qx(n,e){const t=q(n),r=q(e);return`Input to reshape is a tensor with ${t} dense values, but the requested shape has ${r}. inputShape=${n} outputShape=${e}`}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gu(){return"segment ids must be >= 0"}function Zx(){return"segment ids are not increasing"}function Jx(n,e){return`Segment id ${n} out of range [0, ${e}), possibly because segmentIds input is not sorted.`}function e1(n,e,t){return`Bad: indices[${n}] == ${e} out of range [0, ${t})`}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function t1(n,e){let t=!1,r;for(n<=Md?(r=n,t=!0):r=Ji(n,Math.floor(Math.sqrt(n)));!t;)r>e||r===n?t=!0:r=Ji(n,r+1);return r}function n1(n,e,t){const r=[],s=n.length;for(let i=0;i<s;i++)i!==e?r.push(n[i]):r.push(t);return r}function r1(n,e,t,r){const s=e.shape.length,i=n.shape.length;if(r!==0&&(r<-s||r>s))throw new Error(`Expect batchDims in the range of [-${s}, ${s}], but got ${r}`);if(r<0&&(r+=s),r>i)throw new Error(`batchDims (${r}) must be less than rank(x) (
    ${i}).`);if(t<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${t}).`);for(let h=0;h<r;++h)if(n.shape[h]!==e.shape[h])throw new Error(`x.shape[${h}]: ${n.shape[h]} should be equal to indices.shape[${h}]: ${e.shape[h]}.`);const o=n.shape[t],a=[];let u=1,l=1,c=1;for(let h=0;h<r;++h)a.push(n.shape[h]),u*=n.shape[h];for(let h=r;h<t;h++)a.push(n.shape[h]),l*=n.shape[h];for(let h=r;h<s;h++)a.push(e.shape[h]);for(let h=t+1;h<i;h++)a.push(n.shape[h]),c*=n.shape[h];return{batchSize:u,sliceSize:c,outerSize:l,dimSize:o,outputShape:a}}const VN=Object.freeze(Object.defineProperty({__proto__:null,segOpComputeOptimalWindowSize:t1,computeOutShape:n1,collectGatherOpShapeInfo:r1},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qs(n){try{return n.map(e=>vr(e))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function s1(n){return n.map(e=>_n(e))}const i1=Object.freeze(Object.defineProperty({__proto__:null,slice_util:Zg,segment_util:VN,fromUint8ToStringArray:qs,fromStringArrayToUint8:s1,upcastType:sn,axesAreInnerMostDims:rd,combineLocations:Wy,computeOutAndReduceShapes:$n,expandShapeToKeepDim:_t,assertAxesAreInnerMostDims:un,getAxesPermutation:qt,getUndoAxesPermutation:sd,getInnerMostAxes:Kt,getBroadcastDims:zs,getReductionAxes:Uh,assertAndGetBroadcastShape:fe,assertParamsConsistent:$x,computeOutShape:Nr,computeDilation2DInfo:py,computePool2DInfo:Ar,computePool3DInfo:si,computeConv2DInfo:kt,computeConv3DInfo:ii,computeDefaultPad:Zh,tupleValuesAreOne:Ws,eitherStridesOrDilationsAreOne:Et,convertConv2DDataFormat:is,checkPadOnDimRoundingMode:jt,getFusedDyActivation:Uo,getFusedBiasGradient:zo,applyActivation:Wo,shouldFuse:Go,get RowPartitionType(){return en},combineRaggedTensorToTensorShapes:Sx,getRowPartitionTypesHelper:Tx,getRaggedRank:Cx,validateDefaultValueShape:Ex,PARALLELIZE_THRESHOLD:Md,computeOptimalWindowSize:Qo,getImageCenter:Nx,getReshaped:Vd,getPermuted:Ud,getReshapedPermuted:zd,getSliceBeginCoords:Ix,getSliceSize:kx,prepareAndValidate:Wh,validateUpdateShape:Gh,validateInput:Hh,calculateShapes:Oo,SELU_SCALEALPHA:_x,SELU_SCALE:Rx,ERF_P:Ax,ERF_A1:Ox,ERF_A2:Dx,ERF_A3:Fx,ERF_A4:Px,ERF_A5:Lx,warn:Lt,log:Lw,mergeRealAndImagArrays:mu,splitRealAndImagArrays:RN,complexWithEvenIndex:AN,complexWithOddIndex:ON,getComplexWithIndex:DN,assignToTypedArray:FN,exponents:PN,exponent:LN,decodeEinsumEquation:Bx,getEinsumPermutation:Mx,checkEinsumDimSizes:Vx,getEinsumComputePath:Ux,isIdentityPermutation:zx,prepareSplitSize:Wx,getSparseFillEmptyRowsIndicesDenseShapeMismatch:Gx,getSparseFillEmptyRowsNegativeIndexErrorMessage:Hx,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:jx,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:qx,getSparseReshapeNegativeOutputDimErrorMessage:Kx,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:Xx,getSparseReshapeInputOutputMultipleErrorMessage:Yx,getSparseReshapeInputOutputMismatchErrorMessage:Qx,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:gu,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:Zx,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:Jx,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:e1},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UN=Object.freeze(Object.defineProperty({__proto__:null,nonMaxSuppressionV3Impl:Fd,nonMaxSuppressionV4Impl:Pd,nonMaxSuppressionV5Impl:Ld,whereImpl:Ad},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const o1=Object.freeze(Object.defineProperty({__proto__:null,AdadeltaOptimizer:Ho,AdagradOptimizer:jo,AdamOptimizer:qo,AdamaxOptimizer:Ko,MomentumOptimizer:Xo,Optimizer:er,OptimizerConstructors:Mn,RMSPropOptimizer:Yo,SGDOptimizer:hi,Tensor:be,TensorBuffer:Yr,Variable:Bs,get Rank(){return tu},sumOutType:_o,upcastType:sn,get Reduction(){return it},customGrad:wn,grad:KS,grads:XS,valueAndGrad:YS,valueAndGrads:QS,variableGrads:Jy,Environment:Ym,env:B,get ENV(){return Mu},nextFrame:vx,KernelBackend:Lu,DataStorage:Mm,abs:bt,acos:ny,acosh:ry,add:se,addN:sy,all:iy,any:oy,argMax:Qh,argMin:ay,asin:uy,asinh:ly,atan:cy,atan2:hy,atanh:dy,avgPool:Jh,avgPool3d:fy,basicLSTMCell:my,batchToSpaceND:ed,batchNorm:oi,batchNorm2d:gy,batchNorm3d:yy,batchNorm4d:xy,bincount:td,broadcastArgs:by,broadcastTo:jr,buffer:De,cast:xe,ceil:wy,clipByValue:vy,clone:Rn,complex:Dn,concat:Ze,concat1d:$y,concat2d:Sy,concat3d:Ty,concat4d:Cy,conv1d:Ey,conv2d:ai,conv2dTranspose:Iy,conv3d:ky,conv3dTranspose:_y,cos:Ry,cosh:Ay,cumprod:Oy,cumsum:Dy,denseBincount:Fy,depthToSpace:Py,depthwiseConv2d:Do,diag:Ly,dilation2d:By,div:Se,divNoNan:My,dot:Vy,einsum:Uy,elu:nd,equal:ui,erf:zy,euclideanNorm:Hy,exp:qn,expandDims:wt,expm1:jy,eye:id,fill:os,floor:od,floorDiv:Yh,gather:ad,greater:as,greaterEqual:ud,imag:ri,isFinite:qy,isInf:Ky,isNaN:Xy,leakyRelu:ld,less:Yy,lessEqual:Fo,linspace:Qy,localResponseNormalization:Zy,log:es,log1p:cd,logSigmoid:e0,logSoftmax:t0,logSumExp:dd,logicalAnd:Gs,logicalNot:pd,logicalOr:fd,logicalXor:n0,lowerBound:r0,matMul:ge,max:yr,maxPool:md,maxPool3d:s0,maxPoolWithArgmax:i0,maximum:gd,mean:Hs,meshgrid:o0,min:ho,minimum:yd,mirrorPad:xd,mod:a0,moments:u0,mul:Y,multiRNNCell:l0,multinomial:c0,neg:mn,notEqual:bd,oneHot:Vs,ones:Wn,onesLike:h0,outerProduct:d0,pad:Or,pad1d:p0,pad2d:f0,pad3d:wd,pad4d:m0,pool:g0,pow:Jr,prelu:$d,print:Lh,prod:y0,raggedGather:x0,raggedRange:b0,raggedTensorToTensor:w0,rand:v0,randomGamma:k0,randomNormal:Cd,randomStandardNormal:_0,randomUniform:Ed,range:Xn,real:Zr,reciprocal:R0,relu:ci,relu6:Nd,reshape:W,reverse:Yn,reverse1d:A0,reverse2d:O0,reverse3d:D0,reverse4d:F0,round:Id,rsqrt:P0,scalar:ue,selu:L0,separableConv2d:B0,setdiff1dAsync:M0,sigmoid:gn,sign:V0,sin:U0,sinh:z0,slice:$e,slice1d:W0,slice2d:G0,slice3d:H0,slice4d:j0,softmax:q0,softplus:hd,spaceToBatchND:vd,fft:Bo,ifft:js,irfft:kd,rfft:Mo,split:ts,sqrt:bn,square:Ht,squaredDifference:_d,squeeze:Ut,stack:vn,step:Rd,stridedSlice:K0,sub:ce,sum:Ce,tan:X0,tanh:co,tensor:Gt,tensor1d:zt,tensor2d:xr,tensor3d:zh,tensor4d:Y0,tensor5d:Q0,tensor6d:Z0,tile:qr,topk:J0,truncatedNormal:ex,unique:tx,unsortedSegmentSum:nx,unstack:Jn,upperBound:rx,variable:sx,where:Cr,whereAsync:Od,zeros:Kn,zerosLike:$t,op:O,OP_SCOPE_SUFFIX:Oh,booleanMaskAsync:ix,transpose:Us,norm:li,movingAverage:ox,scatterND:ax,searchSorted:Lo,sparseToDense:ux,gatherND:lx,dropout:cx,enclosingPowerOfTwo:Dd,cosineWindow:Vo,inTopKAsync:hx,image:Er,linalg:yx,losses:xx,spectral:mx,fused:dx,signal:gx,sparse:bx,string:wx,train:kN,enableProdMode:m2,enableDebugMode:g2,disableDeprecationWarnings:y2,deprecationWarn:x2,disposeVariables:b2,engine:Zt,memory:w2,profile:v2,tidy:ie,dispose:ut,keep:nn,time:$2,setBackend:S2,ready:T2,getBackend:Pg,removeBackend:C2,findBackend:E2,findBackendFactory:N2,registerBackend:Lg,backend:Bg,setPlatform:I2,getKernel:io,getGradient:Qa,getKernelsForBackend:oo,registerKernel:Nh,registerGradient:Bw,unregisterKernel:Mw,unregisterGradient:Vw,copyRegisteredKernels:Uw,Abs:Uu,Acos:zu,Acosh:Wu,Add:Eo,AddN:Gu,All:Hu,Any:ju,ArgMax:qu,ArgMin:Ku,Asin:Xu,Asinh:Yu,Atan:Qu,Atanh:Zu,Atan2:Ju,AvgPool:el,AvgPoolGrad:Zm,AvgPool3D:tl,AvgPool3DGrad:Jm,BatchMatMul:nl,BatchToSpaceND:rl,Bincount:sl,BroadcastTo:kw,BroadcastArgs:il,Cast:No,Ceil:ol,ClipByValue:al,Complex:ul,ComplexAbs:ll,Concat:cl,Conv2D:hl,Conv2DBackpropFilter:dl,Conv2DBackpropInput:pl,Conv3D:fl,Conv3DBackpropFilterV2:eg,Conv3DBackpropInputV2:ml,Cos:gl,Cosh:yl,Cumprod:xl,Cumsum:bl,CropAndResize:wl,DenseBincount:vl,DepthToSpace:$l,DepthwiseConv2dNative:Sl,DepthwiseConv2dNativeBackpropFilter:Tl,DepthwiseConv2dNativeBackpropInput:Cl,Diag:El,Dilation2D:Nl,Dilation2DBackpropInput:_w,Dilation2DBackpropFilter:Rw,RealDiv:Il,Einsum:kl,Elu:_l,EluGrad:tg,Erf:Rl,Equal:Al,Exp:Ol,ExpandDims:Dl,Expm1:Fl,FFT:Pl,Fill:Ll,FlipLeftRight:Bl,Floor:Ml,FloorDiv:Vl,FusedBatchNorm:Ul,GatherV2:zl,GatherNd:Wl,Greater:Gl,GreaterEqual:Hl,Identity:Io,IFFT:jl,Imag:ql,IsFinite:Kl,IsInf:Xl,IsNan:Yl,LeakyRelu:Ql,Less:Zl,LessEqual:Jl,LinSpace:ec,Log:tc,Log1p:nc,LogicalAnd:rc,LogicalNot:sc,LogicalOr:ic,LogicalXor:Aw,LogSoftmax:Ow,LowerBound:Dw,LRN:oc,LRNGrad:ng,Max:ac,Maximum:uc,MaxPool:lc,MaxPoolGrad:rg,MaxPool3D:cc,MaxPool3DGrad:sg,MaxPoolWithArgmax:hc,Mean:dc,Min:pc,Minimum:fc,MirrorPad:mc,Mod:gc,Multinomial:yc,Multiply:xc,Neg:bc,NotEqual:wc,NonMaxSuppressionV3:vc,NonMaxSuppressionV4:$c,NonMaxSuppressionV5:Sc,OnesLike:Tc,OneHot:Cc,Pack:Ec,PadV2:Nc,Pool:Fw,Pow:Ic,Prelu:kc,Prod:_c,RaggedGather:Rc,RaggedRange:Ac,RaggedTensorToTensor:Oc,Range:Dc,Real:Fc,Reciprocal:Pc,Relu:Lc,Reshape:Bc,ResizeNearestNeighbor:Mc,ResizeNearestNeighborGrad:ig,ResizeBilinear:Vc,ResizeBilinearGrad:og,Relu6:Uc,Reverse:zc,Round:Wc,Rsqrt:Gc,ScatterNd:Hc,SearchSorted:jc,Select:qc,Selu:Kc,Slice:Xc,Sin:Yc,Sinh:Qc,Sign:Zc,Sigmoid:Jc,Softplus:eh,Sqrt:th,Sum:nh,SpaceToBatchND:rh,SplitV:sh,Softmax:ih,SparseFillEmptyRows:oh,SparseReshape:ah,SparseSegmentMean:uh,SparseSegmentSum:lh,SparseToDense:ch,SquaredDifference:hh,Square:ag,StridedSlice:dh,StringNGrams:ph,StringSplit:fh,StringToHashBucketFast:mh,Sub:gh,Tan:yh,Tanh:xh,Tile:ko,TopK:bh,Transform:wh,Transpose:Fs,Unique:vh,Unpack:$h,UnsortedSegmentSum:Sh,UpperBound:Pw,ZerosLike:Th,Step:Ch,FromPixels:to,RotateWithOffset:Eh,_FusedMatMul:no,FusedConv2D:ro,FusedDepthwiseConv2D:so,version_core:o$,browser:z2,io:Vh,math:F2,serialization:X2,test_util:i$,util:Qw,backend_util:i1,broadcast_util:P2,tensor_util:hv,slice_util:Zg,gather_util:W2,scatter_util:G2,device_util:gv,kernel_impls:UN},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zN=B();zN.registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,n=>{n&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */var Dt;(function(n){n[n.DT_INVALID=0]="DT_INVALID",n[n.DT_FLOAT=1]="DT_FLOAT",n[n.DT_DOUBLE=2]="DT_DOUBLE",n[n.DT_INT32=3]="DT_INT32",n[n.DT_UINT8=4]="DT_UINT8",n[n.DT_INT16=5]="DT_INT16",n[n.DT_INT8=6]="DT_INT8",n[n.DT_STRING=7]="DT_STRING",n[n.DT_COMPLEX64=8]="DT_COMPLEX64",n[n.DT_INT64=9]="DT_INT64",n[n.DT_BOOL=10]="DT_BOOL",n[n.DT_QINT8=11]="DT_QINT8",n[n.DT_QUINT8=12]="DT_QUINT8",n[n.DT_QINT32=13]="DT_QINT32",n[n.DT_BFLOAT16=14]="DT_BFLOAT16",n[n.DT_QINT16=15]="DT_QINT16",n[n.DT_QUINT16=16]="DT_QUINT16",n[n.DT_UINT16=17]="DT_UINT16",n[n.DT_COMPLEX128=18]="DT_COMPLEX128",n[n.DT_HALF=19]="DT_HALF",n[n.DT_RESOURCE=20]="DT_RESOURCE",n[n.DT_VARIANT=21]="DT_VARIANT",n[n.DT_UINT32=22]="DT_UINT32",n[n.DT_UINT64=23]="DT_UINT64",n[n.DT_FLOAT_REF=101]="DT_FLOAT_REF",n[n.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",n[n.DT_INT32_REF=103]="DT_INT32_REF",n[n.DT_UINT8_REF=104]="DT_UINT8_REF",n[n.DT_INT16_REF=105]="DT_INT16_REF",n[n.DT_INT8_REF=106]="DT_INT8_REF",n[n.DT_STRING_REF=107]="DT_STRING_REF",n[n.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",n[n.DT_INT64_REF=109]="DT_INT64_REF",n[n.DT_BOOL_REF=110]="DT_BOOL_REF",n[n.DT_QINT8_REF=111]="DT_QINT8_REF",n[n.DT_QUINT8_REF=112]="DT_QUINT8_REF",n[n.DT_QINT32_REF=113]="DT_QINT32_REF",n[n.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",n[n.DT_QINT16_REF=115]="DT_QINT16_REF",n[n.DT_QUINT16_REF=116]="DT_QUINT16_REF",n[n.DT_UINT16_REF=117]="DT_UINT16_REF",n[n.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",n[n.DT_HALF_REF=119]="DT_HALF_REF",n[n.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",n[n.DT_VARIANT_REF=121]="DT_VARIANT_REF",n[n.DT_UINT32_REF=122]="DT_UINT32_REF",n[n.DT_UINT64_REF=123]="DT_UINT64_REF"})(Dt||(Dt={}));var gf;(function(n){(function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"})(n.CheckpointFormatVersion||(n.CheckpointFormatVersion={}))})(gf||(gf={}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WN={};function a1(n){return WN[n]}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function w(n,e,t,r,s){const i=e.inputParams[n];if(i&&i.inputIndexStart!==void 0){const a=i.inputIndexStart,u=i.inputIndexEnd===0?void 0:i.inputIndexEnd===void 0?a+1:i.inputIndexEnd;if(i.type==="tensor")return ot(e.inputNames[i.inputIndexStart],t,r,s);if(i.type==="tensors")return e.inputNames.slice(a,u).map(d=>ot(d,t,r,s));const l=ot(e.inputNames.slice(a)[0],t,r,s),c=l.dataSync();return i.type==="number"?c[0]:mr(l.shape,c)}const o=e.attrParams[n];return o&&o.value}function ot(n,e,t,r){const[s,i]=xt(n);if(r!=null){const a=r.getHashTableHandleByName(s);if(a!=null)return a}const o=t.currentContextIds.find(a=>!!e[po(s,a)]);return o!==void 0?e[po(s,o)][i]:void 0}function GN(n,e,t){return e[po(n,t.currentContextId)]}function Cn(n,e){const[t,r,s]=xt(n);return[po(t,e&&e.currentContextId),r,s]}function po(n,e){return e?`${n}-${e}`:n}function xt(n){const e=n.split(":");if(e.length===1)return[n,0,void 0];const t=e[0],r=e.length===3?e[1]:void 0,s=Number(e[e.length-1]);return[t,s,r]}function Xi(n,e,t){let r=w("pad",n,e,t);if(r==="explicit"){r=w("explicitPaddings",n,e,t);const s=[[0,0],[0,0],[0,0],[0,0]];for(let i=0;i<4;i++)s[i][0]=r[i*2],s[i][1]=r[i*2+1];return s}return r}function En(n){return n.kept?n:Rn(n)}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HN=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],jN=Object.freeze(Object.defineProperty({__proto__:null,json:HN},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qN=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],KN=Object.freeze(Object.defineProperty({__proto__:null,json:qN},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const XN=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}],YN=Object.freeze(Object.defineProperty({__proto__:null,json:XN},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QN=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],ZN=Object.freeze(Object.defineProperty({__proto__:null,json:QN},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JN=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomStandardNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],eI=Object.freeze(Object.defineProperty({__proto__:null,json:JN},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tI=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],nI=Object.freeze(Object.defineProperty({__proto__:null,json:tI},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rI=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],sI=Object.freeze(Object.defineProperty({__proto__:null,json:rI},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iI=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],oI=Object.freeze(Object.defineProperty({__proto__:null,json:iI},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aI=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"InitializeTable",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]},{tfOpName:"InitializeTableV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],uI=Object.freeze(Object.defineProperty({__proto__:null,json:aI},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lI=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}],cI=Object.freeze(Object.defineProperty({__proto__:null,json:lI},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hI=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],dI=Object.freeze(Object.defineProperty({__proto__:null,json:hI},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pI=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]}],fI=Object.freeze(Object.defineProperty({__proto__:null,json:pI},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mI=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}],gI=Object.freeze(Object.defineProperty({__proto__:null,json:mI},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yI=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],xI=Object.freeze(Object.defineProperty({__proto__:null,json:yI},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bI=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}],wI=Object.freeze(Object.defineProperty({__proto__:null,json:bI},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vI=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],$I=Object.freeze(Object.defineProperty({__proto__:null,json:vI},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SI=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],TI=Object.freeze(Object.defineProperty({__proto__:null,json:SI},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CI=[{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],EI=Object.freeze(Object.defineProperty({__proto__:null,json:CI},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NI=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}],II=Object.freeze(Object.defineProperty({__proto__:null,json:NI},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class yf{constructor(){const e=[jN,KN,YN,ZN,eI,nI,sI,oI,uI,cI,dI,fI,gI,xI,wI,$I,TI,EI,II],t=[].concat(...e.map(r=>r.json));this.opMappers=t.reduce((r,s)=>(r[s.tfOpName]=s,r),{})}static get Instance(){return this._instance||(this._instance=new this)}transformGraph(e,t={}){const r=e.node,s=[],i=[],o=[],a=r.reduce((y,g)=>(y[g.name]=this.mapNode(g),g.op.startsWith("Placeholder")?s.push(y[g.name]):g.op==="Const"?i.push(y[g.name]):(g.input==null||g.input.length===0)&&o.push(y[g.name]),y),{});let u=[];const l=[];let c={},h={};t!=null&&(c=this.mapSignatureEntries(t.inputs),h=this.mapSignatureEntries(t.outputs));const d=Object.keys(a);d.forEach(y=>{const g=a[y];g.inputNames.forEach((x,$)=>{const[C,,S]=Cn(x),I=a[C];if(I.outputs!=null){const A=I.outputs.indexOf(S);if(A!==-1){const L=`${C}:${A}`;g.inputNames[$]=L}}g.inputs.push(I),I.children.push(g)})}),Object.keys(h).length===0?d.forEach(y=>{const g=a[y];g.children.length===0&&l.push(g)}):Object.keys(h).forEach(y=>{const[g]=Cn(y),x=a[g];x!=null&&(x.signatureKey=h[y],l.push(x))}),Object.keys(c).length>0?Object.keys(c).forEach(y=>{const[g]=Cn(y),x=a[g];x&&(x.signatureKey=c[y],u.push(x))}):u=s;let p={};e.library!=null&&e.library.function!=null&&(p=e.library.function.reduce((y,g)=>(y[g.signature.name]=this.mapFunction(g),y),{}));const m={nodes:a,inputs:u,outputs:l,weights:i,placeholders:s,signature:t,functions:p};return o.length>0&&(m.initNodes=o),m}mapSignatureEntries(e){return Object.keys(e||{}).reduce((t,r)=>(t[e[r].name]=r,t),{})}mapNode(e){const t=a1(e.op)||this.opMappers[e.op]||{};e.attr==null&&(e.attr={});const r={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map(s=>s.startsWith("^")?s.slice(1):s),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return t.inputs!=null&&(r.inputParams=t.inputs.reduce((s,i)=>(s[i.name]={type:i.type,inputIndexStart:i.start,inputIndexEnd:i.end},s),{})),t.attrs!=null&&(r.attrParams=t.attrs.reduce((s,i)=>{const o=i.type;let a;switch(i.type){case"string":a=yu(e.attr,i.tfName,i.defaultValue),a===void 0&&!!i.tfDeprecatedName&&(a=yu(e.attr,i.tfDeprecatedName,i.defaultValue));break;case"string[]":a=Tu(e.attr,i.tfName,i.defaultValue),a===void 0&&!!i.tfDeprecatedName&&(a=Tu(e.attr,i.tfDeprecatedName,i.defaultValue));break;case"number":a=bu(e.attr,i.tfName,i.defaultValue||0),a===void 0&&!!i.tfDeprecatedName&&(a=bu(e.attr,i.tfDeprecatedName,i.defaultValue));break;case"number[]":a=Su(e.attr,i.tfName,i.defaultValue),a===void 0&&!!i.tfDeprecatedName&&(a=Su(e.attr,i.tfDeprecatedName,i.defaultValue));break;case"bool":a=xu(e.attr,i.tfName,i.defaultValue),a===void 0&&!!i.tfDeprecatedName&&(a=xu(e.attr,i.tfDeprecatedName,i.defaultValue));break;case"bool[]":a=Eu(e.attr,i.tfName,i.defaultValue),a===void 0&&!!i.tfDeprecatedName&&(a=Eu(e.attr,i.tfDeprecatedName,i.defaultValue));break;case"shape":a=$u(e.attr,i.tfName,i.defaultValue),a===void 0&&!!i.tfDeprecatedName&&(a=$u(e.attr,i.tfDeprecatedName,i.defaultValue));break;case"shape[]":a=Cu(e.attr,i.tfName,i.defaultValue),a===void 0&&!!i.tfDeprecatedName&&(a=Cu(e.attr,i.tfDeprecatedName,i.defaultValue));break;case"dtype":a=wu(e.attr,i.tfName,i.defaultValue),a===void 0&&!!i.tfDeprecatedName&&(a=wu(e.attr,i.tfDeprecatedName,i.defaultValue));break;case"dtype[]":a=vu(e.attr,i.tfName,i.defaultValue),a===void 0&&!!i.tfDeprecatedName&&(a=vu(e.attr,i.tfDeprecatedName,i.defaultValue));break;case"func":a=xf(e.attr,i.tfName,i.defaultValue),a===void 0&&!!i.tfDeprecatedName&&(a=xf(e.attr,i.tfDeprecatedName,i.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${i.type} for op: ${e.op}`)}return s[i.name]={value:a,type:o},s},{})),r}mapFunction(e){const t=e.nodeDef,r=[],s=[];let i={};t!=null&&(i=t.reduce((h,d)=>(h[d.name]=this.mapNode(d),d.op==="Const"&&s.push(h[d.name]),h),{}));const o=[],a=[];e.signature.inputArg.forEach(h=>{const[d]=Cn(h.name),p={name:d,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:Wd(h.type),type:"dtype"}},children:[]};p.signatureKey=h.name,o.push(p),i[d]=p}),Object.keys(i).forEach(h=>{const d=i[h];d.inputNames.forEach((p,m)=>{const[y,,g]=Cn(p),x=i[y];if(x.outputs!=null){const $=x.outputs.indexOf(g);if($!==-1){const C=`${y}:${$}`;d.inputNames[m]=C}}d.inputs.push(x),x.children.push(d)})});const l=e.ret;e.signature.outputArg.forEach(h=>{const[d,p]=Cn(l[h.name]),m=i[d];m!=null&&(m.defaultOutput=p,a.push(m))});const c=this.mapArgsToSignature(e);return{nodes:i,inputs:o,outputs:a,weights:s,placeholders:r,signature:c}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce((t,r)=>(t[r.name]=this.mapArgToTensorInfo(r),t),{}),outputs:e.signature.outputArg.reduce((t,r)=>(t[r.name]=this.mapArgToTensorInfo(r,e.ret),t),{})}}mapArgToTensorInfo(e,t){let r=e.name;return t!=null&&(r=t[r]),{name:r,dtype:e.type}}}function kI(n){const e=B().global;if(typeof e.atob<"u")return e.atob(n);if(typeof Buffer<"u")return new Buffer(n,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}function u1(n,e){const t=Array.isArray(n)?String.fromCharCode.apply(null,n):kI(n);return e?t:t.toLowerCase()}function yu(n,e,t,r=!1){const s=n[e];return s!=null?u1(s.s,r):t}function xu(n,e,t){const r=n[e];return r?r.b:t}function bu(n,e,t){const r=n[e]||{},s=r.i!=null?r.i:r.f!=null?r.f:t;return typeof s=="number"?s:parseInt(s,10)}function Wd(n){switch(typeof n=="string"&&(n=Dt[n]),n){case Dt.DT_FLOAT:case Dt.DT_HALF:return"float32";case Dt.DT_INT32:case Dt.DT_INT64:case Dt.DT_INT8:case Dt.DT_UINT8:return"int32";case Dt.DT_BOOL:return"bool";case Dt.DT_DOUBLE:return"float32";case Dt.DT_STRING:return"string";default:return null}}function xf(n,e,t){const r=n[e];return r&&r.func?r.func.name:t}function wu(n,e,t){const r=n[e];return r&&r.type?Wd(r.type):t}function vu(n,e,t){const r=n[e];return r&&r.list&&r.list.type?r.list.type.map(s=>Wd(s)):t}function l1(n){if(!n.unknownRank)return n.dim!=null?n.dim.map(e=>typeof e.size=="number"?e.size:parseInt(e.size,10)):[]}function $u(n,e,t){const r=n[e];return r&&r.shape?l1(r.shape):t}function Su(n,e,t){const r=n[e];return r?((r.list.f&&r.list.f.length?r.list.f:r.list.i)||[]).map(s=>typeof s=="number"?s:parseInt(s,10)):t}function Tu(n,e,t,r=!1){const s=n[e];return s&&s.list&&s.list.s?s.list.s.map(i=>u1(i,r)):t}function Cu(n,e,t){const r=n[e];return r&&r.list&&r.list.shape?r.list.shape.map(s=>l1(s)):t}function Eu(n,e,t){const r=n[e];return r&&r.list&&r.list.b?r.list.b:t}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class _I{constructor(e,t,r){this.node=e,this.tensorMap=t,this.context=r,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map(s=>this.getInput(s)),e.rawAttrs!=null&&(this.attrs=Object.keys(e.rawAttrs).reduce((s,i)=>(s[i]=this.getAttr(i),s),{}))}getInput(e){return ot(e,this.tensorMap,this.context)}getAttr(e,t){const r=this.node.rawAttrs[e];if(r.tensor!=null)return ot(e,this.tensorMap,this.context);if(r.i!=null||r.f!=null)return bu(this.node.rawAttrs,e,t);if(r.s!=null)return yu(this.node.rawAttrs,e,t);if(r.b!=null)return xu(this.node.rawAttrs,e,t);if(r.shape!=null)return $u(this.node.rawAttrs,e,t);if(r.type!=null)return wu(this.node.rawAttrs,e,t);if(r.list!=null){if(r.list.i!=null||r.list.f!=null)return Su(this.node.rawAttrs,e,t);if(r.list.s!=null)return Tu(this.node.rawAttrs,e,t);if(r.list.shape!=null)return Cu(this.node.rawAttrs,e,t);if(r.list.b!=null)return Eu(this.node.rawAttrs,e,t);if(r.list.type!=null)return vu(this.node.rawAttrs,e,t)}return t}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const je=Object.freeze(Object.defineProperty({__proto__:null,abs:bt,acos:ny,acosh:ry,add:se,addN:sy,all:iy,any:oy,argMax:Qh,argMin:ay,asin:uy,asinh:ly,atan:cy,atan2:hy,atanh:dy,avgPool:Jh,avgPool3d:fy,basicLSTMCell:my,batchToSpaceND:ed,batchNorm:oi,batchNorm2d:gy,batchNorm3d:yy,batchNorm4d:xy,bincount:td,broadcastArgs:by,broadcastTo:jr,buffer:De,cast:xe,ceil:wy,clipByValue:vy,clone:Rn,complex:Dn,concat:Ze,concat1d:$y,concat2d:Sy,concat3d:Ty,concat4d:Cy,conv1d:Ey,conv2d:ai,conv2dTranspose:Iy,conv3d:ky,conv3dTranspose:_y,cos:Ry,cosh:Ay,cumprod:Oy,cumsum:Dy,denseBincount:Fy,depthToSpace:Py,depthwiseConv2d:Do,diag:Ly,dilation2d:By,div:Se,divNoNan:My,dot:Vy,einsum:Uy,elu:nd,equal:ui,erf:zy,euclideanNorm:Hy,exp:qn,expandDims:wt,expm1:jy,eye:id,fill:os,floor:od,floorDiv:Yh,gather:ad,greater:as,greaterEqual:ud,imag:ri,isFinite:qy,isInf:Ky,isNaN:Xy,leakyRelu:ld,less:Yy,lessEqual:Fo,linspace:Qy,localResponseNormalization:Zy,log:es,log1p:cd,logSigmoid:e0,logSoftmax:t0,logSumExp:dd,logicalAnd:Gs,logicalNot:pd,logicalOr:fd,logicalXor:n0,lowerBound:r0,matMul:ge,max:yr,maxPool:md,maxPool3d:s0,maxPoolWithArgmax:i0,maximum:gd,mean:Hs,meshgrid:o0,min:ho,minimum:yd,mirrorPad:xd,mod:a0,moments:u0,mul:Y,multiRNNCell:l0,multinomial:c0,neg:mn,notEqual:bd,oneHot:Vs,ones:Wn,onesLike:h0,outerProduct:d0,pad:Or,pad1d:p0,pad2d:f0,pad3d:wd,pad4d:m0,pool:g0,pow:Jr,prelu:$d,print:Lh,prod:y0,raggedGather:x0,raggedRange:b0,raggedTensorToTensor:w0,rand:v0,randomGamma:k0,randomNormal:Cd,randomStandardNormal:_0,randomUniform:Ed,range:Xn,real:Zr,reciprocal:R0,relu:ci,relu6:Nd,reshape:W,reverse:Yn,reverse1d:A0,reverse2d:O0,reverse3d:D0,reverse4d:F0,round:Id,rsqrt:P0,scalar:ue,selu:L0,separableConv2d:B0,setdiff1dAsync:M0,sigmoid:gn,sign:V0,sin:U0,sinh:z0,slice:$e,slice1d:W0,slice2d:G0,slice3d:H0,slice4d:j0,softmax:q0,softplus:hd,spaceToBatchND:vd,fft:Bo,ifft:js,irfft:kd,rfft:Mo,split:ts,sqrt:bn,square:Ht,squaredDifference:_d,squeeze:Ut,stack:vn,step:Rd,stridedSlice:K0,sub:ce,sum:Ce,tan:X0,tanh:co,tensor:Gt,tensor1d:zt,tensor2d:xr,tensor3d:zh,tensor4d:Y0,tensor5d:Q0,tensor6d:Z0,tile:qr,topk:J0,truncatedNormal:ex,unique:tx,unsortedSegmentSum:nx,unstack:Jn,upperBound:rx,variable:sx,where:Cr,whereAsync:Od,zeros:Kn,zerosLike:$t,op:O,OP_SCOPE_SUFFIX:Oh,booleanMaskAsync:ix,transpose:Us,norm:li,movingAverage:ox,scatterND:ax,searchSorted:Lo,sparseToDense:ux,gatherND:lx,dropout:cx,enclosingPowerOfTwo:Dd,cosineWindow:Vo,inTopKAsync:hx,image:Er,linalg:yx,losses:xx,spectral:mx,fused:dx,signal:gx,sparse:bx,string:wx},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RI=(n,e,t,r=je)=>{switch(n.op){case"BiasAdd":case"AddV2":case"Add":return[r.add(w("a",n,e,t),w("b",n,e,t))];case"AddN":return[r.addN(w("tensors",n,e,t))];case"FloorMod":case"Mod":return[r.mod(w("a",n,e,t),w("b",n,e,t))];case"Mul":return[r.mul(w("a",n,e,t),w("b",n,e,t))];case"RealDiv":case"Div":return[r.div(w("a",n,e,t),w("b",n,e,t))];case"DivNoNan":return[r.divNoNan(w("a",n,e,t),w("b",n,e,t))];case"FloorDiv":return[r.floorDiv(w("a",n,e,t),w("b",n,e,t))];case"Sub":return[r.sub(w("a",n,e,t),w("b",n,e,t))];case"Minimum":return[r.minimum(w("a",n,e,t),w("b",n,e,t))];case"Maximum":return[r.maximum(w("a",n,e,t),w("b",n,e,t))];case"Pow":return[r.pow(w("a",n,e,t),w("b",n,e,t))];case"SquaredDifference":return[r.squaredDifference(w("a",n,e,t),w("b",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AI=(n,e,t,r=je)=>{switch(n.op){case"Abs":case"ComplexAbs":return[r.abs(w("x",n,e,t))];case"Acos":return[r.acos(w("x",n,e,t))];case"Acosh":return[r.acosh(w("x",n,e,t))];case"Asin":return[r.asin(w("x",n,e,t))];case"Asinh":return[r.asinh(w("x",n,e,t))];case"Atan":return[r.atan(w("x",n,e,t))];case"Atan2":return[r.atan2(w("x",n,e,t),w("y",n,e,t))];case"Atanh":return[r.atanh(w("x",n,e,t))];case"Ceil":return[r.ceil(w("x",n,e,t))];case"Complex":return[r.complex(w("real",n,e,t),w("imag",n,e,t))];case"Cos":return[r.cos(w("x",n,e,t))];case"Cosh":return[r.cosh(w("x",n,e,t))];case"Elu":return[r.elu(w("x",n,e,t))];case"Erf":return[r.erf(w("x",n,e,t))];case"Exp":return[r.exp(w("x",n,e,t))];case"Expm1":return[r.expm1(w("x",n,e,t))];case"Floor":return[r.floor(w("x",n,e,t))];case"Log":return[r.log(w("x",n,e,t))];case"Log1p":return[r.log1p(w("x",n,e,t))];case"Imag":return[r.imag(w("x",n,e,t))];case"Neg":return[r.neg(w("x",n,e,t))];case"Reciprocal":return[r.reciprocal(w("x",n,e,t))];case"Real":return[r.real(w("x",n,e,t))];case"Relu":return[r.relu(w("x",n,e,t))];case"Round":return[r.round(w("x",n,e,t))];case"Selu":return[r.selu(w("x",n,e,t))];case"Sigmoid":return[r.sigmoid(w("x",n,e,t))];case"Sin":return[r.sin(w("x",n,e,t))];case"Sign":return[r.sign(w("x",n,e,t))];case"Sinh":return[r.sinh(w("x",n,e,t))];case"Softplus":return[r.softplus(w("x",n,e,t))];case"Sqrt":return[r.sqrt(w("x",n,e,t))];case"Square":return[r.square(w("x",n,e,t))];case"Tanh":return[r.tanh(w("x",n,e,t))];case"Tan":return[r.tan(w("x",n,e,t))];case"ClipByValue":return[r.clipByValue(w("x",n,e,t),w("clipValueMin",n,e,t),w("clipValueMax",n,e,t))];case"Relu6":return[r.relu6(w("x",n,e,t))];case"Rsqrt":return[r.rsqrt(ot(n.inputNames[0],e,t))];case"Prod":return[r.prod(w("x",n,e,t),w("axes",n,e,t))];case"LeakyRelu":return[r.leakyRelu(w("x",n,e,t),w("alpha",n,e,t))];case"Prelu":return[r.prelu(w("x",n,e,t),w("alpha",n,e,t))];case"IsNan":return[r.isNaN(ot(n.inputNames[0],e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ft(n,e,t=""){if(!(typeof n=="number"||typeof e=="number")){N(n.length===e.length,()=>t+` Shapes ${n} and ${e} must match`);for(let r=0;r<n.length;r++){const s=n[r],i=e[r];N(s<0||i<0||s===i,()=>t+` Shapes ${n} and ${e} must match`)}}}function bf(n){return!(typeof n=="number"||n.some(e=>e<0))}function Ns(n,e,t){let r=Nu(n,t);const s=!bf(r);if(s&&e.length===0)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${r}`);if(s&&e.forEach(i=>{r=Nu(i.shape,r)}),!bf(r))throw new Error(`Non-fully-defined elementShape: ${r}`);return r}function Nu(n,e){if(typeof n=="number")return e;if(typeof e=="number")return n;if(n.length!==e.length)throw new Error(`Incompatible ranks during merge: ${n} vs. ${e}`);const t=[];for(let r=0;r<n.length;++r){const s=n[r],i=e[r];if(s>=0&&i>=0&&s!==i)throw new Error(`Incompatible shape during merge: ${n} vs. ${e}`);t[r]=s>=0?s:i}return t}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class OI{constructor(e,t,r,s,i,o,a){this.name=e,this.dtype=t,this.maxSize=r,this.elementShape=s,this.identicalElementShapes=i,this.dynamicSize=o,this.clearAfterRead=a,this.tensors=[],this.closed_=!1,this.idTensor=ue(0),nn(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach(t=>{(e==null||!e.has(t.tensor.id))&&t.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);const t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map(t=>this.read(t))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);const r=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},
          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(this.size()===0&&(this.elementShape==null||this.elementShape.length===0)&&(this.elementShape=t.shape),Ft(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),r.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(r.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);r.tensor=t,nn(t),r.written=!0,this.tensors[e]=r}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach((r,s)=>this.write(r,t[s]))}gather(e,t){if(!!t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let s=0;s<this.size();s++)e.push(s)}if(e.length===0)return Gt([],[0].concat(this.elementShape));const r=this.readMany(e);return Ft(this.elementShape,r[0].shape,"TensorArray shape mismatch: "),vn(r,0)}concat(e){if(!!e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(this.size()===0)return Gt([],[0].concat(this.elementShape));const t=[];for(let s=0;s<this.size();s++)t.push(s);const r=this.readMany(t);return Ft(this.elementShape,r[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${r[0].shape})`),Ze(r,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);const r=Math.max(...e);if(!this.dynamicSize&&r>=this.maxSize)throw new Error(`Max index must be < array size (${r}  vs. ${this.maxSize})`);this.writeMany(e,Jn(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let r=0;const s=e.map(u=>(r+=u,r));if(r!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${r}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);const i=r===0?0:t.size/r,o=[];ie(()=>{t=W(t,[1,r,i]);for(let u=0;u<e.length;++u){const l=u===0?0:s[u-1],c=[0,l,0],h=[1,e[u],i];o[u]=W($e(t,c,h),this.elementShape)}return o});const a=[];for(let u=0;u<e.length;u++)a[u]=u;this.writeMany(a,o)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ir{constructor(e,t,r,s=-1){this.tensors=e,this.elementShape=t,this.elementDtype=r,e!=null&&e.forEach(i=>{if(r!==i.dtype)throw new Error(`Invalid data types; op elements ${r}, but list elements ${i.dtype}`);Ft(t,i.shape,"TensorList shape mismatch: "),nn(i)}),this.idTensor=ue(0),this.maxNumElements=s,nn(this.idTensor)}get id(){return this.idTensor.id}copy(){return new Ir([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach(t=>{(e==null||!e.has(t.id))&&t.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,r=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(r!==-1&&this.tensors.length!==r)throw new Error(`Operation expected a list with ${r} elements but got a list with ${this.tensors.length} elements.`);Ft(e,this.elementShape,"TensorList shape mismatch: ");const s=Ns(this.elementShape,this.tensors,e);return ie(()=>{const i=this.tensors.map(o=>W(o,s));return vn(i,0)})}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(this.size()===0)throw new Error("Trying to pop from an empty list.");const r=Ns(this.elementShape,this.tensors,e),s=this.tensors.pop();return s.kept=!1,Ft(s.shape,e,"TensorList shape mismatch: "),W(s,r)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(Ft(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");nn(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(this.maxNumElements!==-1&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);const t=new Ir([],this.elementShape,this.elementDtype,this.maxNumElements);t.tensors.length=e;for(let r=0;r<Math.min(this.tensors.length,e);++r)t.tensors[r]=this.tensors[r];return t}getItem(e,t,r){if(r!==this.elementDtype)throw new Error(`Invalid data types; op elements ${r}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(this.tensors[e]==null)throw new Error(`element at index ${e} is null.`);Ft(this.tensors[e].shape,t,"TensorList shape mismatch: ");const s=Ns(this.elementShape,this.tensors,t);return W(this.tensors[e],s)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||this.maxNumElements!==-1&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);Ft(this.elementShape,t.shape,"TensorList shape mismatch: "),nn(t),this.tensors[e]!=null&&(this.tensors[e].kept=!1),this.tensors[e]=t}gather(e,t,r){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);Ft(this.elementShape,r,"TensorList shape mismatch: "),e=e.slice(0,this.size());const s=Ns(this.elementShape,this.tensors,r);return e.length===0?Gt([],[0].concat(s)):ie(()=>{const i=e.map(o=>W(this.tensors[o],s));return vn(i,0)})}concat(e,t){if(!!e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);Ft(this.elementShape,t,"TensorList shape mismatch: ");const r=Ns(this.elementShape,this.tensors,t);return this.size()===0?Gt([],[0].concat(r)):ie(()=>{const s=this.tensors.map(i=>W(i,r));return Ze(s,0)})}}function DI(n,e,t){const r=n.dtype;if(n.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${n.shape}`);if(n.dtype!==t)throw new Error(`Invalid data types; op elements ${n.dtype}, but list elements ${t}`);const s=n.shape.slice(1);Ft(s,e,"TensorList shape mismatch: ");const i=Jn(n);return new Ir(i,e,r)}function FI(n,e,t,r){return new Ir([],n,e,r)}function PI(n,e,t,r){if(e.length!==n.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${n.shape[0]}`);const s=Math.max(...e);if(r!=null&&r!==-1&&s>=r)throw new Error(`Max index must be < array size (${s}  vs. ${r})`);const i=new Ir([],t,n.dtype,r),o=Jn(n,0);return e.forEach((a,u)=>{i.setItem(a,o[u])}),i}function LI(n,e,t){let r=0;const s=e.map(c=>(r+=c,r));if(r!==n.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${r}, and tensor's shape is: ${n.shape}`);const i=n.shape.slice(1),o=Nu(i,t),a=r===0?0:n.size/r,u=ie(()=>{const c=[];n=W(n,[1,r,a]);for(let h=0;h<e.length;++h){const d=h===0?0:s[h-1],p=[0,d,0],m=[1,e[h],a];c[h]=W($e(n,p,m),o)}return n.dispose(),c}),l=new Ir([],t,n.dtype,e.length);for(let c=0;c<u.length;c++)l.setItem(c,u[c]);return l}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BI=async(n,e,t)=>{switch(n.op){case"If":case"StatelessIf":{const r=w("thenBranch",n,e,t),s=w("elseBranch",n,e,t),i=w("cond",n,e,t),o=w("args",n,e,t);return(await i.data())[0]?t.functionMap[r].executeFunctionAsync(o,t.tensorArrayMap,t.tensorListMap):t.functionMap[s].executeFunctionAsync(o,t.tensorArrayMap,t.tensorListMap)}case"While":case"StatelessWhile":{const r=w("body",n,e,t),s=w("cond",n,e,t),i=w("args",n,e,t),o=await t.functionMap[s].executeFunctionAsync(i,t.tensorArrayMap,t.tensorListMap),a=i.map(c=>c.id);let u=await o[0].data();o.forEach(c=>{!c.kept&&a.indexOf(c.id)===-1&&c.dispose()});let l=i;for(;u[0];){const c=l;l=await t.functionMap[r].executeFunctionAsync(l,t.tensorArrayMap,t.tensorListMap);const h=l.map(p=>p.id);c.forEach(p=>{!p.kept&&a.indexOf(p.id)===-1&&h.indexOf(p.id)===-1&&p.dispose()});const d=await t.functionMap[s].executeFunctionAsync(l,t.tensorArrayMap,t.tensorListMap);u=await d[0].data(),d.forEach(p=>{!p.kept&&a.indexOf(p.id)===-1&&h.indexOf(p.id)===-1&&p.dispose()})}return l}case"LoopCond":{const r=w("pred",n,e,t);return[En(r)]}case"Switch":{const r=w("pred",n,e,t);let s=w("data",n,e,t);return s.kept||(s=En(s)),(await r.data())[0]?[void 0,s]:[s,void 0]}case"Merge":{const r=n.inputNames.find(s=>ot(s,e,t)!==void 0);if(r){const s=ot(r,e,t);return[En(s)]}return}case"Enter":{const r=w("frameName",n,e,t),s=w("tensor",n,e,t);return t.enterFrame(r),[En(s)]}case"Exit":{const r=w("tensor",n,e,t);return t.exitFrame(),[En(r)]}case"NextIteration":{const r=w("tensor",n,e,t);return t.nextIteration(),[En(r)]}case"TensorArrayV3":{const r=w("size",n,e,t),s=w("dtype",n,e,t),i=w("elementShape",n,e,t),o=w("dynamicSize",n,e,t),a=w("clearAfterRead",n,e,t),u=w("identicalElementShapes",n,e,t),l=w("name",n,e,t),c=new OI(l,s,r,i,u,o,a);return t.addTensorArray(c),[c.idTensor,ue(1)]}case"TensorArrayWriteV3":{const r=w("tensorArrayId",n,e,t),s=w("index",n,e,t),i=w("tensor",n,e,t),o=t.getTensorArray(r.id);return o.write(s,i),[o.idTensor]}case"TensorArrayReadV3":{const r=w("tensorArrayId",n,e,t),s=w("index",n,e,t);return[t.getTensorArray(r.id).read(s)]}case"TensorArrayGatherV3":{const r=w("tensorArrayId",n,e,t),s=w("indices",n,e,t),i=w("dtype",n,e,t);return[t.getTensorArray(r.id).gather(s,i)]}case"TensorArrayScatterV3":{const r=w("tensorArrayId",n,e,t),s=w("indices",n,e,t),i=w("tensor",n,e,t),o=t.getTensorArray(r.id);return o.scatter(s,i),[o.idTensor]}case"TensorArrayConcatV3":{const r=w("tensorArrayId",n,e,t),s=t.getTensorArray(r.id),i=w("dtype",n,e,t);return[s.concat(i)]}case"TensorArraySplitV3":{const r=w("tensorArrayId",n,e,t),s=w("tensor",n,e,t),i=w("lengths",n,e,t),o=t.getTensorArray(r.id);return o.split(i,s),[o.idTensor]}case"TensorArraySizeV3":{const r=w("tensorArrayId",n,e,t),s=t.getTensorArray(r.id);return[ue(s.size(),"int32")]}case"TensorArrayCloseV3":{const r=w("tensorArrayId",n,e,t),s=t.getTensorArray(r.id);return s.clearAndClose(),[s.idTensor]}case"TensorListSetItem":{const r=w("tensorListId",n,e,t),s=w("index",n,e,t),i=w("tensor",n,e,t),o=t.getTensorList(r.id);return o.setItem(s,i),[o.idTensor]}case"TensorListGetItem":{const r=w("tensorListId",n,e,t),s=w("index",n,e,t),i=w("elementShape",n,e,t),o=w("elementDType",n,e,t);return[t.getTensorList(r.id).getItem(s,i,o)]}case"TensorListScatterV2":case"TensorListScatter":{const r=w("indices",n,e,t),s=w("tensor",n,e,t),i=w("elementShape",n,e,t),o=w("numElements",n,e,t),a=PI(s,r,i,o);return t.addTensorList(a),[a.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const r=w("elementShape",n,e,t),s=w("elementDType",n,e,t);let i;n.op==="TensorListReserve"?i="numElements":i="maxNumElements";const o=w(i,n,e,t),a=n.op==="TensorListReserve"?-1:o,u=FI(r,s,o,a);return t.addTensorList(u),[u.idTensor]}case"TensorListGather":{const r=w("tensorListId",n,e,t),s=w("indices",n,e,t),i=w("elementShape",n,e,t),o=w("elementDType",n,e,t);return[t.getTensorList(r.id).gather(s,o,i)]}case"TensorListStack":{const r=w("tensorListId",n,e,t),s=w("elementShape",n,e,t),i=w("elementDType",n,e,t),o=w("numElements",n,e,t);return[t.getTensorList(r.id).stack(s,i,o)]}case"TensorListFromTensor":{const r=w("tensor",n,e,t),s=w("elementShape",n,e,t),i=w("elementDType",n,e,t),o=DI(r,s,i);return t.addTensorList(o),[o.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{const r=w("tensorListId",n,e,t),s=t.getTensorList(r.id),i=w("dtype",n,e,t),o=w("elementShape",n,e,t);return[s.concat(i,o)]}case"TensorListPushBack":{const r=w("tensorListId",n,e,t),s=w("tensor",n,e,t),i=t.getTensorList(r.id);return i.pushBack(s),[i.idTensor]}case"TensorListPopBack":{const r=w("tensorListId",n,e,t),s=w("elementShape",n,e,t),i=w("elementDType",n,e,t);return[t.getTensorList(r.id).popBack(s,i)]}case"TensorListSplit":{const r=w("tensor",n,e,t),s=w("elementShape",n,e,t),i=w("lengths",n,e,t),o=LI(r,i,s);return t.addTensorList(o),[o.idTensor]}case"TensorListLength":{const r=w("tensorListId",n,e,t),s=t.getTensorList(r.id);return[ue(s.size(),"int32")]}case"TensorListResize":{const r=w("tensorListId",n,e,t),s=w("size",n,e,t),o=t.getTensorList(r.id).resize(s);return t.addTensorList(o),[o.idTensor]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wf(n,e,t){const[r,s]=w("fusedOps",n,e,t),i=r==="biasadd",o=!i,a=s==="prelu",u=r==="fusedbatchnorm",l=w("numArgs",n,e,t);if(i){if(a&&l!==2)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!a&&i&&l!==1)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(u)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");const c=w("strides",n,e,t),h=Xi(n,e,t),d=w("dataFormat",n,e,t).toUpperCase(),p=w("dilations",n,e,t);let[m,y]=w("args",n,e,t);o&&(y=m,m=void 0);const g=w("leakyreluAlpha",n,e,t);return{stride:c,pad:h,dataFormat:d,dilations:p,biasArg:m,preluArg:y,activationFunc:s,leakyreluAlpha:g}}const MI=(n,e,t,r=je)=>{switch(n.op){case"Conv1D":{const s=w("stride",n,e,t),i=w("pad",n,e,t),o=w("dataFormat",n,e,t).toUpperCase(),a=w("dilation",n,e,t);return[r.conv1d(w("x",n,e,t),w("filter",n,e,t),s,i,o,a)]}case"Conv2D":{const s=w("strides",n,e,t),i=Xi(n,e,t),o=w("dataFormat",n,e,t).toUpperCase(),a=w("dilations",n,e,t);return[r.conv2d(w("x",n,e,t),w("filter",n,e,t),[s[1],s[2]],i,o,[a[1],a[2]])]}case"_FusedConv2D":{const{stride:s,pad:i,dataFormat:o,dilations:a,biasArg:u,preluArg:l,activationFunc:c,leakyreluAlpha:h}=wf(n,e,t);return[r.fused.conv2d({x:w("x",n,e,t),filter:w("filter",n,e,t),strides:[s[1],s[2]],pad:i,dataFormat:o,dilations:[a[1],a[2]],bias:u,activation:c,preluActivationWeights:l,leakyreluAlpha:h})]}case"FusedDepthwiseConv2dNative":{const{stride:s,pad:i,dataFormat:o,dilations:a,biasArg:u,preluArg:l,activationFunc:c,leakyreluAlpha:h}=wf(n,e,t);return[r.fused.depthwiseConv2d({x:w("x",n,e,t),filter:w("filter",n,e,t),strides:[s[1],s[2]],pad:i,dataFormat:o,dilations:[a[1],a[2]],bias:u,activation:c,preluActivationWeights:l,leakyreluAlpha:h})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const s=w("outputShape",n,e,t),i=w("strides",n,e,t),o=Xi(n,e,t);return[r.conv2dTranspose(w("x",n,e,t),w("filter",n,e,t),s,[i[1],i[2]],o)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const s=w("strides",n,e,t),i=Xi(n,e,t),o=w("dilations",n,e,t),a=w("dataFormat",n,e,t).toUpperCase();return[r.depthwiseConv2d(w("input",n,e,t),w("filter",n,e,t),[s[1],s[2]],i,a,[o[1],o[2]])]}case"Conv3D":{const s=w("strides",n,e,t),i=w("pad",n,e,t),o=w("dataFormat",n,e,t).toUpperCase(),a=w("dilations",n,e,t);return[r.conv3d(w("x",n,e,t),w("filter",n,e,t),[s[1],s[2],s[3]],i,o,[a[1],a[2],a[3]])]}case"AvgPool":{const s=w("strides",n,e,t),i=w("pad",n,e,t),o=w("kernelSize",n,e,t);return[r.avgPool(w("x",n,e,t),[o[1],o[2]],[s[1],s[2]],i)]}case"MaxPool":{const s=w("strides",n,e,t),i=w("pad",n,e,t),o=w("kernelSize",n,e,t);return[r.maxPool(w("x",n,e,t),[o[1],o[2]],[s[1],s[2]],i)]}case"MaxPoolWithArgmax":{const s=w("strides",n,e,t),i=w("pad",n,e,t),o=w("kernelSize",n,e,t),a=w("includeBatchInIndex",n,e,t),{result:u,indexes:l}=r.maxPoolWithArgmax(w("x",n,e,t),[o[1],o[2]],[s[1],s[2]],i,a);return[u,l]}case"AvgPool3D":{const s=w("strides",n,e,t),i=w("pad",n,e,t),o=w("kernelSize",n,e,t);return[r.avgPool3d(w("x",n,e,t),[o[1],o[2],o[3]],[s[1],s[2],s[3]],i)]}case"MaxPool3D":{const s=w("strides",n,e,t),i=w("pad",n,e,t),o=w("kernelSize",n,e,t);return[r.maxPool3d(w("x",n,e,t),[o[1],o[2],o[3]],[s[1],s[2],s[3]],i)]}case"Dilation2D":{const s=w("strides",n,e,t),i=w("pad",n,e,t),o=w("dilations",n,e,t),a=s[1],u=s[2],l=o[1],c=o[2];return[r.dilation2d(w("x",n,e,t),w("filter",n,e,t),[a,u],i,[l,c],"NHWC")]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VI=(n,e,t,r=je)=>{switch(n.op){case"Fill":{const s=w("shape",n,e,t),i=w("dtype",n,e,t),o=w("value",n,e,t);return[r.fill(s,o,i)]}case"LinSpace":{const s=w("start",n,e,t),i=w("stop",n,e,t),o=w("num",n,e,t);return[r.linspace(s,i,o)]}case"Multinomial":{const s=w("logits",n,e,t),i=w("numSamples",n,e,t),o=w("seed",n,e,t);return[r.multinomial(s,i,o)]}case"OneHot":{const s=w("indices",n,e,t),i=w("depth",n,e,t),o=w("onValue",n,e,t),a=w("offValue",n,e,t),u=w("dtype",n,e,t);return[r.oneHot(s,i,o,a,u)]}case"Ones":return[r.ones(w("shape",n,e,t),w("dtype",n,e,t))];case"OnesLike":return[r.onesLike(w("x",n,e,t))];case"RandomStandardNormal":return[r.randomStandardNormal(w("shape",n,e,t),w("dtype",n,e,t),w("seed",n,e,t))];case"RandomUniform":return[r.randomUniform(w("shape",n,e,t),w("minval",n,e,t),w("maxval",n,e,t),w("dtype",n,e,t))];case"Range":{const s=w("start",n,e,t),i=w("stop",n,e,t),o=w("step",n,e,t);return[r.range(s,i,o,w("dtype",n,e,t))]}case"TruncatedNormal":{const s=w("shape",n,e,t),i=w("mean",n,e,t),o=w("stdDev",n,e,t),a=w("seed",n,e,t);return[r.truncatedNormal(s,i,o,w("dtype",n,e,t),a)]}case"Zeros":return[r.zeros(w("shape",n,e,t),w("dtype",n,e,t))];case"ZerosLike":return[r.zerosLike(w("x",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fa(n,e,t){const r=w("boxes",n,e,t),s=w("scores",n,e,t),i=w("maxOutputSize",n,e,t),o=w("iouThreshold",n,e,t),a=w("scoreThreshold",n,e,t),u=w("softNmsSigma",n,e,t);return{boxes:r,scores:s,maxOutputSize:i,iouThreshold:o,scoreThreshold:a,softNmsSigma:u}}const UI=async(n,e,t,r,s=je)=>{switch(n.op){case"NonMaxSuppressionV5":{const{boxes:i,scores:o,maxOutputSize:a,iouThreshold:u,scoreThreshold:l,softNmsSigma:c}=Fa(n,e,t),h=await s.image.nonMaxSuppressionWithScoreAsync(i,o,a,u,l,c);return[h.selectedIndices,h.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:i,scores:o,maxOutputSize:a,iouThreshold:u,scoreThreshold:l}=Fa(n,e,t),c=w("padToMaxOutputSize",n,e,t),h=await s.image.nonMaxSuppressionPaddedAsync(i,o,a,u,l,c);return[h.selectedIndices,h.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:i,scores:o,maxOutputSize:a,iouThreshold:u,scoreThreshold:l}=Fa(n,e,t);return[await s.image.nonMaxSuppressionAsync(i,o,a,u,l)]}case"Where":{const i=s.cast(w("condition",n,e,t),"bool"),o=[await s.whereAsync(i)];return i.dispose(),o}case"ListDiff":return s.setdiff1dAsync(w("x",n,e,t),w("y",n,e,t));default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zI=(n,e,t,r=je)=>{switch(n.op){case"LowerBound":{const s=w("sortedSequence",n,e,t),i=w("values",n,e,t);return[r.lowerBound(s,i)]}case"TopKV2":{const s=w("x",n,e,t),i=w("k",n,e,t),o=w("sorted",n,e,t),a=r.topk(s,i,o);return[a.values,a.indices]}case"UpperBound":{const s=w("sortedSequence",n,e,t),i=w("values",n,e,t);return[r.upperBound(s,i)]}case"Unique":{const s=w("x",n,e,t),i=r.unique(s);return[i.values,i.indices]}case"UniqueV2":{const s=w("x",n,e,t),i=w("axis",n,e,t),o=r.unique(s,i);return[o.values,o.indices]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WI=(n,e,t,r=je)=>{switch(n.op){case"Const":return e[n.name];case"PlaceholderWithDefault":const s=w("default",n,e,t);return[ot(n.name,e,t)||s];case"Placeholder":return[ot(n.name,e,t)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":{const c=w("x",n,e,t);return[En(c)]}case"IdentityN":return w("x",n,e,t).map(c=>En(c));case"Snapshot":const i=w("x",n,e,t);return[En(i)];case"Shape":return[r.tensor1d(w("x",n,e,t).shape,"int32")];case"ShapeN":return w("x",n,e,t).map(c=>r.tensor1d(c.shape));case"Size":return[r.scalar(w("x",n,e,t).size,"int32")];case"Rank":return[r.scalar(w("x",n,e,t).rank,"int32")];case"NoOp":return[r.scalar(1)];case"Print":const o=w("x",n,e,t),a=w("data",n,e,t),u=w("message",n,e,t),l=w("summarize",n,e,t);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(u);for(let c=0;c<a.length;c++)console.log(Array.prototype.slice.call(a[c].dataSync()).slice(0,l));return[o];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class GI{constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=ue(0),this.tensorMap=new Map,nn(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach(e=>e.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return ue(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);const r=await e.data();return this.tensorMap.forEach(s=>s.dispose()),this.tensorMap.clear(),ie(()=>{const s=Jn(t),i=r.length,o=s.length;N(i===o,()=>`The number of elements doesn't match, keys has ${i} elements, the values has ${o} elements.`);for(let a=0;a<i;a++){const u=r[a],l=s[a];nn(l),this.tensorMap.set(u,l)}return this.handle})}async find(e,t){this.checkKeyAndValueTensor(e,t);const r=await e.data();return ie(()=>{const s=[];for(let i=0;i<r.length;i++){const o=r[i],a=this.findWithDefault(o,t);s.push(a)}return vn(s)})}findWithDefault(e,t){const r=this.tensorMap.get(e);return r!=null?r:t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HI=async(n,e,t,r)=>{switch(n.op){case"HashTable":case"HashTableV2":{const s=r.getHashTableHandleByName(n.name);if(s!=null)return[s];{const i=w("keyDType",n,e,t),o=w("valueDType",n,e,t),a=new GI(i,o);return r.addHashTable(n.name,a),[a.handle]}}case"InitializeTable":case"InitializeTableV2":case"LookupTableImport":case"LookupTableImportV2":{const s=w("tableHandle",n,e,t,r),i=w("keys",n,e,t),o=w("values",n,e,t);return[await r.getHashTableById(s.id).import(i,o)]}case"LookupTableFind":case"LookupTableFindV2":{const s=w("tableHandle",n,e,t,r),i=w("keys",n,e,t),o=w("defaultValue",n,e,t);return[await r.getHashTableById(s.id).find(i,o)]}case"LookupTableSize":case"LookupTableSizeV2":{const s=w("tableHandle",n,e,t,r);return[r.getHashTableById(s.id).tensorSize()]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jI=(n,e,t,r=je)=>{switch(n.op){case"ResizeBilinear":{const s=w("images",n,e,t),i=w("size",n,e,t),o=w("alignCorners",n,e,t),a=w("halfPixelCenters",n,e,t);return[r.image.resizeBilinear(s,[i[0],i[1]],o,a)]}case"ResizeNearestNeighbor":{const s=w("images",n,e,t),i=w("size",n,e,t),o=w("alignCorners",n,e,t),a=w("halfPixelCenters",n,e,t);return[r.image.resizeNearestNeighbor(s,[i[0],i[1]],o,a)]}case"CropAndResize":{const s=w("image",n,e,t),i=w("boxes",n,e,t),o=w("boxInd",n,e,t),a=w("cropSize",n,e,t),u=w("method",n,e,t),l=w("extrapolationValue",n,e,t);return[r.image.cropAndResize(s,i,o,a,u,l)]}case"ImageProjectiveTransformV3":{const s=w("images",n,e,t),i=w("transforms",n,e,t),o=w("outputShape",n,e,t),a=w("fillValue",n,e,t),u=w("interpolation",n,e,t),l=w("fillMode",n,e,t);return[r.image.transform(s,i,u.toLowerCase(),l.toLowerCase(),a,o)]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qI=(n,e,t,r=je)=>{switch(n.op){case"Equal":return[r.equal(w("a",n,e,t),w("b",n,e,t))];case"NotEqual":return[r.notEqual(w("a",n,e,t),w("b",n,e,t))];case"Greater":return[r.greater(w("a",n,e,t),w("b",n,e,t))];case"GreaterEqual":return[r.greaterEqual(w("a",n,e,t),w("b",n,e,t))];case"Less":return[r.less(w("a",n,e,t),w("b",n,e,t))];case"LessEqual":return[r.lessEqual(w("a",n,e,t),w("b",n,e,t))];case"LogicalAnd":return[r.logicalAnd(w("a",n,e,t),w("b",n,e,t))];case"LogicalNot":return[r.logicalNot(w("a",n,e,t))];case"LogicalOr":return[r.logicalOr(w("a",n,e,t),w("b",n,e,t))];case"Select":case"SelectV2":return[r.where(w("condition",n,e,t),w("a",n,e,t),w("b",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KI=(n,e,t,r=je)=>{switch(n.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[r.matMul(w("a",n,e,t),w("b",n,e,t),w("transposeA",n,e,t),w("transposeB",n,e,t))];case"Einsum":return[r.einsum(w("equation",n,e,t),...w("tensors",n,e,t))];case"Transpose":return[r.transpose(w("x",n,e,t),w("perm",n,e,t))];case"_FusedMatMul":const[s,i]=w("fusedOps",n,e,t),o=s==="biasadd",a=i==="prelu",u=w("numArgs",n,e,t),l=w("leakyreluAlpha",n,e,t);if(o){if(a&&u!==2)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!a&&u!==1)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[c,h]=w("args",n,e,t);return[r.fused.matMul({a:w("a",n,e,t),b:w("b",n,e,t),transposeA:w("transposeA",n,e,t),transposeB:w("transposeB",n,e,t),bias:c,activation:i,preluActivationWeights:h,leakyreluAlpha:l})];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const XI=(n,e,t,r=je)=>{switch(n.op){case"EuclideanNorm":return[r.euclideanNorm(w("x",n,e,t),w("axis",n,e,t),w("keepDims",n,e,t))];case"FusedBatchNorm":case"FusedBatchNormV2":return[r.batchNorm(w("x",n,e,t),w("mean",n,e,t),w("variance",n,e,t),w("offset",n,e,t),w("scale",n,e,t),w("epsilon",n,e,t))];case"FusedBatchNormV3":return[r.batchNorm(w("x",n,e,t),w("mean",n,e,t),w("variance",n,e,t),w("offset",n,e,t),w("scale",n,e,t),w("epsilon",n,e,t))];case"LRN":return[r.localResponseNormalization(w("x",n,e,t),w("radius",n,e,t),w("bias",n,e,t),w("alpha",n,e,t),w("beta",n,e,t))];case"Softmax":return[r.softmax(w("x",n,e,t))];case"LogSoftmax":return[r.logSoftmax(w("x",n,e,t))];case"SparseToDense":return[r.sparseToDense(w("sparseIndices",n,e,t),w("outputShape",n,e,t),w("sparseValues",n,e,t),w("defaultValue",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YI=(n,e,t,r=je)=>{switch(n.op){case"RaggedGather":{const{outputNestedSplits:s,outputDenseValues:i}=r.raggedGather(w("paramsNestedSplits",n,e,t),w("paramsDenseValues",n,e,t),w("indices",n,e,t),w("outputRaggedRank",n,e,t));return s.concat(i)}case"RaggedRange":{const{rtNestedSplits:s,rtDenseValues:i}=r.raggedRange(w("starts",n,e,t),w("limits",n,e,t),w("splits",n,e,t));return[s,i]}case"RaggedTensorToTensor":return[r.raggedTensorToTensor(w("shape",n,e,t),w("values",n,e,t),w("defaultValue",n,e,t),w("rowPartitionTensors",n,e,t),w("rowPartitionTypes",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QI=(n,e,t,r=je)=>{switch(n.op){case"Max":{const a=w("axis",n,e,t),u=w("keepDims",n,e,t);return[r.max(w("x",n,e,t),a,u)]}case"Mean":{const a=w("axis",n,e,t),u=w("keepDims",n,e,t);return[r.mean(w("x",n,e,t),a,u)]}case"Min":{const a=w("axis",n,e,t),u=w("keepDims",n,e,t);return[r.min(w("x",n,e,t),a,u)]}case"Sum":{const a=w("axis",n,e,t),u=w("keepDims",n,e,t);return[r.sum(w("x",n,e,t),a,u)]}case"All":{const a=w("axis",n,e,t),u=w("keepDims",n,e,t);return[r.all(w("x",n,e,t),a,u)]}case"Any":{const a=w("axis",n,e,t),u=w("keepDims",n,e,t);return[r.any(w("x",n,e,t),a,u)]}case"ArgMax":{const a=w("axis",n,e,t);return[r.argMax(w("x",n,e,t),a)]}case"ArgMin":{const a=w("axis",n,e,t);return[r.argMin(w("x",n,e,t),a)]}case"Prod":{const a=w("axis",n,e,t),u=w("keepDims",n,e,t);return[r.prod(w("x",n,e,t),a,u)]}case"Cumprod":{const a=w("axis",n,e,t),u=w("exclusive",n,e,t),l=w("reverse",n,e,t);return[r.cumprod(w("x",n,e,t),a,u,l)]}case"Cumsum":{const a=w("axis",n,e,t),u=w("exclusive",n,e,t),l=w("reverse",n,e,t);return[r.cumsum(w("x",n,e,t),a,u,l)]}case"Bincount":const s=w("x",n,e,t),i=w("weights",n,e,t),o=w("size",n,e,t);return[r.bincount(s,i,o)];case"DenseBincount":{const a=w("x",n,e,t),u=w("weights",n,e,t),l=w("size",n,e,t),c=w("binaryOutput",n,e,t);return[r.denseBincount(a,u,l,c)]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZI=(n,e,t,r=je)=>{switch(n.op){case"ConcatV2":case"Concat":{const s=w("n",n,e,t),i=w("axis",n,e,t);let o=w("tensors",n,e,t);return o=o.slice(0,s),[r.concat(o,i)]}case"Gather":{const s=w("x",n,e,t),i=w("indices",n,e,t);return[r.gather(s,r.cast(i,"int32"),0)]}case"GatherV2":{const s=w("axis",n,e,t),i=w("batchDims",n,e,t),o=w("x",n,e,t),a=w("indices",n,e,t);return[r.gather(o,r.cast(a,"int32"),s,i)]}case"Reverse":{const s=w("dims",n,e,t),i=[];for(let a=0;a<s.length;a++)s[a]&&i.push(a);const o=w("x",n,e,t);return[r.reverse(o,i)]}case"ReverseV2":{const s=w("axis",n,e,t),i=w("x",n,e,t);return[r.reverse(i,s)]}case"Slice":{const s=w("begin",n,e,t),i=w("size",n,e,t);return[r.slice(w("x",n,e,t),s,i)]}case"StridedSlice":{const s=w("begin",n,e,t),i=w("end",n,e,t),o=w("strides",n,e,t),a=w("beginMask",n,e,t),u=w("endMask",n,e,t),l=w("ellipsisMask",n,e,t),c=w("newAxisMask",n,e,t),h=w("shrinkAxisMask",n,e,t),d=w("x",n,e,t);return[r.stridedSlice(d,s,i,o,a,u,l,c,h)]}case"Pack":return ie(()=>{const s=w("axis",n,e,t),i=w("tensors",n,e,t),o=i[0].shape,a=r.squeeze(i[0]).shape,u=i.map(l=>{const c=Oe(l.shape,o);if(!c&&!Oe(r.squeeze(l).shape,a))throw new Error("the input tensors shape does not match");return c?l:r.reshape(l,o)});return[r.stack(u,s)]});case"Unpack":{const s=w("axis",n,e,t),i=w("tensor",n,e,t);return r.unstack(i,s)}case"Tile":{const s=w("reps",n,e,t);return[r.tile(w("x",n,e,t),s)]}case"Split":case"SplitV":{const s=w("axis",n,e,t),i=w("numOrSizeSplits",n,e,t),o=w("x",n,e,t);return r.split(o,i,s)}case"ScatterNd":{const s=w("indices",n,e,t),i=w("values",n,e,t),o=w("shape",n,e,t);return[r.scatterND(s,i,o)]}case"GatherNd":{const s=w("x",n,e,t),i=w("indices",n,e,t);return[r.gatherND(s,i)]}case"SparseToDense":{const s=w("sparseIndices",n,e,t),i=w("outputShape",n,e,t),o=w("sparseValues",n,e,t),a=w("defaultValue",n,e,t);return[r.sparseToDense(s,o,i,o.dtype===a.dtype?a:r.cast(a,o.dtype))]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JI=(n,e,t,r=je)=>{switch(n.op){case"SparseFillEmptyRows":{const{outputIndices:s,outputValues:i,emptyRowIndicator:o,reverseIndexMap:a}=r.sparse.sparseFillEmptyRows(w("indices",n,e,t),w("values",n,e,t),w("denseShape",n,e,t),w("defaultValue",n,e,t));return[s,i,o,a]}case"SparseReshape":{const{outputIndices:s,outputShape:i}=r.sparse.sparseReshape(w("inputIndices",n,e,t),w("inputShape",n,e,t),w("newShape",n,e,t));return[s,i]}case"SparseSegmentMean":return[r.sparse.sparseSegmentMean(w("data",n,e,t),w("indices",n,e,t),w("segmentIds",n,e,t))];case"SparseSegmentSum":return[r.sparse.sparseSegmentSum(w("data",n,e,t),w("indices",n,e,t),w("segmentIds",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ek=(n,e,t,r=je)=>{switch(n.op){case"FFT":return[r.fft(w("x",n,e,t))];case"IFFT":return[r.ifft(w("x",n,e,t))];case"RFFT":return[r.rfft(w("x",n,e,t))];case"IRFFT":return[r.irfft(w("x",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tk=(n,e,t,r=je)=>{switch(n.op){case"StringNGrams":{const{nGrams:s,nGramsSplits:i}=r.string.stringNGrams(w("data",n,e,t),w("dataSplits",n,e,t),w("separator",n,e,t),w("nGramWidths",n,e,t),w("leftPad",n,e,t),w("rightPad",n,e,t),w("padWidth",n,e,t),w("preserveShortSequences",n,e,t));return[s,i]}case"StringSplit":{const{indices:s,values:i,shape:o}=r.string.stringSplit(w("input",n,e,t),w("delimiter",n,e,t),w("skipEmpty",n,e,t));return[s,i,o]}case"StringToHashBucketFast":return[r.string.stringToHashBucketFast(w("input",n,e,t),w("numBuckets",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nk=(n,e,t,r=je)=>{switch(n.op){case"Cast":return[r.cast(w("x",n,e,t),w("dtype",n,e,t))];case"ExpandDims":{const s=w("axis",n,e,t);return[r.expandDims(w("x",n,e,t),s)]}case"Squeeze":{const s=w("axis",n,e,t);return[r.squeeze(w("x",n,e,t),s)]}case"Reshape":return[r.reshape(w("x",n,e,t),w("shape",n,e,t))];case"MirrorPad":return[r.mirrorPad(w("x",n,e,t),w("padding",n,e,t),w("mode",n,e,t))];case"PadV2":case"Pad":return[r.pad(w("x",n,e,t),w("padding",n,e,t),w("constantValue",n,e,t))];case"SpaceToBatchND":{const s=w("blockShape",n,e,t),i=w("paddings",n,e,t);return[r.spaceToBatchND(w("x",n,e,t),s,i)]}case"BatchToSpaceND":{const s=w("blockShape",n,e,t),i=w("crops",n,e,t);return[r.batchToSpaceND(w("x",n,e,t),s,i)]}case"DepthToSpace":{const s=w("blockSize",n,e,t),i=w("dataFormat",n,e,t).toUpperCase();return[r.depthToSpace(w("x",n,e,t),s,i)]}case"BroadcastTo":return[r.broadcastTo(w("x",n,e,t),w("shape",n,e,t))];case"BroadcastArgs":return[r.broadcastArgs(w("s0",n,e,t),w("s1",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vf(n,e,t,r,s=ie){const i=((o,a,u)=>{switch(o.category){case"arithmetic":return s(()=>RI(o,a,u));case"basic_math":return s(()=>AI(o,a,u));case"control":return BI(o,a,u);case"convolution":return s(()=>MI(o,a,u));case"creation":return s(()=>VI(o,a,u));case"dynamic":return UI(o,a,u);case"evaluation":return s(()=>zI(o,a,u));case"image":return s(()=>jI(o,a,u));case"graph":return s(()=>WI(o,a,u));case"logical":return s(()=>qI(o,a,u));case"matrices":return s(()=>KI(o,a,u));case"normalization":return s(()=>XI(o,a,u));case"ragged":return s(()=>YI(o,a,u));case"reduction":return s(()=>QI(o,a,u));case"slice_join":return s(()=>ZI(o,a,u));case"sparse":return s(()=>JI(o,a,u));case"spectral":return s(()=>ek(o,a,u));case"string":return s(()=>tk(o,a,u));case"transformation":return s(()=>nk(o,a,u));case"hash_table":return HI(o,a,u,r);case"custom":const l=a1(o.op);if(l&&l.customExecutor)return l.customExecutor(new _I(o,a,u));throw TypeError(`Custom op ${o.op} is not registered.`);default:throw TypeError(`Unknown op '${o.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(n,e,t);return wr(i)?i.then(o=>[].concat(o)):[].concat(i)}class $f{constructor(e={},t={},r={},s={}){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=r,this.functionMap=s,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const e=[];for(let t=0;t<this.contexts.length-1;t++){const r=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(r))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map(t=>t.id===0&&t.iterationId===0?"":`${t.frameName}-${t.iterationId}`).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(this.contexts&&this.contexts.length>1)this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift();else throw new Error("Cannot exit frame, the context is empty")}nextIteration(){if(this.contexts&&this.contexts.length>0){this.contexts=this.contexts.slice(),this.lastId++;const e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}else throw new Error("Cannot increase frame iteration, the context is empty")}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(const t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(const t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sf(n,e,t,r){const s=new Set,i=[];let o=null,a=null;const u=new Set,l=Object.keys(n).map(d=>xt(d)[0]);let c=[];r!=null&&(c=r.map(d=>xt(d.name)[0]));const h=[...e];for(;h.length>0;){const d=h.pop();if((c1(d)||ak(d)||uk(d))&&o==null&&(o=d,a=o.children.map(p=>p.name).filter(p=>s.has(p))),s.add(d.name),t[d.name]==null&&l.indexOf(d.name)===-1&&c.indexOf(d.name)===-1){if(d.inputs.length===0){i.push(d.name);continue}d.inputs.forEach(p=>{u.has(p.name)||(u.add(p.name),h.push(p))})}}return{inputs:n,outputs:e,usedNodes:s,missingInputs:i,dynamicNode:o,syncInputs:a}}function rk(n,e,t){const{usedNodes:r,inputs:s}=t,i=[],o=Object.keys(s).map(c=>xt(c)[0]).map(c=>n.nodes[c]),a=n.initNodes;o.forEach(c=>{r.has(c.name)&&i.push(c)}),n.weights.forEach(c=>{r.has(c.name)&&i.push(c)}),a!=null&&a.forEach(c=>{r.has(c.name)&&i.push(c)});const u=new Set,l=[];for(;i.length>0;){const c=i.pop();u.add(c.name),e[c.name]||l.push(c),c.children.forEach(h=>{!u.has(h.name)&&r.has(h.name)&&h.inputs.every(d=>u.has(d.name))&&i.push(h)})}return l}const sk=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],ik=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],ok=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"];function c1(n){return sk.indexOf(n.op)>=0}function ak(n){return ik.indexOf(n.op)>=0}function uk(n){return ok.indexOf(n.op)>=0}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class fo{constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._functions={},this._functionExecutorMap={},this.keepIntermediateTensors=!1,this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,e.functions!=null&&Object.keys(e.functions).forEach(r=>{this._functionExecutorMap[r]=new fo(e.functions[r],this)})}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){const t=Object.keys(e).map(r=>e[r].map(s=>s.id));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(e=>e.signatureKey||e.name)}get outputNodes(){return this._outputs.map(e=>{const t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t})}get functions(){return Object.keys(this._functions).reduce((e,t)=>(e[t]=this._functions[t].signature,e),{})}getCompilationKey(e,t){const r=e.map(i=>i.name).sort(),s=t.map(i=>i.name).sort();return r.join(this.SEPERATOR)+"--"+s.join(this.SEPERATOR)}compile(e,t){const r=Sf(e,t,this.weightMap,this._initNodes),{missingInputs:s,dynamicNode:i,syncInputs:o}=r;if(i!=null)throw new Error(`This execution contains the node '${i.name}', which has the dynamic op '${i.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${o}]`);if(s.length>0){const a=t.map(l=>l.name),u=Object.keys(e);throw new Error(`Cannot compute the outputs [${a}] from the provided inputs [${u}]. Missing the following inputs: [${s}]`)}return rk(this.graph,this.weightMap,r)}cloneAndKeepTensor(e){if(e==null)return null;const t=e.clone();return nn(t),t}cloneTensorList(e){return e?e.map(r=>this.cloneAndKeepTensor(r)):null}cloneTensorMap(e){return Object.fromEntries(Object.entries(e).map(([t,r])=>[t,this.cloneTensorList(r)]))}execute(e,t){this.disposeIntermediateTensors(),e=this.mapInputs(e);const r=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);const s=r.map(h=>this.graph.nodes[xt(h)[0]]),i=t.map(h=>xt(h)[0]);let o=i.map(h=>this.graph.nodes[h]);o.length===0&&(o=this._outputs);const a=this.getCompilationKey(s,o);let u=this.compiledMap.get(a);u==null&&(u=this.compile(e,o),this.compiledMap.set(a,u));try{this.keepIntermediateTensors=B().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(h){this.keepIntermediateTensors=!1,console.warn(h.message)}const l={},c={};return ie(()=>{const h=new $f(this.weightMap,l,c,this.functionExecutorMap),d=Object.assign({},this.weightMap);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap)),Object.keys(e).forEach(y=>{const[g,x]=xt(y),$=[];$[x]=e[y],d[g]=$,this.keepIntermediateTensors&&(this.clonedTensorsMap[g]=this.cloneTensorList($))});const p=this.getFrozenTensorIds(d),m={};for(let y=0;y<u.length;y++){const g=u[y];if(!d[g.name]){const x=vf(g,d,h,this._resourceManager);if(wr(x))throw new Error(`The execution of the op '${g.op}' returned a promise. Please use model.executeAsync() instead.`);d[g.name]=x,this.keepIntermediateTensors&&(this.clonedTensorsMap[g.name]=this.cloneTensorList(x)),this.checkTensorForDisposal(g.name,g,d,h,p,i,m)}}return this.parent==null&&h.dispose(p),t.map(y=>ot(y,d,h))})}getFrozenTensorIds(e){const t=[].concat.apply([],Object.keys(e).map(r=>e[r]).map(r=>r.map(s=>s.id)));return new Set(t)}checkTensorForDisposal(e,t,r,s,i,o,a){t.category==="control"||o.indexOf(e)!==-1||(r[e].forEach(u=>{u!=null&&(a[u.id]=(a[u.id]||0)+t.children.length)}),t.inputs.forEach(u=>{if(u.category!=="control"){const l=GN(u.name,r,s);l!=null&&l.forEach(c=>{if(c&&!c.kept&&!i.has(c.id)){const h=a[c.id];h===1?(c.dispose(),delete a[c.id]):h!=null&&a[c.id]--}})}}))}async executeAsync(e,t){return this._executeAsync(e,t)}disposeIntermediateTensors(){!this.clonedTensorsMap||(Object.values(this.clonedTensorsMap).forEach(e=>{for(const t of e)t&&!t.isDisposed&&t.dispose()}),this.clonedTensorsMap=null)}getIntermediateTensors(){return this.clonedTensorsMap}async _executeAsync(e,t,r=!1,s={},i={}){this.disposeIntermediateTensors(),r||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));try{this.keepIntermediateTensors=B().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(d){this.keepIntermediateTensors=!1,console.warn(d.message)}const o=new $f(this.weightMap,s,i,this.functionExecutorMap);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap));const a=await this.executeWithControlFlow(e,o,t,r),u=t.map(d=>ot(d,a,o)),l=u.map(d=>d.id),c=Object.keys(e).map(d=>e[d].id),h=new Set([...l,...c,...this.weightIds]);return Object.values(a).forEach(d=>{d.forEach(p=>{p&&!p.isDisposed&&!h.has(p.id)&&p.dispose()})}),this.parent==null&&o.dispose(h),u}async executeFunctionAsync(e,t,r){const s=e.reduce((i,o,a)=>(i[this.inputs[a].name]=o,i),{});return this._executeAsync(s,this.outputNodes,!0,t,r)}async executeWithControlFlow(e,t,r,s){const i=Object.keys(e),o=i.map(C=>this.graph.nodes[xt(C)[0]]),a=r.map(C=>xt(C)[0]);let u=a.map(C=>this.graph.nodes[C]);u.length===0&&(u=this._outputs);const{usedNodes:l,missingInputs:c,dynamicNode:h,syncInputs:d}=Sf(e,u,this.weightMap,this._initNodes),p=[...o,...this.graph.weights,...this._initNodes||[]].map(C=>({node:C,contexts:t.currentContext})),m=Object.assign({},this.weightMap);Object.keys(e).forEach(C=>{const[S,I]=xt(C),A=[];A[I]=e[C],m[S]=A});const y={},g=this.getFrozenTensorIds(m),x={};for(;p.length>0;){const C=this.processStack(o,p,t,m,x,g,a,y,l);await Promise.all(C)}h==null&&!s&&console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const $=u.filter(C=>!c1(C)&&!ot(C.name,m,t)).map(C=>C.name);if($.length>0){let C="";throw h!=null&&(C=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${d}]`),new Error(`Cannot compute the outputs [${$}] from the provided inputs [${i}]. Consider providing the following inputs: [${c}]. ${C}`)}return m}processStack(e,t,r,s,i,o,a,u,l){const c=[];for(;t.length>0;){const h=t.pop();r.currentContext=h.contexts;let d="";if(h.node.op==="Enter"&&w("isConstant",h.node,s,r)&&([d]=Cn(h.node.name,r)),s[h.node.name]==null){const p=vf(h.node,s,r,this._resourceManager);d||([d]=Cn(h.node.name,r));const m=r.currentContext;wr(p)?c.push(p.then(y=>(s[d]=y,this.keepIntermediateTensors&&(this.clonedTensorsMap[d]=this.cloneTensorList(y)),r.currentContext=m,this.checkTensorForDisposal(d,h.node,s,r,o,a,u),this.processChildNodes(h.node,t,r,s,i,l),y))):(s[d]=p,this.keepIntermediateTensors&&(this.clonedTensorsMap[d]=this.cloneTensorList(p)),this.checkTensorForDisposal(d,h.node,s,r,o,a,u),this.processChildNodes(h.node,t,r,s,i,l))}else this.processChildNodes(h.node,t,r,s,i,l)}return c}processChildNodes(e,t,r,s,i,o){e.children.forEach(a=>{const[u]=Cn(a.name,r);i[u]||!o.has(a.name)||(a.op==="Merge"?a.inputNames.some(l=>!!ot(l,s,r))&&(i[u]=!0,t.push({contexts:r.currentContext,node:a})):a.inputNames.every(l=>!!ot(l,s,r))&&(i[u]=!0,t.push({contexts:r.currentContext,node:a})))})}dispose(){Object.keys(this.weightMap).forEach(e=>this.weightMap[e].forEach(t=>t.dispose()))}checkInputShapeAndType(e){Object.keys(e).forEach(t=>{const r=e[t],[s]=xt(t),i=this.graph.nodes[s];if(i.attrParams.shape&&i.attrParams.shape.value){const o=i.attrParams.shape.value,a=o.length===r.shape.length&&r.shape.every((u,l)=>o[l]===-1||o[l]===u);N(a,()=>`The shape of dict['${i.name}'] provided in model.execute(dict) must be [${o}], but was [${r.shape}]`)}i.attrParams.dtype&&i.attrParams.dtype.value&&N(r.dtype===i.attrParams.dtype.value,()=>`The dtype of dict['${i.name}'] provided in model.execute(dict) must be ${i.attrParams.dtype.value}, but was ${r.dtype}`)})}mapInputs(e){var t,r;const s={};for(const i in e){const o=(r=(t=this._signature)===null||t===void 0?void 0:t.inputs)===null||r===void 0?void 0:r[i];o!=null?s[o.name]=e[i]:s[i]=e[i]}return s}checkInputs(e){const t=Object.keys(e).filter(r=>{const[s]=xt(r);return this.graph.nodes[s]==null});if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map(t=>{var r,s;const i=(s=(r=this._signature)===null||r===void 0?void 0:r.outputs)===null||s===void 0?void 0:s[t];return i!=null?i.name:t},{})}checkOutputs(e){e.forEach(t=>{const[r]=xt(t);if(!this.graph.nodes[r])throw new Error(`The output '${t}' is not found in the graph`)})}}class lk{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(const e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(const e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ck="?tfjs-format=file",hk="model.json";class dk{constructor(e,t={},r=Vh){this.modelUrl=e,this.loadOptions=t,this.version="n/a",this.io=r,t==null&&(this.loadOptions={}),this.resourceManager=new lk}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}get modelStructuredOutputKeys(){return this.structuredOutputKeys}findIOHandler(){const e=this.modelUrl;if(e.load!=null)this.handler=e;else if(this.loadOptions.requestInit!=null)this.handler=this.io.browserHTTPRequest(e,this.loadOptions);else{const t=this.io.getLoadHandlers(e,this.loadOptions);if(t.length===0)t.push(this.io.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}load(){if(this.findIOHandler(),this.handler.load==null)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const e=this.handler.load();return wr(e)?e.then(t=>this.loadSync(t)):this.loadSync(e)}loadSync(e){this.artifacts=e;const t=this.artifacts.modelTopology;let r=this.artifacts.signature;if(this.artifacts.userDefinedMetadata!=null){const i=this.artifacts.userDefinedMetadata;i.signature!=null&&(r=i.signature),i.structuredOutputKeys!=null&&(this.structuredOutputKeys=i.structuredOutputKeys)}this.signature=r,this.version=`${t.versions.producer}.${t.versions.minConsumer}`;const s=this.io.decodeWeights(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new fo(yf.Instance.transformGraph(t,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(s),this.executor.resourceManager=this.resourceManager,e.modelInitializer!=null&&e.modelInitializer.node!=null){const i=yf.Instance.transformGraph(e.modelInitializer);this.initializer=new fo(i),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializerSignature=e.initializerSignature}return!0}async save(e,t){if(typeof e=="string"){const r=this.io.getSaveHandlers(e);if(r.length===0)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(r.length>1)throw new Error(`Found more than one (${r.length}) save handlers for URL '${e}'`);e=r[0]}if(e.save==null)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}addStructuredOutputNames(e){if(this.structuredOutputKeys){const t=e instanceof be?[e]:e,r={};return t.forEach((s,i)=>r[this.structuredOutputKeys[i]]=s),r}return e}predict(e,t){const r=this.execute(e,this.outputNodes);return this.addStructuredOutputNames(r)}async predictAsync(e,t){const r=await this.executeAsync(e,this.outputNodes);return this.addStructuredOutputNames(r)}normalizeInputs(e){var t;if(!(e instanceof be)&&!Array.isArray(e)){const i=(t=this.signature)===null||t===void 0?void 0:t.inputs;if(i!=null)for(const o in i){const a=i[o];a.resourceId!=null&&(e[o]=this.resourceIdToCapturedInput[a.resourceId])}return e}e=Array.isArray(e)?e:[e];const r=Object.keys(this.resourceIdToCapturedInput).length;if(e.length+r!==this.inputNodes.length)throw new Error(`Input tensor count mismatch, the graph model has ${this.inputNodes.length-r} non-resource placeholders, while there are ${e.length} input tensors provided.`);let s=0;return this.inputNodes.reduce((i,o)=>{var a,u,l;const c=(l=(u=(a=this.signature)===null||a===void 0?void 0:a.inputs)===null||u===void 0?void 0:u[o])===null||l===void 0?void 0:l.resourceId;return c!=null?i[o]=this.resourceIdToCapturedInput[c]:i[o]=e[s++],i},{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}executeInitializerGraph(){return this.initializer==null?[]:this.initializerSignature==null?this.initializer.execute({},[]):this.initializer.execute({},Object.keys(this.initializerSignature.outputs))}async executeInitializerGraphAsync(){return this.initializer==null?[]:this.initializerSignature==null?this.initializer.executeAsync({},[]):this.initializer.executeAsync({},Object.keys(this.initializerSignature.outputs))}setResourceIdToCapturedInput(e){if(this.resourceIdToCapturedInput={},this.initializerSignature){const t=this.initializerSignature.outputs,r=Object.keys(t);for(let s=0;s<r.length;s++){const i=r[s],o=t[i];this.resourceIdToCapturedInput[o.resourceId]=e[s]}}}execute(e,t){this.resourceIdToCapturedInput==null&&this.setResourceIdToCapturedInput(this.executeInitializerGraph()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const r=this.executor.execute(e,t);return r.length>1?r:r[0]}async executeAsync(e,t){this.resourceIdToCapturedInput==null&&this.setResourceIdToCapturedInput(await this.executeInitializerGraphAsync()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const r=await this.executor.executeAsync(e,t);return r.length>1?r:r[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce((t,r)=>(t[r]=[e[r]],t),{})}dispose(){this.executor.dispose(),this.initializer&&(this.initializer.dispose(),this.resourceIdToCapturedInput&&ut(this.resourceIdToCapturedInput)),this.resourceManager.dispose()}}async function Gd(n,e={},t=Vh){if(n==null)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");e==null&&(e={}),e.fromTFHub&&typeof n=="string"&&(n=pk(n));const r=new dk(n,e,t);return await r.load(),r}function pk(n){return n.endsWith("/")||(n=n+"/"),`${n}${hk}${ck}`}var fk={};(function(){var n;function e(f){var b=0;return function(){return b<f.length?{done:!1,value:f[b++]}:{done:!0}}}var t=typeof Object.defineProperties=="function"?Object.defineProperty:function(f,b,v){return f==Array.prototype||f==Object.prototype||(f[b]=v.value),f};function r(f){f=[typeof globalThis=="object"&&globalThis,f,typeof window=="object"&&window,typeof self=="object"&&self,typeof fn=="object"&&fn];for(var b=0;b<f.length;++b){var v=f[b];if(v&&v.Math==Math)return v}throw Error("Cannot find global object")}var s=r(this);function i(f,b){if(b)e:{var v=s;f=f.split(".");for(var T=0;T<f.length-1;T++){var _=f[T];if(!(_ in v))break e;v=v[_]}f=f[f.length-1],T=v[f],b=b(T),b!=T&&b!=null&&t(v,f,{configurable:!0,writable:!0,value:b})}}i("Symbol",function(f){function b(R){if(this instanceof b)throw new TypeError("Symbol is not a constructor");return new v(T+(R||"")+"_"+_++,R)}function v(R,k){this.h=R,t(this,"description",{configurable:!0,writable:!0,value:k})}if(f)return f;v.prototype.toString=function(){return this.h};var T="jscomp_symbol_"+(1e9*Math.random()>>>0)+"_",_=0;return b}),i("Symbol.iterator",function(f){if(f)return f;f=Symbol("Symbol.iterator");for(var b="Array Int8Array Uint8Array Uint8ClampedArray Int16Array Uint16Array Int32Array Uint32Array Float32Array Float64Array".split(" "),v=0;v<b.length;v++){var T=s[b[v]];typeof T=="function"&&typeof T.prototype[f]!="function"&&t(T.prototype,f,{configurable:!0,writable:!0,value:function(){return o(e(this))}})}return f});function o(f){return f={next:f},f[Symbol.iterator]=function(){return this},f}function a(f){var b=typeof Symbol<"u"&&Symbol.iterator&&f[Symbol.iterator];return b?b.call(f):{next:e(f)}}function u(f){if(!(f instanceof Array)){f=a(f);for(var b,v=[];!(b=f.next()).done;)v.push(b.value);f=v}return f}var l=typeof Object.assign=="function"?Object.assign:function(f,b){for(var v=1;v<arguments.length;v++){var T=arguments[v];if(T)for(var _ in T)Object.prototype.hasOwnProperty.call(T,_)&&(f[_]=T[_])}return f};i("Object.assign",function(f){return f||l});var c=typeof Object.create=="function"?Object.create:function(f){function b(){}return b.prototype=f,new b},h;if(typeof Object.setPrototypeOf=="function")h=Object.setPrototypeOf;else{var d;e:{var p={a:!0},m={};try{m.__proto__=p,d=m.a;break e}catch{}d=!1}h=d?function(f,b){if(f.__proto__=b,f.__proto__!==b)throw new TypeError(f+" is not extensible");return f}:null}var y=h;function g(f,b){if(f.prototype=c(b.prototype),f.prototype.constructor=f,y)y(f,b);else for(var v in b)if(v!="prototype")if(Object.defineProperties){var T=Object.getOwnPropertyDescriptor(b,v);T&&Object.defineProperty(f,v,T)}else f[v]=b[v];f.za=b.prototype}function x(){this.m=!1,this.j=null,this.i=void 0,this.h=1,this.v=this.s=0,this.l=null}function $(f){if(f.m)throw new TypeError("Generator is already running");f.m=!0}x.prototype.u=function(f){this.i=f};function C(f,b){f.l={ma:b,na:!0},f.h=f.s||f.v}x.prototype.return=function(f){this.l={return:f},this.h=this.v};function S(f,b,v){return f.h=v,{value:b}}function I(f){this.h=new x,this.i=f}function A(f,b){$(f.h);var v=f.h.j;return v?L(f,"return"in v?v.return:function(T){return{value:T,done:!0}},b,f.h.return):(f.h.return(b),P(f))}function L(f,b,v,T){try{var _=b.call(f.h.j,v);if(!(_ instanceof Object))throw new TypeError("Iterator result "+_+" is not an object");if(!_.done)return f.h.m=!1,_;var R=_.value}catch(k){return f.h.j=null,C(f.h,k),P(f)}return f.h.j=null,T.call(f.h,R),P(f)}function P(f){for(;f.h.h;)try{var b=f.i(f.h);if(b)return f.h.m=!1,{value:b.value,done:!1}}catch(v){f.h.i=void 0,C(f.h,v)}if(f.h.m=!1,f.h.l){if(b=f.h.l,f.h.l=null,b.na)throw b.ma;return{value:b.return,done:!0}}return{value:void 0,done:!0}}function M(f){this.next=function(b){return $(f.h),f.h.j?b=L(f,f.h.j.next,b,f.h.u):(f.h.u(b),b=P(f)),b},this.throw=function(b){return $(f.h),f.h.j?b=L(f,f.h.j.throw,b,f.h.u):(C(f.h,b),b=P(f)),b},this.return=function(b){return A(f,b)},this[Symbol.iterator]=function(){return this}}function U(f){function b(T){return f.next(T)}function v(T){return f.throw(T)}return new Promise(function(T,_){function R(k){k.done?T(k.value):Promise.resolve(k.value).then(b,v).then(R,_)}R(f.next())})}function V(f){return U(new M(new I(f)))}i("Promise",function(f){function b(k){this.i=0,this.j=void 0,this.h=[],this.u=!1;var F=this.l();try{k(F.resolve,F.reject)}catch(z){F.reject(z)}}function v(){this.h=null}function T(k){return k instanceof b?k:new b(function(F){F(k)})}if(f)return f;v.prototype.i=function(k){if(this.h==null){this.h=[];var F=this;this.j(function(){F.m()})}this.h.push(k)};var _=s.setTimeout;v.prototype.j=function(k){_(k,0)},v.prototype.m=function(){for(;this.h&&this.h.length;){var k=this.h;this.h=[];for(var F=0;F<k.length;++F){var z=k[F];k[F]=null;try{z()}catch(G){this.l(G)}}}this.h=null},v.prototype.l=function(k){this.j(function(){throw k})},b.prototype.l=function(){function k(G){return function(X){z||(z=!0,G.call(F,X))}}var F=this,z=!1;return{resolve:k(this.I),reject:k(this.m)}},b.prototype.I=function(k){if(k===this)this.m(new TypeError("A Promise cannot resolve to itself"));else if(k instanceof b)this.L(k);else{e:switch(typeof k){case"object":var F=k!=null;break e;case"function":F=!0;break e;default:F=!1}F?this.F(k):this.s(k)}},b.prototype.F=function(k){var F=void 0;try{F=k.then}catch(z){this.m(z);return}typeof F=="function"?this.M(F,k):this.s(k)},b.prototype.m=function(k){this.v(2,k)},b.prototype.s=function(k){this.v(1,k)},b.prototype.v=function(k,F){if(this.i!=0)throw Error("Cannot settle("+k+", "+F+"): Promise already settled in state"+this.i);this.i=k,this.j=F,this.i===2&&this.K(),this.H()},b.prototype.K=function(){var k=this;_(function(){if(k.D()){var F=s.console;typeof F<"u"&&F.error(k.j)}},1)},b.prototype.D=function(){if(this.u)return!1;var k=s.CustomEvent,F=s.Event,z=s.dispatchEvent;return typeof z>"u"?!0:(typeof k=="function"?k=new k("unhandledrejection",{cancelable:!0}):typeof F=="function"?k=new F("unhandledrejection",{cancelable:!0}):(k=s.document.createEvent("CustomEvent"),k.initCustomEvent("unhandledrejection",!1,!0,k)),k.promise=this,k.reason=this.j,z(k))},b.prototype.H=function(){if(this.h!=null){for(var k=0;k<this.h.length;++k)R.i(this.h[k]);this.h=null}};var R=new v;return b.prototype.L=function(k){var F=this.l();k.T(F.resolve,F.reject)},b.prototype.M=function(k,F){var z=this.l();try{k.call(F,z.resolve,z.reject)}catch(G){z.reject(G)}},b.prototype.then=function(k,F){function z(re,ee){return typeof re=="function"?function(ae){try{G(re(ae))}catch(he){X(he)}}:ee}var G,X,oe=new b(function(re,ee){G=re,X=ee});return this.T(z(k,G),z(F,X)),oe},b.prototype.catch=function(k){return this.then(void 0,k)},b.prototype.T=function(k,F){function z(){switch(G.i){case 1:k(G.j);break;case 2:F(G.j);break;default:throw Error("Unexpected state: "+G.i)}}var G=this;this.h==null?R.i(z):this.h.push(z),this.u=!0},b.resolve=T,b.reject=function(k){return new b(function(F,z){z(k)})},b.race=function(k){return new b(function(F,z){for(var G=a(k),X=G.next();!X.done;X=G.next())T(X.value).T(F,z)})},b.all=function(k){var F=a(k),z=F.next();return z.done?T([]):new b(function(G,X){function oe(ae){return function(he){re[ae]=he,ee--,ee==0&&G(re)}}var re=[],ee=0;do re.push(void 0),ee++,T(z.value).T(oe(re.length-1),X),z=F.next();while(!z.done)})},b}),i("Number.isNaN",function(f){return f||function(b){return typeof b=="number"&&isNaN(b)}});function j(f,b){f instanceof String&&(f+="");var v=0,T=!1,_={next:function(){if(!T&&v<f.length){var R=v++;return{value:b(R,f[R]),done:!1}}return T=!0,{done:!0,value:void 0}}};return _[Symbol.iterator]=function(){return _},_}i("Array.prototype.keys",function(f){return f||function(){return j(this,function(b){return b})}}),i("Array.prototype.fill",function(f){return f||function(b,v,T){var _=this.length||0;for(0>v&&(v=Math.max(0,_+v)),(T==null||T>_)&&(T=_),T=Number(T),0>T&&(T=Math.max(0,_+T)),v=Number(v||0);v<T;v++)this[v]=b;return this}});function K(f){return f||Array.prototype.fill}i("Int8Array.prototype.fill",K),i("Uint8Array.prototype.fill",K),i("Uint8ClampedArray.prototype.fill",K),i("Int16Array.prototype.fill",K),i("Uint16Array.prototype.fill",K),i("Int32Array.prototype.fill",K),i("Uint32Array.prototype.fill",K),i("Float32Array.prototype.fill",K),i("Float64Array.prototype.fill",K),i("Object.is",function(f){return f||function(b,v){return b===v?b!==0||1/b===1/v:b!==b&&v!==v}}),i("Array.prototype.includes",function(f){return f||function(b,v){var T=this;T instanceof String&&(T=String(T));var _=T.length;for(v=v||0,0>v&&(v=Math.max(v+_,0));v<_;v++){var R=T[v];if(R===b||Object.is(R,b))return!0}return!1}}),i("String.prototype.includes",function(f){return f||function(b,v){if(this==null)throw new TypeError("The 'this' value for String.prototype.includes must not be null or undefined");if(b instanceof RegExp)throw new TypeError("First argument to String.prototype.includes must not be a regular expression");return this.indexOf(b,v||0)!==-1}});var H=this||self;function ne(f,b){f=f.split(".");var v=H;f[0]in v||typeof v.execScript>"u"||v.execScript("var "+f[0]);for(var T;f.length&&(T=f.shift());)f.length||b===void 0?v[T]&&v[T]!==Object.prototype[T]?v=v[T]:v=v[T]={}:v[T]=b}var le=Array.prototype.map?function(f,b){return Array.prototype.map.call(f,b,void 0)}:function(f,b){for(var v=f.length,T=Array(v),_=typeof f=="string"?f.split(""):f,R=0;R<v;R++)R in _&&(T[R]=b.call(void 0,_[R],R,f));return T},pe={},de=null;function Ne(f){var b;b===void 0&&(b=0),pt(),b=pe[b];for(var v=Array(Math.floor(f.length/3)),T=b[64]||"",_=0,R=0;_<f.length-2;_+=3){var k=f[_],F=f[_+1],z=f[_+2],G=b[k>>2];k=b[(k&3)<<4|F>>4],F=b[(F&15)<<2|z>>6],z=b[z&63],v[R++]=G+k+F+z}switch(G=0,z=T,f.length-_){case 2:G=f[_+1],z=b[(G&15)<<2]||T;case 1:f=f[_],v[R]=b[f>>2]+b[(f&3)<<4|G>>4]+z+T}return v.join("")}function Ke(f){var b=f.length,v=3*b/4;v%3?v=Math.floor(v):"=.".indexOf(f[b-1])!=-1&&(v="=.".indexOf(f[b-2])!=-1?v-2:v-1);var T=new Uint8Array(v),_=0;return dt(f,function(R){T[_++]=R}),_!==v?T.subarray(0,_):T}function dt(f,b){function v(z){for(;T<f.length;){var G=f.charAt(T++),X=de[G];if(X!=null)return X;if(!/^[\s\xa0]*$/.test(G))throw Error("Unknown base64 encoding at char: "+G)}return z}pt();for(var T=0;;){var _=v(-1),R=v(0),k=v(64),F=v(64);if(F===64&&_===-1)break;b(_<<2|R>>4),k!=64&&(b(R<<4&240|k>>2),F!=64&&b(k<<6&192|F))}}function pt(){if(!de){de={};for(var f="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789".split(""),b=["+/=","+/","-_=","-_.","-_"],v=0;5>v;v++){var T=f.concat(b[v].split(""));pe[v]=T;for(var _=0;_<T.length;_++){var R=T[_];de[R]===void 0&&(de[R]=_)}}}}var et=typeof Uint8Array<"u",ft;function tt(){return ft||(ft=new Uint8Array(0))}var We={},Sn=typeof Uint8Array.prototype.slice=="function",Re=0,Be=0;function gs(f){var b=0>f;f=Math.abs(f);var v=f>>>0;f=Math.floor((f-v)/4294967296),b&&(v=a(tp(v,f)),b=v.next().value,f=v.next().value,v=b),Re=v>>>0,Be=f>>>0}var ia=typeof BigInt=="function";function tp(f,b){return b=~b,f?f=~f+1:b+=1,[f,b]}function np(f,b){this.i=f>>>0,this.h=b>>>0}function rp(f){if(!f)return sp||(sp=new np(0,0));if(!/^-?\d+$/.test(f))return null;if(16>f.length)gs(Number(f));else if(ia)f=BigInt(f),Re=Number(f&BigInt(4294967295))>>>0,Be=Number(f>>BigInt(32)&BigInt(4294967295));else{var b=+(f[0]==="-");Be=Re=0;for(var v=f.length,T=b,_=(v-b)%6+b;_<=v;T=_,_+=6)T=Number(f.slice(T,_)),Be*=1e6,Re=1e6*Re+T,4294967296<=Re&&(Be+=Re/4294967296|0,Re%=4294967296);b&&(b=a(tp(Re,Be)),f=b.next().value,b=b.next().value,Re=f,Be=b)}return new np(Re,Be)}var sp;function ip(f,b){return Error("Invalid wire type: "+f+" (at position "+b+")")}function oa(){return Error("Failed to read varint, encoding is invalid.")}function op(f,b){return Error("Tried to read past the end of the data "+b+" > "+f)}function rr(){throw Error("Invalid UTF8")}function ap(f,b){return b=String.fromCharCode.apply(null,b),f==null?b:f+b}var bi=void 0,aa,Sb=typeof TextDecoder<"u",up,Tb=typeof TextEncoder<"u",lp;function cp(f){if(f!==We)throw Error("illegal external caller")}function ys(f,b){if(cp(b),this.V=f,f!=null&&f.length===0)throw Error("ByteString should be constructed with non-empty values")}function ua(){return lp||(lp=new ys(null,We))}function hp(f){cp(We);var b=f.V;return b=b==null||et&&b!=null&&b instanceof Uint8Array?b:typeof b=="string"?Ke(b):null,b==null?b:f.V=b}function Cb(f){if(typeof f=="string")return{buffer:Ke(f),C:!1};if(Array.isArray(f))return{buffer:new Uint8Array(f),C:!1};if(f.constructor===Uint8Array)return{buffer:f,C:!1};if(f.constructor===ArrayBuffer)return{buffer:new Uint8Array(f),C:!1};if(f.constructor===ys)return{buffer:hp(f)||tt(),C:!0};if(f instanceof Uint8Array)return{buffer:new Uint8Array(f.buffer,f.byteOffset,f.byteLength),C:!1};throw Error("Type not convertible to a Uint8Array, expected a Uint8Array, an ArrayBuffer, a base64 encoded string, a ByteString or an Array of numbers")}function dp(f){this.i=null,this.m=!1,this.h=this.j=this.l=0,la(this,f)}function la(f,b){var v={};f.S=v.S===void 0?!1:v.S,b&&(b=Cb(b),f.i=b.buffer,f.m=b.C,f.l=0,f.j=f.i.length,f.h=f.l)}dp.prototype.reset=function(){this.h=this.l};function sr(f,b){if(f.h=b,b>f.j)throw op(f.j,b)}function xs(f){var b=f.i,v=f.h,T=b[v++],_=T&127;if(T&128&&(T=b[v++],_|=(T&127)<<7,T&128&&(T=b[v++],_|=(T&127)<<14,T&128&&(T=b[v++],_|=(T&127)<<21,T&128&&(T=b[v++],_|=T<<28,T&128&&b[v++]&128&&b[v++]&128&&b[v++]&128&&b[v++]&128&&b[v++]&128)))))throw oa();return sr(f,v),_}function pp(f,b){if(0>b)throw Error("Tried to read a negative byte length: "+b);var v=f.h,T=v+b;if(T>f.j)throw op(b,f.j-v);return f.h=T,v}var fp=[];function ca(){this.h=[]}ca.prototype.length=function(){return this.h.length},ca.prototype.end=function(){var f=this.h;return this.h=[],f};function mp(f,b,v){for(;0<v||127<b;)f.h.push(b&127|128),b=(b>>>7|v<<25)>>>0,v>>>=7;f.h.push(b)}function ir(f,b){for(;127<b;)f.h.push(b&127|128),b>>>=7;f.h.push(b)}function ha(f){if(fp.length){var b=fp.pop();la(b,f),f=b}else f=new dp(f);this.h=f,this.j=this.h.h,this.i=this.l=-1,this.setOptions(void 0)}ha.prototype.setOptions=function(f){f=f===void 0?{}:f,this.ca=f.ca===void 0?!1:f.ca},ha.prototype.reset=function(){this.h.reset(),this.j=this.h.h,this.i=this.l=-1};function gp(f){var b=f.h;if(b.h==b.j)return!1;f.j=f.h.h;var v=xs(f.h)>>>0;if(b=v>>>3,v&=7,!(0<=v&&5>=v))throw ip(v,f.j);if(1>b)throw Error("Invalid field number: "+b+" (at position "+f.j+")");return f.l=b,f.i=v,!0}function wi(f){switch(f.i){case 0:if(f.i!=0)wi(f);else e:{f=f.h;for(var b=f.h,v=b+10,T=f.i;b<v;)if((T[b++]&128)===0){sr(f,b);break e}throw oa()}break;case 1:f=f.h,sr(f,f.h+8);break;case 2:f.i!=2?wi(f):(b=xs(f.h)>>>0,f=f.h,sr(f,f.h+b));break;case 5:f=f.h,sr(f,f.h+4);break;case 3:b=f.l;do{if(!gp(f))throw Error("Unmatched start-group tag: stream EOF");if(f.i==4){if(f.l!=b)throw Error("Unmatched end-group tag");break}wi(f)}while(1);break;default:throw ip(f.i,f.j)}}var vi=[];function Eb(){this.j=[],this.i=0,this.h=new ca}function Br(f,b){b.length!==0&&(f.j.push(b),f.i+=b.length)}function Nb(f,b){if(b=b.R){Br(f,f.h.end());for(var v=0;v<b.length;v++)Br(f,hp(b[v])||tt())}}var Tn=typeof Symbol=="function"&&typeof Symbol()=="symbol"?Symbol():void 0;function or(f,b){return Tn?f[Tn]|=b:f.A!==void 0?f.A|=b:(Object.defineProperties(f,{A:{value:b,configurable:!0,writable:!0,enumerable:!1}}),b)}function yp(f,b){Tn?f[Tn]&&(f[Tn]&=~b):f.A!==void 0&&(f.A&=~b)}function Le(f){var b;return Tn?b=f[Tn]:b=f.A,b==null?0:b}function ln(f,b){Tn?f[Tn]=b:f.A!==void 0?f.A=b:Object.defineProperties(f,{A:{value:b,configurable:!0,writable:!0,enumerable:!1}})}function da(f){return or(f,1),f}function Ib(f,b){ln(b,(f|0)&-51)}function pa(f,b){ln(b,(f|18)&-41)}var fa={};function $i(f){return f!==null&&typeof f=="object"&&!Array.isArray(f)&&f.constructor===Object}var bs,xp=[];ln(xp,23),bs=Object.freeze(xp);function ma(f){if(Le(f.o)&2)throw Error("Cannot mutate an immutable Message")}function ga(f){var b=f.length;(b=b?f[b-1]:void 0)&&$i(b)?b.g=1:(b={},f.push((b.g=1,b)))}var Si;function kb(f){switch(typeof f){case"number":return isFinite(f)?f:String(f);case"object":if(f)if(Array.isArray(f)){if((Le(f)&128)!==0)return f=Array.prototype.slice.call(f),ga(f),f}else{if(et&&f!=null&&f instanceof Uint8Array)return Ne(f);if(f instanceof ys){var b=f.V;return b==null?"":typeof b=="string"?b:f.V=Ne(b)}}}return f}function bp(f,b,v,T){if(f!=null){if(Array.isArray(f))f=ya(f,b,v,T!==void 0);else if($i(f)){var _={},R;for(R in f)_[R]=bp(f[R],b,v,T);f=_}else f=b(f,T);return f}}function ya(f,b,v,T){var _=Le(f);T=T?!!(_&16):void 0,f=Array.prototype.slice.call(f);for(var R=0;R<f.length;R++)f[R]=bp(f[R],b,v,T);return v(_,f),f}function _b(f){return f.ja===fa?f.toJSON():kb(f)}function Rb(f,b){f&128&&ga(b)}function wp(f){var b=f.i+f.G;return f.B||(f.B=f.o[b]={})}function Yt(f,b){return b===-1?null:b>=f.i?f.B?f.B[b]:void 0:f.o[b+f.G]}function cn(f,b,v,T){ma(f),ws(f,b,v,T)}function ws(f,b,v,T){f.j&&(f.j=void 0),b>=f.i||T?wp(f)[b]=v:(f.o[b+f.G]=v,(f=f.B)&&b in f&&delete f[b])}function xa(f,b,v,T){var _=Yt(f,b);Array.isArray(_)||(_=bs);var R=Le(_);if(R&1||da(_),T)R&2||or(_,2),v&1||Object.freeze(_);else{T=!(v&2);var k=R&2;v&1||!k?T&&R&16&&!k&&yp(_,16):(_=da(Array.prototype.slice.call(_)),ws(f,b,_))}return _}function ba(f,b){var v=Yt(f,b);if(v==null)return v;if(typeof v=="number"||v==="NaN"||v==="Infinity"||v==="-Infinity"){var T=Number(v);return T!==v&&ws(f,b,T),T}}function vp(f,b,v,T,_){f.h||(f.h={});var R=f.h[v],k=xa(f,v,3,_);if(!R){var F=k;R=[];var z=!!(Le(f.o)&16);k=!!(Le(F)&2);var G=F;!_&&k&&(F=Array.prototype.slice.call(F));for(var X=k,oe=0;oe<F.length;oe++){var re=F[oe],ee=b,ae=!1;if(ae=ae===void 0?!1:ae,re=Array.isArray(re)?new ee(re):ae?new ee:void 0,re!==void 0){ee=re.o;var he=ae=Le(ee);k&&(he|=2),z&&(he|=16),he!=ae&&ln(ee,he),ee=he,X=X||!!(2&ee),R.push(re)}}return f.h[v]=R,z=Le(F),b=z|33,b=X?b&-9:b|8,z!=b&&(X=F,Object.isFrozen(X)&&(X=Array.prototype.slice.call(X)),ln(X,b),F=X),G!==F&&ws(f,v,F),(_||T&&k)&&or(R,2),T&&Object.freeze(R),R}return k=R,_||(Object.isFrozen(k)?T||(R=Array.prototype.slice.call(R),f.h[v]=R):T&&Object.freeze(k)),R}function wa(f,b,v){var T=!!(Le(f.o)&2);if(b=vp(f,b,v,T,T),f=xa(f,v,3,T),!(T||Le(f)&8)){for(T=0;T<b.length;T++){if(v=b[T],Le(v.o)&2){var _=Ep(v,!1);_.j=v}else _=v;v!==_&&(b[T]=_,f[T]=_.o)}or(f,8)}return b}function hn(f,b,v){if(v!=null&&typeof v!="number")throw Error("Value of float field must be a number|null|undefined, found "+typeof v+": "+v);cn(f,b,v)}function $p(f,b,v,T,_){ma(f);var R=vp(f,v,b,!1,!1);return v=T!=null?T:new v,f=xa(f,b,2,!1),_!=null?(R.splice(_,0,v),f.splice(_,0,v.o)):(R.push(v),f.push(v.o)),v.C()&&yp(f,8),v}function vs(f,b){return f==null?b:f}function dn(f,b,v){return v=v===void 0?0:v,vs(ba(f,b),v)}function Sp(f,b,v){if(v=v===void 0?pa:v,f!=null){if(et&&f instanceof Uint8Array)return f.length?new ys(new Uint8Array(f),We):ua();if(Array.isArray(f)){var T=Le(f);return T&2?f:b&&!(T&32)&&(T&16||T===0)?(ln(f,T|2),f):(f=ya(f,Sp,v,!0),b=Le(f),b&4&&b&2&&Object.freeze(f),f)}return f.ja===fa?Cp(f):f}}function Tp(f,b,v,T,_,R,k){if(f=f.h&&f.h[v]){if(T=Le(f),T&2?T=f:(R=le(f,Cp),pa(T,R),Object.freeze(R),T=R),ma(b),k=T==null?bs:da([]),T!=null){for(R=!1,f=0;f<T.length;f++){var F=T[f];R=R||!!(Le(F.o)&2),k[f]=F.o}R=(R?0:8)|1,f=Le(k),(f&R)!==R&&(Object.isFrozen(k)&&(k=Array.prototype.slice.call(k)),ln(k,f|R)),b.h||(b.h={}),b.h[v]=T}else b.h&&(b.h[v]=void 0);ws(b,v,k,_)}else cn(b,v,Sp(T,R,k),_)}function Cp(f){return Le(f.o)&2||(f=Ep(f,!0),or(f.o,2)),f}function Ep(f,b){var v=f.o,T=[];or(T,16);var _=f.constructor.h;if(_&&T.push(_),_=f.B,_){T.length=v.length,T.fill(void 0,T.length,v.length);var R={};T[T.length-1]=R}(Le(v)&128)!==0&&ga(T),b=b||f.C()?pa:Ib;var k=f.constructor;Si=T,T=new k(T),Si=void 0,f.R&&(T.R=f.R.slice()),k=!!(Le(v)&16);for(var F=_?v.length-1:v.length,z=0;z<F;z++)Tp(f,T,z-f.G,v[z],!1,k,b);if(_)for(var G in _)v=_[G],F=+G,Number.isNaN(F)?R[F]=v:Tp(f,T,F,v,!0,k,b);return T}function mt(f,b,v){f==null&&(f=Si),Si=void 0;var T=this.constructor.i||0,_=0<T,R=this.constructor.h,k=!1;if(f==null){f=R?[R]:[];var F=!0;ln(f,48)}else{if(!Array.isArray(f)||R&&R!==f[0])throw Error();var z=or(f,0),G=z;if((F=(16&G)!==0)&&((k=(32&G)!==0)||(G|=32)),_){if(128&G)T=0;else if(0<f.length){var X=f[f.length-1];if($i(X)&&"g"in X){T=0,G|=128,delete X.g;var oe=!0,re;for(re in X){oe=!1;break}oe&&f.pop()}}}else if(128&G)throw Error();z!==G&&ln(f,G)}this.G=(R?0:-1)-T,this.h=void 0,this.o=f;e:{if(R=this.o.length,T=R-1,R&&(R=this.o[T],$i(R))){this.B=R,this.i=T-this.G;break e}b!==void 0&&-1<b?(this.i=Math.max(b,T+1-this.G),this.B=void 0):this.i=Number.MAX_VALUE}if(!_&&this.B&&"g"in this.B)throw Error('Unexpected "g" flag in sparse object of message that is not a group type.');if(v){b=F&&!k&&!0,_=this.i;var ee;for(F=0;F<v.length;F++)k=v[F],k<_?(k+=this.G,(T=f[k])?Np(T,b):f[k]=bs):(ee||(ee=wp(this)),(T=ee[k])?Np(T,b):ee[k]=bs)}}mt.prototype.toJSON=function(){return ya(this.o,_b,Rb)},mt.prototype.C=function(){return!!(Le(this.o)&2)};function Np(f,b){if(Array.isArray(f)){var v=Le(f),T=1;!b||v&2||(T|=16),(v&T)!==T&&ln(f,v|T)}}mt.prototype.ja=fa,mt.prototype.toString=function(){return this.o.toString()};function Ip(f,b,v){if(v){var T={},_;for(_ in v){var R=v[_],k=R.ra;k||(T.J=R.xa||R.oa.W,R.ia?(T.aa=Op(R.ia),k=function(F){return function(z,G,X){return F.J(z,G,X,F.aa)}}(T)):R.ka?(T.Z=Dp(R.da.P,R.ka),k=function(F){return function(z,G,X){return F.J(z,G,X,F.Z)}}(T)):k=T.J,R.ra=k),k(b,f,R.da),T={J:T.J,aa:T.aa,Z:T.Z}}}Nb(b,f)}var Ti=Symbol();function kp(f,b,v){return f[Ti]||(f[Ti]=function(T,_){return b(T,_,v)})}function _p(f){var b=f[Ti];if(!b){var v=$a(f);b=function(T,_){return Fp(T,_,v)},f[Ti]=b}return b}function Ab(f){var b=f.ia;if(b)return _p(b);if(b=f.wa)return kp(f.da.P,b,f.ka)}function Ob(f){var b=Ab(f),v=f.da,T=f.oa.U;return b?function(_,R){return T(_,R,v,b)}:function(_,R){return T(_,R,v)}}function Rp(f,b){var v=f[b];return typeof v=="function"&&v.length===0&&(v=v(),f[b]=v),Array.isArray(v)&&(Ss in v||$s in v||0<v.length&&typeof v[0]=="function")?v:void 0}function Ap(f,b,v,T,_,R){b.P=f[0];var k=1;if(f.length>k&&typeof f[k]!="number"){var F=f[k++];v(b,F)}for(;k<f.length;){v=f[k++];for(var z=k+1;z<f.length&&typeof f[z]!="number";)z++;switch(F=f[k++],z-=k,z){case 0:T(b,v,F);break;case 1:(z=Rp(f,k))?(k++,_(b,v,F,z)):T(b,v,F,f[k++]);break;case 2:z=k++,z=Rp(f,z),_(b,v,F,z,f[k++]);break;case 3:R(b,v,F,f[k++],f[k++],f[k++]);break;case 4:R(b,v,F,f[k++],f[k++],f[k++],f[k++]);break;default:throw Error("unexpected number of binary field arguments: "+z)}}return b}var Ci=Symbol();function Op(f){var b=f[Ci];if(!b){var v=va(f);b=function(T,_){return Pp(T,_,v)},f[Ci]=b}return b}function Dp(f,b){var v=f[Ci];return v||(v=function(T,_){return Ip(T,_,b)},f[Ci]=v),v}var $s=Symbol();function Db(f,b){f.push(b)}function Fb(f,b,v){f.push(b,v.W)}function Pb(f,b,v,T){var _=Op(T),R=va(T).P,k=v.W;f.push(b,function(F,z,G){return k(F,z,G,R,_)})}function Lb(f,b,v,T,_,R){var k=Dp(T,R),F=v.W;f.push(b,function(z,G,X){return F(z,G,X,T,k)})}function va(f){var b=f[$s];return b||(b=Ap(f,f[$s]=[],Db,Fb,Pb,Lb),Ss in f&&$s in f&&(f.length=0),b)}var Ss=Symbol();function Bb(f,b){f[0]=b}function Mb(f,b,v,T){var _=v.U;f[b]=T?function(R,k,F){return _(R,k,F,T)}:_}function Vb(f,b,v,T,_){var R=v.U,k=_p(T),F=$a(T).P;f[b]=function(z,G,X){return R(z,G,X,F,k,_)}}function Ub(f,b,v,T,_,R,k){var F=v.U,z=kp(T,_,R);f[b]=function(G,X,oe){return F(G,X,oe,T,z,k)}}function $a(f){var b=f[Ss];return b||(b=Ap(f,f[Ss]={},Bb,Mb,Vb,Ub),Ss in f&&$s in f&&(f.length=0),b)}function Fp(f,b,v){for(;gp(b)&&b.i!=4;){var T=b.l,_=v[T];if(!_){var R=v[0];R&&(R=R[T])&&(_=v[T]=Ob(R))}if(!_||!_(b,f,T)){_=b,T=f,R=_.j,wi(_);var k=_;if(!k.ca){if(_=k.h.h-R,k.h.h=R,k=k.h,_==0)_=ua();else{if(R=pp(k,_),k.S&&k.m)_=k.i.subarray(R,R+_);else{k=k.i;var F=R;_=R+_,_=F===_?tt():Sn?k.slice(F,_):new Uint8Array(k.subarray(F,_))}_=_.length==0?ua():new ys(_,We)}(R=T.R)?R.push(_):T.R=[_]}}}return f}function Sa(f,b){if(vi.length){var v=vi.pop();v.setOptions(void 0),la(v.h,f),f=v}else f=new ha(f);try{var T=$a(b);return Fp(new T.P,f,T)}finally{b=f.h,b.i=null,b.m=!1,b.l=0,b.j=0,b.h=0,b.S=!1,f.l=-1,f.i=-1,100>vi.length&&vi.push(f)}}function Pp(f,b,v){for(var T=v.length,_=T%2==1,R=_?1:0;R<T;R+=2)(0,v[R+1])(b,f,v[R]);Ip(f,b,_?v[0]:void 0)}function Ta(f,b){var v=new Eb;Pp(f,v,va(b)),Br(v,v.h.end()),f=new Uint8Array(v.i),b=v.j;for(var T=b.length,_=0,R=0;R<T;R++){var k=b[R];f.set(k,_),_+=k.length}return v.j=[f],f}function Ts(f,b){return{U:f,W:b}}var Qt=Ts(function(f,b,v){if(f.i!==5)return!1;f=f.h;var T=f.i,_=f.h,R=T[_],k=T[_+1],F=T[_+2];return T=T[_+3],sr(f,f.h+4),k=(R<<0|k<<8|F<<16|T<<24)>>>0,f=2*(k>>31)+1,R=k>>>23&255,k&=8388607,cn(b,v,R==255?k?NaN:1/0*f:R==0?f*Math.pow(2,-149)*k:f*Math.pow(2,R-150)*(k+Math.pow(2,23))),!0},function(f,b,v){if(b=ba(b,v),b!=null){ir(f.h,8*v+5),f=f.h;var T=+b;T===0?0<1/T?Re=Be=0:(Be=0,Re=2147483648):isNaN(T)?(Be=0,Re=2147483647):(T=(v=0>T?-2147483648:0)?-T:T,34028234663852886e22<T?(Be=0,Re=(v|2139095040)>>>0):11754943508222875e-54>T?(T=Math.round(T/Math.pow(2,-149)),Be=0,Re=(v|T)>>>0):(b=Math.floor(Math.log(T)/Math.LN2),T*=Math.pow(2,-b),T=Math.round(8388608*T),16777216<=T&&++b,Be=0,Re=(v|b+127<<23|T&8388607)>>>0)),v=Re,f.h.push(v>>>0&255),f.h.push(v>>>8&255),f.h.push(v>>>16&255),f.h.push(v>>>24&255)}}),zb=Ts(function(f,b,v){if(f.i!==0)return!1;var T=f.h,_=0,R=f=0,k=T.i,F=T.h;do{var z=k[F++];_|=(z&127)<<R,R+=7}while(32>R&&z&128);for(32<R&&(f|=(z&127)>>4),R=3;32>R&&z&128;R+=7)z=k[F++],f|=(z&127)<<R;if(sr(T,F),128>z)T=_>>>0,z=f>>>0,(f=z&2147483648)&&(T=~T+1>>>0,z=~z>>>0,T==0&&(z=z+1>>>0)),T=4294967296*z+(T>>>0);else throw oa();return cn(b,v,f?-T:T),!0},function(f,b,v){b=Yt(b,v),b!=null&&(typeof b=="string"&&rp(b),b!=null&&(ir(f.h,8*v),typeof b=="number"?(f=f.h,gs(b),mp(f,Re,Be)):(v=rp(b),mp(f.h,v.i,v.h))))}),Wb=Ts(function(f,b,v){return f.i!==0?!1:(cn(b,v,xs(f.h)),!0)},function(f,b,v){if(b=Yt(b,v),b!=null&&b!=null)if(ir(f.h,8*v),f=f.h,v=b,0<=v)ir(f,v);else{for(b=0;9>b;b++)f.h.push(v&127|128),v>>=7;f.h.push(1)}}),Lp=Ts(function(f,b,v){if(f.i!==2)return!1;var T=xs(f.h)>>>0;f=f.h;var _=pp(f,T);if(f=f.i,Sb){var R=f,k;(k=aa)||(k=aa=new TextDecoder("utf-8",{fatal:!0})),f=_+T,R=_===0&&f===R.length?R:R.subarray(_,f);try{var F=k.decode(R)}catch(oe){if(bi===void 0){try{k.decode(new Uint8Array([128]))}catch{}try{k.decode(new Uint8Array([97])),bi=!0}catch{bi=!1}}throw!bi&&(aa=void 0),oe}}else{F=_,T=F+T,_=[];for(var z=null,G,X;F<T;)G=f[F++],128>G?_.push(G):224>G?F>=T?rr():(X=f[F++],194>G||(X&192)!==128?(F--,rr()):_.push((G&31)<<6|X&63)):240>G?F>=T-1?rr():(X=f[F++],(X&192)!==128||G===224&&160>X||G===237&&160<=X||((R=f[F++])&192)!==128?(F--,rr()):_.push((G&15)<<12|(X&63)<<6|R&63)):244>=G?F>=T-2?rr():(X=f[F++],(X&192)!==128||(G<<28)+(X-144)>>30!==0||((R=f[F++])&192)!==128||((k=f[F++])&192)!==128?(F--,rr()):(G=(G&7)<<18|(X&63)<<12|(R&63)<<6|k&63,G-=65536,_.push((G>>10&1023)+55296,(G&1023)+56320))):rr(),8192<=_.length&&(z=ap(z,_),_.length=0);F=ap(z,_)}return cn(b,v,F),!0},function(f,b,v){if(b=Yt(b,v),b!=null){var T=!1;if(T=T===void 0?!1:T,Tb){if(T&&/(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])/.test(b))throw Error("Found an unpaired surrogate");b=(up||(up=new TextEncoder)).encode(b)}else{for(var _=0,R=new Uint8Array(3*b.length),k=0;k<b.length;k++){var F=b.charCodeAt(k);if(128>F)R[_++]=F;else{if(2048>F)R[_++]=F>>6|192;else{if(55296<=F&&57343>=F){if(56319>=F&&k<b.length){var z=b.charCodeAt(++k);if(56320<=z&&57343>=z){F=1024*(F-55296)+z-56320+65536,R[_++]=F>>18|240,R[_++]=F>>12&63|128,R[_++]=F>>6&63|128,R[_++]=F&63|128;continue}else k--}if(T)throw Error("Found an unpaired surrogate");F=65533}R[_++]=F>>12|224,R[_++]=F>>6&63|128}R[_++]=F&63|128}}b=_===R.length?R:R.subarray(0,_)}ir(f.h,8*v+2),ir(f.h,b.length),Br(f,f.h.end()),Br(f,b)}}),Bp=Ts(function(f,b,v,T,_){if(f.i!==2)return!1;b=$p(b,v,T),v=f.h.j,T=xs(f.h)>>>0;var R=f.h.h+T,k=R-v;if(0>=k&&(f.h.j=R,_(b,f,void 0,void 0,void 0),k=R-f.h.h),k)throw Error("Message parsing ended unexpectedly. Expected to read "+(T+" bytes, instead read "+(T-k)+" bytes, either the data ended unexpectedly or the message misreported its own length"));return f.h.h=R,f.h.j=v,!0},function(f,b,v,T,_){if(b=wa(b,T,v),b!=null)for(T=0;T<b.length;T++){var R=f;ir(R.h,8*v+2);var k=R.h.end();Br(R,k),k.push(R.i),R=k,_(b[T],f),k=f;var F=R.pop();for(F=k.i+k.h.length()-F;127<F;)R.push(F&127|128),F>>>=7,k.i++;R.push(F),k.i++}});function Cs(f){mt.call(this,f)}g(Cs,mt);var Mp=[Cs,1,Wb,2,Qt,3,Lp,4,Lp];function Ca(f){mt.call(this,f,-1,Gb)}g(Ca,mt),Ca.prototype.addClassification=function(f,b){return $p(this,1,Cs,f,b),this};var Gb=[1],Hb=[Ca,1,Bp,Mp];function Ei(f){mt.call(this,f)}g(Ei,mt);var Vp=[Ei,1,Qt,2,Qt,3,Qt,4,Qt,5,Qt];function Up(f){mt.call(this,f,-1,jb)}g(Up,mt);var jb=[1],qb=[Up,1,Bp,Vp];function Ea(f){mt.call(this,f)}g(Ea,mt);var zp=[Ea,1,Qt,2,Qt,3,Qt,4,Qt,5,Qt,6,zb];function Wp(f,b,v){if(v=f.createShader(v===0?f.VERTEX_SHADER:f.FRAGMENT_SHADER),f.shaderSource(v,b),f.compileShader(v),!f.getShaderParameter(v,f.COMPILE_STATUS))throw Error(`Could not compile WebGL shader.

`+f.getShaderInfoLog(v));return v}function Kb(f){return wa(f,Cs,1).map(function(b){return{index:vs(Yt(b,1),0),qa:dn(b,2),label:Yt(b,3)!=null?vs(Yt(b,3),""):void 0,displayName:Yt(b,4)!=null?vs(Yt(b,4),""):void 0}})}function Xb(f){return{x:dn(f,1),y:dn(f,2),z:dn(f,3),visibility:ba(f,4)!=null?dn(f,4):void 0}}function Na(f,b){this.i=f,this.h=b,this.m=0}function Gp(f,b,v){return Yb(f,b),typeof f.h.canvas.transferToImageBitmap=="function"?Promise.resolve(f.h.canvas.transferToImageBitmap()):v?Promise.resolve(f.h.canvas):typeof createImageBitmap=="function"?createImageBitmap(f.h.canvas):(f.j===void 0&&(f.j=document.createElement("canvas")),new Promise(function(T){f.j.height=f.h.canvas.height,f.j.width=f.h.canvas.width,f.j.getContext("2d",{}).drawImage(f.h.canvas,0,0,f.h.canvas.width,f.h.canvas.height),T(f.j)}))}function Yb(f,b){var v=f.h;if(f.s===void 0){var T=Wp(v,`
  attribute vec2 aVertex;
  attribute vec2 aTex;
  varying vec2 vTex;
  void main(void) {
    gl_Position = vec4(aVertex, 0.0, 1.0);
    vTex = aTex;
  }`,0),_=Wp(v,`
  precision mediump float;
  varying vec2 vTex;
  uniform sampler2D sampler0;
  void main(){
    gl_FragColor = texture2D(sampler0, vTex);
  }`,1),R=v.createProgram();if(v.attachShader(R,T),v.attachShader(R,_),v.linkProgram(R),!v.getProgramParameter(R,v.LINK_STATUS))throw Error(`Could not compile WebGL program.

`+v.getProgramInfoLog(R));T=f.s=R,v.useProgram(T),_=v.getUniformLocation(T,"sampler0"),f.l={O:v.getAttribLocation(T,"aVertex"),N:v.getAttribLocation(T,"aTex"),ya:_},f.v=v.createBuffer(),v.bindBuffer(v.ARRAY_BUFFER,f.v),v.enableVertexAttribArray(f.l.O),v.vertexAttribPointer(f.l.O,2,v.FLOAT,!1,0,0),v.bufferData(v.ARRAY_BUFFER,new Float32Array([-1,-1,-1,1,1,1,1,-1]),v.STATIC_DRAW),v.bindBuffer(v.ARRAY_BUFFER,null),f.u=v.createBuffer(),v.bindBuffer(v.ARRAY_BUFFER,f.u),v.enableVertexAttribArray(f.l.N),v.vertexAttribPointer(f.l.N,2,v.FLOAT,!1,0,0),v.bufferData(v.ARRAY_BUFFER,new Float32Array([0,1,0,0,1,0,1,1]),v.STATIC_DRAW),v.bindBuffer(v.ARRAY_BUFFER,null),v.uniform1i(_,0)}T=f.l,v.useProgram(f.s),v.canvas.width=b.width,v.canvas.height=b.height,v.viewport(0,0,b.width,b.height),v.activeTexture(v.TEXTURE0),f.i.bindTexture2d(b.glName),v.enableVertexAttribArray(T.O),v.bindBuffer(v.ARRAY_BUFFER,f.v),v.vertexAttribPointer(T.O,2,v.FLOAT,!1,0,0),v.enableVertexAttribArray(T.N),v.bindBuffer(v.ARRAY_BUFFER,f.u),v.vertexAttribPointer(T.N,2,v.FLOAT,!1,0,0),v.bindFramebuffer(v.DRAW_FRAMEBUFFER?v.DRAW_FRAMEBUFFER:v.FRAMEBUFFER,null),v.clearColor(0,0,0,0),v.clear(v.COLOR_BUFFER_BIT),v.colorMask(!0,!0,!0,!0),v.drawArrays(v.TRIANGLE_FAN,0,4),v.disableVertexAttribArray(T.O),v.disableVertexAttribArray(T.N),v.bindBuffer(v.ARRAY_BUFFER,null),f.i.bindTexture2d(0)}function Qb(f){this.h=f}var Zb=new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11]);function Jb(f,b){return b+f}function Hp(f,b){window[f]=b}function ew(f){var b=document.createElement("script");return b.setAttribute("src",f),b.setAttribute("crossorigin","anonymous"),new Promise(function(v){b.addEventListener("load",function(){v()},!1),b.addEventListener("error",function(){v()},!1),document.body.appendChild(b)})}function tw(){return V(function(f){switch(f.h){case 1:return f.s=2,S(f,WebAssembly.instantiate(Zb),4);case 4:f.h=3,f.s=0;break;case 2:return f.s=0,f.l=null,f.return(!1);case 3:return f.return(!0)}})}function Ia(f){if(this.h=f,this.listeners={},this.l={},this.L={},this.s={},this.v={},this.M=this.u=this.ga=!0,this.I=Promise.resolve(),this.fa="",this.D={},this.locateFile=f&&f.locateFile||Jb,typeof window=="object")var b=window.location.pathname.toString().substring(0,window.location.pathname.toString().lastIndexOf("/"))+"/";else if(typeof location<"u")b=location.pathname.toString().substring(0,location.pathname.toString().lastIndexOf("/"))+"/";else throw Error("solutions can only be loaded on a web page or in a web worker");if(this.ha=b,f.options){b=a(Object.keys(f.options));for(var v=b.next();!v.done;v=b.next()){v=v.value;var T=f.options[v].default;T!==void 0&&(this.l[v]=typeof T=="function"?T():T)}}}n=Ia.prototype,n.close=function(){return this.j&&this.j.delete(),Promise.resolve()};function nw(f){var b,v,T,_,R,k,F,z,G,X,oe;return V(function(re){switch(re.h){case 1:return f.ga?(b=f.h.files===void 0?[]:typeof f.h.files=="function"?f.h.files(f.l):f.h.files,S(re,tw(),2)):re.return();case 2:if(v=re.i,typeof window=="object")return Hp("createMediapipeSolutionsWasm",{locateFile:f.locateFile}),Hp("createMediapipeSolutionsPackedAssets",{locateFile:f.locateFile}),k=b.filter(function(ee){return ee.data!==void 0}),F=b.filter(function(ee){return ee.data===void 0}),z=Promise.all(k.map(function(ee){var ae=Ni(f,ee.url);if(ee.path!==void 0){var he=ee.path;ae=ae.then(function(Ae){return f.overrideFile(he,Ae),Promise.resolve(Ae)})}return ae})),G=Promise.all(F.map(function(ee){return ee.simd===void 0||ee.simd&&v||!ee.simd&&!v?ew(f.locateFile(ee.url,f.ha)):Promise.resolve()})).then(function(){var ee,ae,he;return V(function(Ae){if(Ae.h==1)return ee=window.createMediapipeSolutionsWasm,ae=window.createMediapipeSolutionsPackedAssets,he=f,S(Ae,ee(ae),2);he.i=Ae.i,Ae.h=0})}),X=function(){return V(function(ee){return f.h.graph&&f.h.graph.url?ee=S(ee,Ni(f,f.h.graph.url),0):(ee.h=0,ee=void 0),ee})}(),S(re,Promise.all([G,z,X]),7);if(typeof importScripts!="function")throw Error("solutions can only be loaded on a web page or in a web worker");return T=b.filter(function(ee){return ee.simd===void 0||ee.simd&&v||!ee.simd&&!v}).map(function(ee){return f.locateFile(ee.url,f.ha)}),importScripts.apply(null,u(T)),_=f,S(re,createMediapipeSolutionsWasm(Module),6);case 6:_.i=re.i,f.m=new OffscreenCanvas(1,1),f.i.canvas=f.m,R=f.i.GL.createContext(f.m,{antialias:!1,alpha:!1,va:typeof WebGL2RenderingContext<"u"?2:1}),f.i.GL.makeContextCurrent(R),re.h=4;break;case 7:if(f.m=document.createElement("canvas"),oe=f.m.getContext("webgl2",{}),!oe&&(oe=f.m.getContext("webgl",{}),!oe))return alert("Failed to create WebGL canvas context when passing video frame."),re.return();f.K=oe,f.i.canvas=f.m,f.i.createContext(f.m,!0,!0,{});case 4:f.j=new f.i.SolutionWasm,f.ga=!1,re.h=0}})}function rw(f){var b,v,T,_,R,k,F,z;return V(function(G){if(G.h==1){if(f.h.graph&&f.h.graph.url&&f.fa===f.h.graph.url)return G.return();if(f.u=!0,!f.h.graph||!f.h.graph.url){G.h=2;return}return f.fa=f.h.graph.url,S(G,Ni(f,f.h.graph.url),3)}for(G.h!=2&&(b=G.i,f.j.loadGraph(b)),v=a(Object.keys(f.D)),T=v.next();!T.done;T=v.next())_=T.value,f.j.overrideFile(_,f.D[_]);if(f.D={},f.h.listeners)for(R=a(f.h.listeners),k=R.next();!k.done;k=R.next())F=k.value,aw(f,F);z=f.l,f.l={},f.setOptions(z),G.h=0})}n.reset=function(){var f=this;return V(function(b){f.j&&(f.j.reset(),f.s={},f.v={}),b.h=0})},n.setOptions=function(f,b){var v=this;if(b=b||this.h.options){for(var T=[],_=[],R={},k=a(Object.keys(f)),F=k.next();!F.done;R={X:R.X,Y:R.Y},F=k.next())if(F=F.value,!(F in this.l&&this.l[F]===f[F])){this.l[F]=f[F];var z=b[F];z!==void 0&&(z.onChange&&(R.X=z.onChange,R.Y=f[F],T.push(function(G){return function(){var X;return V(function(oe){if(oe.h==1)return S(oe,G.X(G.Y),2);X=oe.i,X===!0&&(v.u=!0),oe.h=0})}}(R))),z.graphOptionXref&&(F=Object.assign({},{calculatorName:"",calculatorIndex:0},z.graphOptionXref,{valueNumber:z.type===1?f[F]:0,valueBoolean:z.type===0?f[F]:!1,valueString:z.type===2?f[F]:""}),_.push(F)))}(T.length!==0||_.length!==0)&&(this.u=!0,this.H=(this.H===void 0?[]:this.H).concat(_),this.F=(this.F===void 0?[]:this.F).concat(T))}};function sw(f){var b,v,T,_,R,k,F;return V(function(z){switch(z.h){case 1:if(!f.u)return z.return();if(!f.F){z.h=2;break}b=a(f.F),v=b.next();case 3:if(v.done){z.h=5;break}return T=v.value,S(z,T(),4);case 4:v=b.next(),z.h=3;break;case 5:f.F=void 0;case 2:if(f.H){for(_=new f.i.GraphOptionChangeRequestList,R=a(f.H),k=R.next();!k.done;k=R.next())F=k.value,_.push_back(F);f.j.changeOptions(_),_.delete(),f.H=void 0}f.u=!1,z.h=0}})}n.initialize=function(){var f=this;return V(function(b){return b.h==1?S(b,nw(f),2):b.h!=3?S(b,rw(f),3):S(b,sw(f),0)})};function Ni(f,b){var v,T;return V(function(_){return b in f.L?_.return(f.L[b]):(v=f.locateFile(b,""),T=fetch(v).then(function(R){return R.arrayBuffer()}),f.L[b]=T,_.return(T))})}n.overrideFile=function(f,b){this.j?this.j.overrideFile(f,b):this.D[f]=b},n.clearOverriddenFiles=function(){this.D={},this.j&&this.j.clearOverriddenFiles()},n.send=function(f,b){var v=this,T,_,R,k,F,z,G,X,oe;return V(function(re){switch(re.h){case 1:return v.h.inputs?(T=1e3*(b==null?performance.now():b),S(re,v.I,2)):re.return();case 2:return S(re,v.initialize(),3);case 3:for(_=new v.i.PacketDataList,R=a(Object.keys(f)),k=R.next();!k.done;k=R.next())if(F=k.value,z=v.h.inputs[F]){e:{var ee=f[F];switch(z.type){case"video":var ae=v.s[z.stream];if(ae||(ae=new Na(v.i,v.K),v.s[z.stream]=ae),ae.m===0&&(ae.m=ae.i.createTexture()),typeof HTMLVideoElement<"u"&&ee instanceof HTMLVideoElement)var he=ee.videoWidth,Ae=ee.videoHeight;else typeof HTMLImageElement<"u"&&ee instanceof HTMLImageElement?(he=ee.naturalWidth,Ae=ee.naturalHeight):(he=ee.width,Ae=ee.height);Ae={glName:ae.m,width:he,height:Ae},he=ae.h,he.canvas.width=Ae.width,he.canvas.height=Ae.height,he.activeTexture(he.TEXTURE0),ae.i.bindTexture2d(ae.m),he.texImage2D(he.TEXTURE_2D,0,he.RGBA,he.RGBA,he.UNSIGNED_BYTE,ee),ae.i.bindTexture2d(0),ae=Ae;break e;case"detections":for(ae=v.s[z.stream],ae||(ae=new Qb(v.i),v.s[z.stream]=ae),ae.data||(ae.data=new ae.h.DetectionListData),ae.data.reset(ee.length),Ae=0;Ae<ee.length;++Ae){he=ee[Ae];var Ie=ae.data,Xe=Ie.setBoundingBox,At=Ae,gt=he.la,ye=new Ea;if(hn(ye,1,gt.sa),hn(ye,2,gt.ta),hn(ye,3,gt.height),hn(ye,4,gt.width),hn(ye,5,gt.rotation),cn(ye,6,gt.pa),gt=Ta(ye,zp),Xe.call(Ie,At,gt),he.ea)for(Ie=0;Ie<he.ea.length;++Ie){ye=he.ea[Ie],Xe=ae.data,At=Xe.addNormalizedLandmark,gt=Ae,ye=Object.assign({},ye,{visibility:ye.visibility?ye.visibility:0});var Ye=new Ei;hn(Ye,1,ye.x),hn(Ye,2,ye.y),hn(Ye,3,ye.z),ye.visibility&&hn(Ye,4,ye.visibility),ye=Ta(Ye,Vp),At.call(Xe,gt,ye)}if(he.ba)for(Ie=0;Ie<he.ba.length;++Ie)Xe=ae.data,At=Xe.addClassification,gt=Ae,ye=he.ba[Ie],Ye=new Cs,hn(Ye,2,ye.qa),ye.index&&cn(Ye,1,ye.index),ye.label&&cn(Ye,3,ye.label),ye.displayName&&cn(Ye,4,ye.displayName),ye=Ta(Ye,Mp),At.call(Xe,gt,ye)}ae=ae.data;break e;default:ae={}}}switch(G=ae,X=z.stream,z.type){case"video":_.pushTexture2d(Object.assign({},G,{stream:X,timestamp:T}));break;case"detections":oe=G,oe.stream=X,oe.timestamp=T,_.pushDetectionList(oe);break;default:throw Error("Unknown input config type: '"+z.type+"'")}}return v.j.send(_),S(re,v.I,4);case 4:_.delete(),re.h=0}})};function iw(f,b,v){var T,_,R,k,F,z,G,X,oe,re,ee,ae,he,Ae;return V(function(Ie){switch(Ie.h){case 1:if(!v)return Ie.return(b);for(T={},_=0,R=a(Object.keys(v)),k=R.next();!k.done;k=R.next())F=k.value,z=v[F],typeof z!="string"&&z.type==="texture"&&b[z.stream]!==void 0&&++_;1<_&&(f.M=!1),G=a(Object.keys(v)),k=G.next();case 2:if(k.done){Ie.h=4;break}if(X=k.value,oe=v[X],typeof oe=="string")return he=T,Ae=X,S(Ie,ow(f,X,b[oe]),14);if(re=b[oe.stream],oe.type==="detection_list"){if(re){for(var Xe=re.getRectList(),At=re.getLandmarksList(),gt=re.getClassificationsList(),ye=[],Ye=0;Ye<Xe.size();++Ye){var Bn=Sa(Xe.get(Ye),zp),uw=dn(Bn,1),lw=dn(Bn,2),cw=dn(Bn,3),hw=dn(Bn,4),dw=dn(Bn,5,0),Ii=void 0;Ii=Ii===void 0?0:Ii,Bn={la:{sa:uw,ta:lw,height:cw,width:hw,rotation:dw,pa:vs(Yt(Bn,6),Ii)},ea:wa(Sa(At.get(Ye),qb),Ei,1).map(Xb),ba:Kb(Sa(gt.get(Ye),Hb))},ye.push(Bn)}Xe=ye}else Xe=[];T[X]=Xe,Ie.h=7;break}if(oe.type==="proto_list"){if(re){for(Xe=Array(re.size()),At=0;At<re.size();At++)Xe[At]=re.get(At);re.delete()}else Xe=[];T[X]=Xe,Ie.h=7;break}if(re===void 0){Ie.h=3;break}if(oe.type==="float_list"){T[X]=re,Ie.h=7;break}if(oe.type==="proto"){T[X]=re,Ie.h=7;break}if(oe.type!=="texture")throw Error("Unknown output config type: '"+oe.type+"'");return ee=f.v[X],ee||(ee=new Na(f.i,f.K),f.v[X]=ee),S(Ie,Gp(ee,re,f.M),13);case 13:ae=Ie.i,T[X]=ae;case 7:oe.transform&&T[X]&&(T[X]=oe.transform(T[X])),Ie.h=3;break;case 14:he[Ae]=Ie.i;case 3:k=G.next(),Ie.h=2;break;case 4:return Ie.return(T)}})}function ow(f,b,v){var T;return V(function(_){return typeof v=="number"||v instanceof Uint8Array||v instanceof f.i.Uint8BlobList?_.return(v):v instanceof f.i.Texture2dDataOut?(T=f.v[b],T||(T=new Na(f.i,f.K),f.v[b]=T),_.return(Gp(T,v,f.M))):_.return(void 0)})}function aw(f,b){for(var v=b.name||"$",T=[].concat(u(b.wants)),_=new f.i.StringList,R=a(b.wants),k=R.next();!k.done;k=R.next())_.push_back(k.value);R=f.i.PacketListener.implement({onResults:function(F){for(var z={},G=0;G<b.wants.length;++G)z[T[G]]=F.get(G);var X=f.listeners[v];X&&(f.I=iw(f,z,b.outs).then(function(oe){oe=X(oe);for(var re=0;re<b.wants.length;++re){var ee=z[T[re]];typeof ee=="object"&&ee.hasOwnProperty&&ee.hasOwnProperty("delete")&&ee.delete()}oe&&(f.I=oe)}))}}),f.j.attachMultiListener(_,R),_.delete()}n.onResults=function(f,b){this.listeners[b||"$"]=f},ne("Solution",Ia),ne("OptionType",{BOOL:0,NUMBER:1,ua:2,0:"BOOL",1:"NUMBER",2:"STRING"});function jp(f){switch(f===void 0&&(f=0),f){case 1:return"selfie_segmentation_landscape.tflite";default:return"selfie_segmentation.tflite"}}function qp(f){var b=this;f=f||{},this.h=new Ia({locateFile:f.locateFile,files:function(v){return[{simd:!0,url:"selfie_segmentation_solution_simd_wasm_bin.js"},{simd:!1,url:"selfie_segmentation_solution_wasm_bin.js"},{data:!0,url:jp(v.modelSelection)}]},graph:{url:"selfie_segmentation.binarypb"},listeners:[{wants:["segmentation_mask","image_transformed"],outs:{image:{type:"texture",stream:"image_transformed"},segmentationMask:{type:"texture",stream:"segmentation_mask"}}}],inputs:{image:{type:"video",stream:"input_frames_gpu"}},options:{useCpuInference:{type:0,graphOptionXref:{calculatorType:"InferenceCalculator",fieldName:"use_cpu_inference"},default:typeof window!="object"||window.navigator===void 0?!1:"iPad Simulator;iPhone Simulator;iPod Simulator;iPad;iPhone;iPod".split(";").includes(navigator.platform)||navigator.userAgent.includes("Mac")&&"ontouchend"in document},selfieMode:{type:0,graphOptionXref:{calculatorType:"GlScalerCalculator",calculatorIndex:1,fieldName:"flip_horizontal"}},modelSelection:{type:1,graphOptionXref:{calculatorType:"ConstantSidePacketCalculator",calculatorName:"ConstantSidePacketCalculatorModelSelection",fieldName:"int_value"},onChange:function(v){var T,_,R;return V(function(k){return k.h==1?(T=jp(v),_="third_party/mediapipe/modules/selfie_segmentation/"+T,S(k,Ni(b.h,T),2)):(R=k.i,b.h.overrideFile(_,R),k.return(!0))})}}}})}n=qp.prototype,n.close=function(){return this.h.close(),Promise.resolve()},n.onResults=function(f){this.h.onResults(f)},n.initialize=function(){var f=this;return V(function(b){return S(b,f.h.initialize(),0)})},n.reset=function(){this.h.reset()},n.send=function(f){var b=this;return V(function(v){return S(v,b.h.send(f),0)})},n.setOptions=function(f){this.h.setOptions(f)},ne("SelfieSegmentation",qp),ne("VERSION","0.1.1671057942")}).call(fn);/**
    * @license
    * Copyright 2022 Google LLC. All Rights Reserved.
    * Licensed under the Apache License, Version 2.0 (the "License");
    * you may not use this file except in compliance with the License.
    * You may obtain a copy of the License at
    *
    * http://www.apache.org/licenses/LICENSE-2.0
    *
    * Unless required by applicable law or agreed to in writing, software
    * distributed under the License is distributed on an "AS IS" BASIS,
    * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    * See the License for the specific language governing permissions and
    * limitations under the License.
    * =============================================================================
    */var Iu=function(n,e){return Iu=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,r){t.__proto__=r}||function(t,r){for(var s in r)r.hasOwnProperty(s)&&(t[s]=r[s])},Iu(n,e)};function h1(n,e){function t(){this.constructor=n}Iu(n,e),n.prototype=e===null?Object.create(e):(t.prototype=e.prototype,new t)}var nt=function(){return nt=Object.assign||function(n){for(var e,t=1,r=arguments.length;t<r;t++)for(var s in e=arguments[t])Object.prototype.hasOwnProperty.call(e,s)&&(n[s]=e[s]);return n},nt.apply(this,arguments)};function we(n,e,t,r){return new(t||(t=Promise))(function(s,i){function o(l){try{u(r.next(l))}catch(c){i(c)}}function a(l){try{u(r.throw(l))}catch(c){i(c)}}function u(l){var c;l.done?s(l.value):(c=l.value,c instanceof t?c:new t(function(h){h(c)})).then(o,a)}u((r=r.apply(n,e||[])).next())})}function ve(n,e){var t,r,s,i,o={label:0,sent:function(){if(1&s[0])throw s[1];return s[1]},trys:[],ops:[]};return i={next:a(0),throw:a(1),return:a(2)},typeof Symbol=="function"&&(i[Symbol.iterator]=function(){return this}),i;function a(u){return function(l){return function(c){if(t)throw new TypeError("Generator is already executing.");for(;o;)try{if(t=1,r&&(s=2&c[0]?r.return:c[0]?r.throw||((s=r.return)&&s.call(r),0):r.next)&&!(s=s.call(r,c[1])).done)return s;switch(r=0,s&&(c=[2&c[0],s.value]),c[0]){case 0:case 1:s=c;break;case 4:return o.label++,{value:c[1],done:!1};case 5:o.label++,r=c[1],c=[0];continue;case 7:c=o.ops.pop(),o.trys.pop();continue;default:if(s=o.trys,!((s=s.length>0&&s[s.length-1])||c[0]!==6&&c[0]!==2)){o=0;continue}if(c[0]===3&&(!s||c[1]>s[0]&&c[1]<s[3])){o.label=c[1];break}if(c[0]===6&&o.label<s[1]){o.label=s[1],s=c;break}if(s&&o.label<s[2]){o.label=s[2],o.ops.push(c);break}s[2]&&o.ops.pop(),o.trys.pop();continue}c=e.call(n,o)}catch(h){c=[6,h],r=0}finally{t=s=0}if(5&c[0])throw c[1];return{value:c[0]?c[1]:void 0,done:!0}}([u,l])}}}function mo(n){return n instanceof SVGAnimatedLength?n.baseVal.value:n}function Hd(n){return we(this,void 0,void 0,function(){var e,t;return ve(this,function(r){switch(r.label){case 0:return e=document.createElement("canvas"),n instanceof be?[4,Ro(n,e)]:[3,2];case 1:return r.sent(),[3,3];case 2:e.width=mo(n.width),e.height=mo(n.height),t=e.getContext("2d"),n instanceof ImageData?t.putImageData(n,0,0):t.drawImage(n,0,0),r.label=3;case 3:return[2,e]}})})}function d1(n){return we(this,void 0,void 0,function(){var e,t,r,s,i,o;return ve(this,function(a){switch(a.label){case 0:return n instanceof be?(e=n.shape.slice(0,2),t=e[0],r=e[1],s=ImageData.bind,[4,Ro(n)]):[3,2];case 1:return[2,new(s.apply(ImageData,[void 0,a.sent(),r,t]))];case 2:return i=document.createElement("canvas"),o=i.getContext("2d"),i.width=mo(n.width),i.height=mo(n.height),o.drawImage(n,0,0),[2,o.getImageData(0,0,i.width,i.height)]}})})}function p1(n){return we(this,void 0,void 0,function(){var e,t;return ve(this,function(r){switch(r.label){case 0:return n instanceof SVGImageElement||n instanceof OffscreenCanvas?[4,Hd(n)]:[3,2];case 1:return t=r.sent(),[3,3];case 2:t=n,r.label=3;case 3:return e=t,[2,Ao(e,4)]}})})}function Zo(n){if(n<0||n>=256)throw new Error("Mask value must be in range [0, 255] but got "+n);if(!Number.isInteger(n))throw new Error("Mask value must be an integer but got "+n)}function f1(n){var e=n.shape[2],t=Qh(n,2),r=W(t,[-1]);return Vs(r,e)}function Ri(n,e){return ie(function(){return xe(as(n,ue(e)),"int32")})}function mk(n,e){var t=e.shape,r=t[0],s=t[1],i=t[2];return ie(function(){var o=f1(e),a=wt(Xn(0,i,1,"int32"),1),u=xe(ge(o,a),"int32"),l=W(u,[r,s]),c=se(l,ue(1,"int32"));return ce(function(h,d){return Y(h,d)}(c,n),ue(1,"int32"))})}var m1=function(){function n(e,t){this.model=e,this.outputStride=t;var r=this.model.inputs[0].shape;N(r[1]===-1&&r[2]===-1,function(){return"Input shape ["+r[1]+", "+r[2]+"] must both be equal to or -1"})}return n.prototype.predict=function(e){var t=this;return ie(function(){var r=t.preprocessInput(xe(e,"float32")),s=wt(r,0),i=t.model.predict(s).map(function(a){return Ut(a,[0])}),o=t.nameOutputResults(i);return{heatmapScores:gn(o.heatmap),offsets:o.offsets,displacementFwd:o.displacementFwd,displacementBwd:o.displacementBwd,segmentation:o.segmentation,partHeatmaps:o.partHeatmaps,longOffsets:o.longOffsets,partOffsets:o.partOffsets}})},n.prototype.dispose=function(){this.model.dispose()},n}(),gk=function(n){function e(){return n!==null&&n.apply(this,arguments)||this}return h1(e,n),e.prototype.preprocessInput=function(t){return ie(function(){return ce(Se(t,127.5),1)})},e.prototype.nameOutputResults=function(t){return{offsets:t[0],segmentation:t[1],partHeatmaps:t[2],longOffsets:t[3],heatmap:t[4],displacementFwd:t[5],displacementBwd:t[6],partOffsets:t[7]}},e}(m1),Jo=["nose","leftEye","rightEye","leftEar","rightEar","leftShoulder","rightShoulder","leftElbow","rightElbow","leftWrist","rightWrist","leftHip","rightHip","leftKnee","rightKnee","leftAnkle","rightAnkle"],tn=Jo.length,go=Jo.reduce(function(n,e,t){return n[e]=t,n},{});[["leftHip","leftShoulder"],["leftElbow","leftShoulder"],["leftElbow","leftWrist"],["leftHip","leftKnee"],["leftKnee","leftAnkle"],["rightHip","rightShoulder"],["rightElbow","rightShoulder"],["rightElbow","rightWrist"],["rightHip","rightKnee"],["rightKnee","rightAnkle"],["leftShoulder","rightShoulder"],["leftHip","rightHip"]].map(function(n){var e=n[0],t=n[1];return[go[e],go[t]]});function jd(n,e,t){var r=n[0],s=n[1],i=e[0],o=e[1],a=t.top,u=t.bottom;return[o/(t.left+t.right+s),i/(a+u+r)]}function g1(n,e,t,r){return{y:r.get(n,e,t),x:r.get(n,e,t+tn)}}function y1(n,e,t){var r=g1(n.heatmapY,n.heatmapX,n.id,t),s=r.y,i=r.x;return{x:n.heatmapX*e+i,y:n.heatmapY*e+s}}function Tf(n,e,t){return n<e?e:n>t?t:n}function Cf(n,e){return{x:n.x+e.x,y:n.y+e.y}}function yk(n,e,t){t===void 0&&(t=.3);for(var r=0,s=0,i=0;i<n.length;i++)e.keypoints[i].score>t&&(s+=1,r+=Math.pow(n[i].x-e.keypoints[i].position.x,2)+Math.pow(n[i].y-e.keypoints[i].position.y,2));return s===0?r=1/0:r/=s,r}function xk(n,e,t,r,s,i,o){for(var a=o[0],u=o[1],l=t(n),c=l.y*r+l.x,h=s[tn*(2*c)+e],d=s[tn*(2*c+1)+e],p=n.y+h,m=n.x+d,y=0;y<i;y++){p=Math.min(p,a-1);var g=t({x:m=Math.min(m,u-1),y:p}),x=g.y*r+g.x;p+=h=s[tn*(2*x)+e],m+=d=s[tn*(2*x+1)+e]}return{x:m,y:p}}function x1(n,e,t,r,s,i,o,a,u,l){for(var c=s[0],h=s[1],d=i[0],p=i[1],m=a[0],y=a[1],g=[],x=function(P){return function(M,U,V,j){var K=U[0],H=U[1],ne=V[0],le=V[1],pe=Math.round(((K+M.y+1)*le-1)/j);return{x:Math.round(((H+M.x+1)*ne-1)/j),y:pe}}(P,[c,h],[d,p],u)},$=0;$<r;$++){var C=xk(n,$,x,o,e,l,[m,y]);g.push(C)}for(var S=-1,I=1/0,A=0;A<t.length;A++){var L=yk(g,t[A]);L<I&&(S=A,I=L)}return S}function b1(n,e){var t=n[0],r=n[1];return[Math.round((r-1)/e+1),Math.round((t-1)/e+1)]}function w1(n,e,t,r,s,i,o,a,u,l,c){for(var h=o[0],d=o[1],p=n.shape,m=p[0],y=p[1],g=e.shape.slice(0,2),x=g[0],$=g[1],C=W(e,[x,$,2,tn]),S=new Float32Array(c*tn*3).fill(0),I=0;I<t.length;I++)for(var A=I*tn*3,L=t[I],P=0;P<tn;P++){var M=L.keypoints[P],U=A+3*P;S[U]=M.score,S[U+1]=M.position.y,S[U+2]=M.position.x}var V=jd([r,s],[h,d],a),j=V[0],K=V[1],H=Gt(S,[c,tn,3]),ne=a.top,le=a.left,pe={variableNames:["segmentation","longOffsets","poses"],outputShape:[m,y],userCode:`
    int convertToPositionInOutput(int pos, int pad, float scale, int stride) {
      return round(((float(pos + pad) + 1.0) * scale - 1.0) / float(stride));
    }

    float convertToPositionInOutputFloat(
        int pos, int pad, float scale, int stride) {
      return ((float(pos + pad) + 1.0) * scale - 1.0) / float(stride);
    }

    float dist(float x1, float y1, float x2, float y2) {
      return pow(x1 - x2, 2.0) + pow(y1 - y2, 2.0);
    }

    float sampleLongOffsets(float h, float w, int d, int k) {
      float fh = fract(h);
      float fw = fract(w);
      int clH = int(ceil(h));
      int clW = int(ceil(w));
      int flH = int(floor(h));
      int flW = int(floor(w));
      float o11 = getLongOffsets(flH, flW, d, k);
      float o12 = getLongOffsets(flH, clW, d, k);
      float o21 = getLongOffsets(clH, flW, d, k);
      float o22 = getLongOffsets(clH, clW, d, k);
      float o1 = mix(o11, o12, fw);
      float o2 = mix(o21, o22, fw);
      return mix(o1, o2, fh);
    }

    int findNearestPose(int h, int w) {
      float prob = getSegmentation(h, w);
      if (prob < 1.0) {
        return -1;
      }

      // Done(Tyler): convert from output space h/w to strided space.
      float stridedH = convertToPositionInOutputFloat(
        h, `+ne+", "+K+", "+i+`);
      float stridedW = convertToPositionInOutputFloat(
        w, `+le+", "+j+", "+i+`);

      float minDist = 1000000.0;
      int iMin = -1;
      for (int i = 0; i < `+c+`; i++) {
        float curDistSum = 0.0;
        int numKpt = 0;
        for (int k = 0; k < `+tn+`; k++) {
          float dy = sampleLongOffsets(stridedH, stridedW, 0, k);
          float dx = sampleLongOffsets(stridedH, stridedW, 1, k);

          float y = float(h) + dy;
          float x = float(w) + dx;

          for (int s = 0; s < `+u+`; s++) {
            int yRounded = round(min(y, float(`+(r-1)+`)));
            int xRounded = round(min(x, float(`+(s-1)+`)));

            float yStrided = convertToPositionInOutputFloat(
              yRounded, `+ne+", "+K+", "+i+`);
            float xStrided = convertToPositionInOutputFloat(
              xRounded, `+le+", "+j+", "+i+`);

            float dy = sampleLongOffsets(yStrided, xStrided, 0, k);
            float dx = sampleLongOffsets(yStrided, xStrided, 1, k);

            y = y + dy;
            x = x + dx;
          }

          float poseScore = getPoses(i, k, 0);
          float poseY = getPoses(i, k, 1);
          float poseX = getPoses(i, k, 2);
          if (poseScore > `+l+`) {
            numKpt = numKpt + 1;
            curDistSum = curDistSum + dist(x, y, poseX, poseY);
          }
        }
        if (numKpt > 0 && curDistSum / float(numKpt) < minDist) {
          minDist = curDistSum / float(numKpt);
          iMin = i;
        }
      }
      return iMin;
    }

    void main() {
        ivec2 coords = getOutputCoords();
        int nearestPose = findNearestPose(coords[0], coords[1]);
        setOutput(float(nearestPose));
      }
  `};return Bg().compileAndRun(pe,[n,C,H])}function v1(){return Pg()==="webgl"}function bk(n,e,t,r,s,i,o,a,u,l,c,h){var d=o[0],p=o[1];return u===void 0&&(u=.2),l===void 0&&(l=8),c===void 0&&(c=.3),h===void 0&&(h=10),we(this,void 0,void 0,function(){var m,y,g,x,$;return ve(this,function(C){switch(C.label){case 0:return m=t.filter(function(S){return S.score>=u}),v1()?(g=ie(function(){var S=w1(n,e,m,r,s,i,[d,p],a,l,c,h),I=Zt().makeTensorFromDataId(S.dataId,S.shape,S.dtype);return m.map(function(A,L){return function(P,M){return ie(function(){return xe(ui(P,ue(M)),"int32")})}(I,L)})}),[4,Promise.all(g.map(function(S){return S.data()}))]):[3,2];case 1:return y=C.sent(),g.forEach(function(S){return S.dispose()}),[3,5];case 2:return[4,n.data()];case 3:return x=C.sent(),[4,e.data()];case 4:$=C.sent(),y=function(S,I,A,L,P,M,U,V,j,K){var H=U[0],ne=U[1];K===void 0&&(K=5);for(var le=A.map(function(Sn){return new Uint8Array(L*P).fill(0)}),pe=V.top,de=V.left,Ne=jd([L,P],[H,ne],V),Ke=Ne[0],dt=Ne[1],pt=b1([H,ne],M)[0],et=0;et<L;et+=1)for(var ft=0;ft<P;ft+=1){var tt=et*P+ft;if(S[tt]===1){var We=x1({x:ft,y:et},I,A,K,[pe,de],[Ke,dt],pt,[L,P],M,j);We>=0&&(le[We][tt]=1)}}return le}(x,$,m,r,s,i,[d,p],a,l),C.label=5;case 5:return[2,y.map(function(S,I){return{data:S,pose:m[I],width:s,height:r}})]}})})}function wk(n,e,t,r,s,i,o,a,u,l,c,h,d){var p=a[0],m=a[1];return l===void 0&&(l=.2),c===void 0&&(c=8),h===void 0&&(h=.3),d===void 0&&(d=10),we(this,void 0,void 0,function(){var y,g,x,$,C,S;return ve(this,function(I){switch(I.label){case 0:return y=r.filter(function(A){return A.score>=l}),v1()?(x=ie(function(){var A=w1(n,e,y,s,i,o,[p,m],u,c,h,d),L=Zt().makeTensorFromDataId(A.dataId,A.shape,A.dtype);return y.map(function(P,M){return function(U,V,j){return ie(function(){return ce(Y(xe(ui(U,ue(j)),"int32"),se(V,1)),1)})}(L,t,M)})}),[4,Promise.all(x.map(function(A){return A.data()}))]):[3,2];case 1:return g=I.sent(),x.forEach(function(A){return A.dispose()}),[3,6];case 2:return[4,n.data()];case 3:return $=I.sent(),[4,e.data()];case 4:return C=I.sent(),[4,t.data()];case 5:S=I.sent(),g=function(A,L,P,M,U,V,j,K,H,ne,le){var pe=K[0],de=K[1];le===void 0&&(le=5);for(var Ne=M.map(function(gs){return new Int32Array(U*V).fill(-1)}),Ke=H.top,dt=H.left,pt=jd([U,V],[pe,de],H),et=pt[0],ft=pt[1],tt=b1([pe,de],j)[0],We=0;We<U;We+=1)for(var Sn=0;Sn<V;Sn+=1){var Re=We*V+Sn;if(A[Re]===1){var Be=x1({x:Sn,y:We},L,M,le,[Ke,dt],[et,ft],tt,[U,V],j,ne);Be>=0&&(Ne[Be][Re]=P[Re])}}return Ne}($,C,S,y,s,i,o,[p,m],u,c),I.label=6;case 6:return[2,g.map(function(A,L){return{pose:y[L],data:A,height:s,width:i}})]}})})}function Pa(n){return Math.floor(n/2)}var vk=function(){function n(e,t){this.priorityQueue=new Array(e),this.numberOfElements=-1,this.getElementValue=t}return n.prototype.enqueue=function(e){this.priorityQueue[++this.numberOfElements]=e,this.swim(this.numberOfElements)},n.prototype.dequeue=function(){var e=this.priorityQueue[0];return this.exchange(0,this.numberOfElements--),this.sink(0),this.priorityQueue[this.numberOfElements+1]=null,e},n.prototype.empty=function(){return this.numberOfElements===-1},n.prototype.size=function(){return this.numberOfElements+1},n.prototype.all=function(){return this.priorityQueue.slice(0,this.numberOfElements+1)},n.prototype.max=function(){return this.priorityQueue[0]},n.prototype.swim=function(e){for(;e>0&&this.less(Pa(e),e);)this.exchange(e,Pa(e)),e=Pa(e)},n.prototype.sink=function(e){for(;2*e<=this.numberOfElements;){var t=2*e;if(t<this.numberOfElements&&this.less(t,t+1)&&t++,!this.less(e,t))break;this.exchange(e,t),e=t}},n.prototype.getValueAt=function(e){return this.getElementValue(this.priorityQueue[e])},n.prototype.less=function(e,t){return this.getValueAt(e)<this.getValueAt(t)},n.prototype.exchange=function(e,t){var r=this.priorityQueue[e];this.priorityQueue[e]=this.priorityQueue[t],this.priorityQueue[t]=r},n}();function $k(n,e,t,r,s,i){for(var o=i.shape,a=o[0],u=o[1],l=!0,c=Math.max(t-s,0),h=Math.min(t+s+1,a),d=c;d<h;++d){for(var p=Math.max(r-s,0),m=Math.min(r+s+1,u),y=p;y<m;++y)if(i.get(d,y,n)>e){l=!1;break}if(!l)break}return l}var $1=[["nose","leftEye"],["leftEye","leftEar"],["nose","rightEye"],["rightEye","rightEar"],["nose","leftShoulder"],["leftShoulder","leftElbow"],["leftElbow","leftWrist"],["leftShoulder","leftHip"],["leftHip","leftKnee"],["leftKnee","leftAnkle"],["nose","rightShoulder"],["rightShoulder","rightElbow"],["rightElbow","rightWrist"],["rightShoulder","rightHip"],["rightHip","rightKnee"],["rightKnee","rightAnkle"]].map(function(n){var e=n[0],t=n[1];return[go[e],go[t]]}),La=$1.map(function(n){return n[1]}),Ef=$1.map(function(n){return n[0]});function Ba(n,e,t,r){return{y:Tf(Math.round(n.y/e),0,t-1),x:Tf(Math.round(n.x/e),0,r-1)}}function Nf(n,e,t,r,s,i,o,a){a===void 0&&(a=2);for(var u=r.shape,l=u[0],c=u[1],h=function($,C,S){var I=S.shape[2]/2;return{y:S.get(C.y,C.x,$),x:S.get(C.y,C.x,I+$)}}(n,Ba(e.position,i,l,c),o),d=Cf(e.position,h),p=0;p<a;p++){var m=Ba(d,i,l,c),y=g1(m.y,m.x,t,s);d=Cf({x:m.x*i,y:m.y*i},{x:y.x,y:y.y})}var g=Ba(d,i,l,c),x=r.get(g.y,g.x,t);return{position:d,part:Jo[t],score:x}}function Sk(n,e,t,r,s,i){var o=e.shape[2],a=La.length,u=new Array(o),l=n.part,c=n.score,h=y1(l,r,t);u[l.id]={score:c,part:Jo[l.id],position:h};for(var d=a-1;d>=0;--d){var p=La[d],m=Ef[d];u[p]&&!u[m]&&(u[m]=Nf(d,u[p],m,e,t,r,i))}for(d=0;d<a;++d)p=Ef[d],m=La[d],u[p]&&!u[m]&&(u[m]=Nf(d,u[p],m,e,t,r,s));return u}function S1(n,e,t,r){var s=t.x,i=t.y;return n.some(function(o){var a,u,l,c,h,d,p=o.keypoints[r].position;return a=i,u=s,l=p.y,c=p.x,(h=l-a)*h+(d=c-u)*d<=e})}function Tk(n,e,t){var r=t.reduce(function(s,i,o){var a=i.position,u=i.score;return S1(n,e,a,o)||(s+=u),s},0);return r/t.length}function Ai(n,e,t,r,s,i,o,a){o===void 0&&(o=.5),a===void 0&&(a=20);for(var u=[],l=function(m,y,g){for(var x=g.shape,$=x[0],C=x[1],S=x[2],I=new vk($*C*S,function(U){return U.score}),A=0;A<$;++A)for(var L=0;L<C;++L)for(var P=0;P<S;++P){var M=g.get(A,L,P);M<m||$k(P,M,A,L,y,g)&&I.enqueue({score:M,part:{heatmapY:A,heatmapX:L,id:P}})}return I}(o,1,n),c=a*a;u.length<i&&!l.empty();){var h=l.dequeue();if(!S1(u,c,y1(h.part,s,e),h.part.id)){var d=Sk(h,n,e,s,t,r),p=Tk(u,c,d);u.push({keypoints:d,score:p})}}return u}var Is,Ck=[-123.15,-115.9,-103.06],Ek=function(n){function e(){return n!==null&&n.apply(this,arguments)||this}return h1(e,n),e.prototype.preprocessInput=function(t){return se(t,Ck)},e.prototype.nameOutputResults=function(t){var r=t[0],s=t[1],i=t[2],o=t[3],a=t[4],u=t[5];return{offsets:a,segmentation:t[6],partHeatmaps:u,longOffsets:o,heatmap:i,displacementFwd:s,displacementBwd:r,partOffsets:t[7]}},e}(m1),If="https://storage.googleapis.com/tfjs-models/savedmodel/bodypix/resnet50/",kf="https://storage.googleapis.com/tfjs-models/savedmodel/bodypix/mobilenet/";function Rs(n){if(typeof HTMLCanvasElement<"u"&&n instanceof HTMLCanvasElement||typeof OffscreenCanvas<"u"&&n instanceof OffscreenCanvas||typeof HTMLImageElement<"u"&&n instanceof HTMLImageElement)return function(e){if("offsetHeight"in e&&e.offsetHeight!==0&&"offsetWidth"in e&&e.offsetWidth!==0)return[e.offsetHeight,e.offsetWidth];if(e.height!=null&&e.width!=null)return[e.height,e.width];throw new Error("HTMLImageElement must have height and width attributes set.")}(n);if(typeof ImageData<"u"&&n instanceof ImageData)return[n.height,n.width];if(typeof HTMLVideoElement<"u"&&n instanceof HTMLVideoElement)return function(e){return e.hasAttribute("height")&&e.hasAttribute("width")?[e.height,e.width]:[e.videoHeight,e.videoWidth]}(n);if(n instanceof be)return[n.shape[0],n.shape[1]];throw new Error("error: Unknown input type: "+n+".")}function _f(n,e){return function(t,r){return(t-1)%r==0}(n,e)?n:Math.floor(n/e)*e+1}var As={low:"low",medium:"medium",high:"high",full:"full"},Nk=((Is={})[As.low]=.25,Is[As.medium]=.5,Is[As.high]=.75,Is[As.full]=1,Is);function Oi(n,e,t){var r=t[0],s=t[1],i=function(o){if(typeof o=="string"){var a=Nk[o];return N(typeof a=="number",function(){return"string value of inputResolution must be one of "+Object.values(As).join(",")+" but was "+o+"."}),a}return N(typeof o=="number"&&o<=2&&o>=.1,function(){return"inputResolution must be a string or number between 0.1 and 2, but was "+o}),o}(n);return[_f(r*i,e),_f(s*i,e)]}function Mr(n,e,t,r,s){var i=e[0],o=e[1],a=t[0],u=t[1],l=r[0],c=l[0],h=l[1],d=r[1],p=d[0],m=d[1];return s===void 0&&(s=!1),ie(function(){var y=Er.resizeBilinear(n,[a,u],!0);return s&&(y=gn(y)),function(g,x,$){var C=x[0],S=x[1],I=$[0],A=I[0],L=I[1],P=$[1],M=P[0],U=P[1];return ie(function(){var V=wt(g);return Ut(Er.cropAndResize(V,[[A/(C+A+L-1),M/(S+M+U-1),(A+C-1)/(C+A+L-1),(M+S-1)/(S+M+U-1)]],[0],[C,S]),[0])})}(y,[i,o],[[c,h],[p,m]])})}function Di(n,e){var t=e[0],r=e[1],s=Rs(n),i=s[0],o=s[1],a=r/t,u=[0,0,0,0],l=u[0],c=u[1],h=u[2],d=u[3];o/i<a?(l=0,c=0,h=Math.round(.5*(a*i-o)),d=Math.round(.5*(a*i-o))):(l=Math.round(.5*(1/a*o-i)),c=Math.round(.5*(1/a*o-i)),h=0,d=0);var p=ie(function(){var m=function(y){return y instanceof be?y:Ao(y)}(n);return m=wd(m,[[l,c],[h,d],[0,0]]),Er.resizeBilinear(m,[t,r])});return{resized:p,padding:{top:l,left:h,right:d,bottom:c}}}function Fi(n){return we(this,void 0,void 0,function(){return ve(this,function(e){return[2,Promise.all(n.map(function(t){return t.buffer()}))]})})}function Pi(n,e,t,r,s){var i=e[0],o=e[1],a=t[0],u=t[1],l=function(c,h,d,p,m){return p===void 0&&(p=0),m===void 0&&(m=0),d===1&&h===1&&p===0&&m===0?c:c.map(function(y){return function(g,x,$,C,S){return C===void 0&&(C=0),S===void 0&&(S=0),{score:g.score,keypoints:g.keypoints.map(function(I){var A=I.score,L=I.part,P=I.position;return{score:A,part:L,position:{x:P.x*$+S,y:P.y*x+C}}})}}(y,h,d,p,m)})}(n,(i+r.top+r.bottom)/a,(o+r.left+r.right)/u,-r.top,-r.left);return s?function(c,h){return h<=0?c:c.map(function(d){return function(p,m){return{score:p.score,keypoints:p.keypoints.map(function(y){var g=y.score,x=y.part,$=y.position;return{score:g,part:x,position:{x:m-1-$.x,y:$.y}}})}}(d,h)})}(l,o):l}var Rf={architecture:"MobileNetV1",outputStride:16,quantBytes:4,multiplier:.75},Af=["MobileNetV1","ResNet50"],Of={MobileNetV1:[8,16,32],ResNet50:[32,16]},Df={MobileNetV1:[.5,.75,1],ResNet50:[1]},Ff=[1,2,4],Li={flipHorizontal:!1,internalResolution:"medium",segmentationThreshold:.7,maxDetections:10,scoreThreshold:.4,nmsRadius:20},Bi={flipHorizontal:!1,internalResolution:"medium",segmentationThreshold:.7,maxDetections:10,scoreThreshold:.4,nmsRadius:20,minKeypointScore:.3,refineSteps:10};function Pf(n){var e=n.segmentationThreshold,t=n.maxDetections,r=n.scoreThreshold,s=n.nmsRadius;if(e<0||e>1)throw new Error("segmentationThreshold "+e+". Should be in range [0.0, 1.0]");if(t<=0)throw new Error("Invalid maxDetections "+t+". Should be > 0");if(r<0||r>1)throw new Error("Invalid scoreThreshold "+r+". Should be in range [0.0, 1.0]");if(s<=0)throw new Error("Invalid nmsRadius "+s+".")}function Lf(n){var e=n.segmentationThreshold,t=n.maxDetections,r=n.scoreThreshold,s=n.nmsRadius,i=n.minKeypointScore,o=n.refineSteps;if(e<0||e>1)throw new Error("segmentationThreshold "+e+". Should be in range [0.0, 1.0]");if(t<=0)throw new Error("Invalid maxDetections "+t+". Should be > 0");if(r<0||r>1)throw new Error("Invalid scoreThreshold "+r+". Should be in range [0.0, 1.0]");if(s<=0)throw new Error("Invalid nmsRadius "+s+".");if(i<0||i>1)throw new Error("Invalid minKeypointScore "+i+".Should be in range [0.0, 1.0]");if(o<=0||o>20)throw new Error("Invalid refineSteps "+o+".Should be in range [1, 20]")}var T1=function(){function n(e){this.baseModel=e}return n.prototype.predictForPersonSegmentation=function(e){var t=this.baseModel.predict(e);return{segmentLogits:t.segmentation,heatmapScores:t.heatmapScores,offsets:t.offsets,displacementFwd:t.displacementFwd,displacementBwd:t.displacementBwd}},n.prototype.predictForPersonSegmentationAndPart=function(e){var t=this.baseModel.predict(e);return{segmentLogits:t.segmentation,partHeatmapLogits:t.partHeatmaps,heatmapScores:t.heatmapScores,offsets:t.offsets,displacementFwd:t.displacementFwd,displacementBwd:t.displacementBwd}},n.prototype.predictForMultiPersonInstanceSegmentationAndPart=function(e){var t=this.baseModel.predict(e);return{segmentLogits:t.segmentation,longOffsets:t.longOffsets,heatmapScores:t.heatmapScores,offsets:t.offsets,displacementFwd:t.displacementFwd,displacementBwd:t.displacementBwd,partHeatmaps:t.partHeatmaps}},n.prototype.segmentPersonActivation=function(e,t,r){var s=this;r===void 0&&(r=.5);var i=Rs(e),o=i[0],a=i[1],u=Oi(t,this.baseModel.outputStride,[o,a]),l=Di(e,u),c=l.resized,h=l.padding,d=ie(function(){var $=s.predictForPersonSegmentation(c),C=$.segmentLogits,S=$.heatmapScores,I=$.offsets,A=$.displacementFwd,L=$.displacementBwd,P=c.shape,M=P[0],U=P[1],V=Mr(C,[o,a],[M,U],[[h.top,h.bottom],[h.left,h.right]],!0);return{segmentation:Ri(Ut(V),r),heatmapScores:S,offsets:I,displacementFwd:A,displacementBwd:L}}),p=d.segmentation,m=d.heatmapScores,y=d.offsets,g=d.displacementFwd,x=d.displacementBwd;return c.dispose(),{segmentation:p,heatmapScores:m,offsets:y,displacementFwd:g,displacementBwd:x,padding:h,internalResolutionHeightAndWidth:u}},n.prototype.segmentPerson=function(e,t){return t===void 0&&(t=Li),we(this,void 0,void 0,function(){var r,s,i,o,a,u,l,c,h,d,p,m,y,g,x,$,C,S;return ve(this,function(I){switch(I.label){case 0:return Pf(t=nt(nt({},Li),t)),r=this.segmentPersonActivation(e,t.internalResolution,t.segmentationThreshold),s=r.segmentation,i=r.heatmapScores,o=r.offsets,a=r.displacementFwd,u=r.displacementBwd,l=r.padding,c=r.internalResolutionHeightAndWidth,h=s.shape,d=h[0],p=h[1],[4,s.data()];case 1:return m=I.sent(),s.dispose(),[4,Fi([i,o,a,u])];case 2:return y=I.sent(),g=y[0],x=y[1],$=y[2],C=y[3],S=Pi(S=Ai(g,x,$,C,this.baseModel.outputStride,t.maxDetections,t.scoreThreshold,t.nmsRadius),[d,p],c,l,!1),i.dispose(),o.dispose(),a.dispose(),u.dispose(),[2,{height:d,width:p,data:m,allPoses:S}]}})})},n.prototype.segmentMultiPerson=function(e,t){return t===void 0&&(t=Bi),we(this,void 0,void 0,function(){var r,s,i,o,a,u,l,c,h,d,p,m,y,g,x,$,C,S,I,A,L,P=this;return ve(this,function(M){switch(M.label){case 0:return Lf(t=nt(nt({},Bi),t)),r=Rs(e),s=r[0],i=r[1],o=Oi(t.internalResolution,this.baseModel.outputStride,[s,i]),a=Di(e,o),u=a.resized,l=a.padding,c=ie(function(){var U,V=P.predictForMultiPersonInstanceSegmentationAndPart(u),j=V.segmentLogits,K=V.longOffsets,H=V.heatmapScores,ne=V.offsets,le=V.displacementFwd,pe=V.displacementBwd,de=Mr(j,[s,i],o,[[l.top,l.bottom],[l.left,l.right]],!0);return U=K,{segmentation:Ri(Ut(de),t.segmentationThreshold),longOffsets:U,heatmapScoresRaw:H,offsetsRaw:ne,displacementFwdRaw:le,displacementBwdRaw:pe}}),h=c.segmentation,d=c.longOffsets,p=c.heatmapScoresRaw,m=c.offsetsRaw,y=c.displacementFwdRaw,g=c.displacementBwdRaw,[4,Fi([p,m,y,g])];case 1:return x=M.sent(),$=x[0],C=x[1],S=x[2],I=x[3],A=Pi(A=Ai($,C,S,I,this.baseModel.outputStride,t.maxDetections,t.scoreThreshold,t.nmsRadius),[s,i],o,l,!1),[4,bk(h,d,A,s,i,this.baseModel.outputStride,o,l,t.scoreThreshold,t.refineSteps,t.minKeypointScore,t.maxDetections)];case 2:return L=M.sent(),u.dispose(),h.dispose(),d.dispose(),p.dispose(),m.dispose(),y.dispose(),g.dispose(),[2,L]}})})},n.prototype.segmentPersonPartsActivation=function(e,t,r){var s=this;r===void 0&&(r=.5);var i=Rs(e),o=i[0],a=i[1],u=Oi(t,this.baseModel.outputStride,[o,a]),l=Di(e,u),c=l.resized,h=l.padding,d=ie(function(){var $=s.predictForPersonSegmentationAndPart(c),C=$.segmentLogits,S=$.partHeatmapLogits,I=$.heatmapScores,A=$.offsets,L=$.displacementFwd,P=$.displacementBwd,M=c.shape,U=M[0],V=M[1],j=Mr(C,[o,a],[U,V],[[h.top,h.bottom],[h.left,h.right]],!0),K=Mr(S,[o,a],[U,V],[[h.top,h.bottom],[h.left,h.right]],!0);return{partSegmentation:mk(Ri(Ut(j),r),K),heatmapScores:I,offsets:A,displacementFwd:L,displacementBwd:P}}),p=d.partSegmentation,m=d.heatmapScores,y=d.offsets,g=d.displacementFwd,x=d.displacementBwd;return c.dispose(),{partSegmentation:p,heatmapScores:m,offsets:y,displacementFwd:g,displacementBwd:x,padding:h,internalResolutionHeightAndWidth:u}},n.prototype.segmentPersonParts=function(e,t){return t===void 0&&(t=Li),we(this,void 0,void 0,function(){var r,s,i,o,a,u,l,c,h,d,p,m,y,g,x,$,C,S;return ve(this,function(I){switch(I.label){case 0:return Pf(t=nt(nt({},Li),t)),r=this.segmentPersonPartsActivation(e,t.internalResolution,t.segmentationThreshold),s=r.partSegmentation,i=r.heatmapScores,o=r.offsets,a=r.displacementFwd,u=r.displacementBwd,l=r.padding,c=r.internalResolutionHeightAndWidth,h=s.shape,d=h[0],p=h[1],[4,s.data()];case 1:return m=I.sent(),s.dispose(),[4,Fi([i,o,a,u])];case 2:return y=I.sent(),g=y[0],x=y[1],$=y[2],C=y[3],S=Pi(S=Ai(g,x,$,C,this.baseModel.outputStride,t.maxDetections,t.scoreThreshold,t.nmsRadius),[d,p],c,l,!1),i.dispose(),o.dispose(),a.dispose(),u.dispose(),[2,{height:d,width:p,data:m,allPoses:S}]}})})},n.prototype.segmentMultiPersonParts=function(e,t){return t===void 0&&(t=Bi),we(this,void 0,void 0,function(){var r,s,i,o,a,u,l,c,h,d,p,m,y,g,x,$,C,S,I,A,L,P,M=this;return ve(this,function(U){switch(U.label){case 0:return Lf(t=nt(nt({},Bi),t)),r=Rs(e),s=r[0],i=r[1],o=Oi(t.internalResolution,this.baseModel.outputStride,[s,i]),a=Di(e,o),u=a.resized,l=a.padding,c=ie(function(){var V=M.predictForMultiPersonInstanceSegmentationAndPart(u),j=V.segmentLogits,K=V.longOffsets,H=V.heatmapScores,ne=V.offsets,le=V.displacementFwd,pe=V.displacementBwd,de=V.partHeatmaps,Ne=Mr(j,[s,i],o,[[l.top,l.bottom],[l.left,l.right]],!0),Ke=Mr(de,[s,i],o,[[l.top,l.bottom],[l.left,l.right]],!0),dt=K,pt=Ri(Ut(Ne),t.segmentationThreshold),et=function(ft){var tt=ft.shape,We=tt[0],Sn=tt[1],Re=tt[2];return ie(function(){var Be=f1(ft),gs=wt(Xn(0,Re,1,"int32"),1),ia=xe(ge(Be,gs),"int32");return W(ia,[We,Sn])})}(Ke);return{segmentation:pt,longOffsets:dt,heatmapScoresRaw:H,offsetsRaw:ne,displacementFwdRaw:le,displacementBwdRaw:pe,partSegmentation:et}}),h=c.segmentation,d=c.longOffsets,p=c.heatmapScoresRaw,m=c.offsetsRaw,y=c.displacementFwdRaw,g=c.displacementBwdRaw,x=c.partSegmentation,[4,Fi([p,m,y,g])];case 1:return $=U.sent(),C=$[0],S=$[1],I=$[2],A=$[3],L=Pi(L=Ai(C,S,I,A,this.baseModel.outputStride,t.maxDetections,t.scoreThreshold,t.nmsRadius),[s,i],o,l,!1),[4,wk(h,d,x,L,s,i,this.baseModel.outputStride,o,l,t.scoreThreshold,t.refineSteps,t.minKeypointScore,t.maxDetections)];case 2:return P=U.sent(),u.dispose(),h.dispose(),d.dispose(),p.dispose(),m.dispose(),y.dispose(),g.dispose(),x.dispose(),[2,P]}})})},n.prototype.dispose=function(){this.baseModel.dispose()},n}();function Ik(n){return we(this,void 0,void 0,function(){var e,t,r,s,i,o;return ve(this,function(a){switch(a.label){case 0:if(e=n.outputStride,t=n.quantBytes,r=n.multiplier,o1==null)throw new Error(`Cannot find TensorFlow.js. If you are using a <script> tag, please also include @tensorflow/tfjs on the page before using this
        model.`);return s=function(u,l,c){var h={1:"100",.75:"075",.5:"050"},d="model-stride"+u+".json";return c===4?kf+"float/"+h[l]+"/"+d:kf+"quant"+c+"/"+h[l]+"/"+d}(e,r,t),[4,Gd(n.modelUrl||s)];case 1:return i=a.sent(),o=new gk(i,e),[2,new T1(o)]}})})}function kk(n){return we(this,void 0,void 0,function(){var e,t,r,s,i;return ve(this,function(o){switch(o.label){case 0:if(e=n.outputStride,t=n.quantBytes,o1==null)throw new Error(`Cannot find TensorFlow.js. If you are using a <script> tag, please also include @tensorflow/tfjs on the page before using this
        model.`);return r=function(a,u){var l="model-stride"+a+".json";return u===4?If+"float/"+l:If+"quant"+u+"/"+l}(e,t),[4,Gd(n.modelUrl||r)];case 1:return s=o.sent(),i=new Ek(s,e),[2,new T1(i)]}})})}function _k(n){return n===void 0&&(n=Rf),we(this,void 0,void 0,function(){return ve(this,function(e){return(n=function(t){if((t=t||Rf).architecture==null&&(t.architecture="MobileNetV1"),Af.indexOf(t.architecture)<0)throw new Error("Invalid architecture "+t.architecture+". Should be one of "+Af);if(t.outputStride==null&&(t.outputStride=16),Of[t.architecture].indexOf(t.outputStride)<0)throw new Error("Invalid outputStride "+t.outputStride+". Should be one of "+Of[t.architecture]+" for architecture "+t.architecture+".");if(t.multiplier==null&&(t.multiplier=1),Df[t.architecture].indexOf(t.multiplier)<0)throw new Error("Invalid multiplier "+t.multiplier+". Should be one of "+Df[t.architecture]+" for architecture "+t.architecture+".");if(t.quantBytes==null&&(t.quantBytes=4),Ff.indexOf(t.quantBytes)<0)throw new Error("Invalid quantBytes "+t.quantBytes+". Should be one of "+Ff+" for architecture "+t.architecture+".");return t}(n)).architecture==="ResNet50"?[2,kk(n)]:n.architecture==="MobileNetV1"?[2,Ik(n)]:[2,null]})})}var ku=["left_face","right_face","left_upper_arm_front","left_upper_arm_back","right_upper_arm_front","right_upper_arm_back","left_lower_arm_front","left_lower_arm_back","right_lower_arm_front","right_lower_arm_back","left_hand","right_hand","torso_front","torso_back","left_upper_leg_front","left_upper_leg_back","right_upper_leg_front","right_upper_leg_back","left_lower_leg_front","left_lower_leg_back","right_lower_leg_front","right_lower_leg_back","left_feet","right_feet"],Bf=function(){function n(e){this.mask=e}return n.prototype.toCanvasImageSource=function(){return we(this,void 0,void 0,function(){return ve(this,function(e){return[2,Hd(this.mask)]})})},n.prototype.toImageData=function(){return we(this,void 0,void 0,function(){return ve(this,function(e){return[2,this.mask]})})},n.prototype.toTensor=function(){return we(this,void 0,void 0,function(){return ve(this,function(e){return[2,p1(this.mask)]})})},n.prototype.getUnderlyingType=function(){return"imagedata"},n}();function Rk(n){if(Zo(n),n!==255)throw new Error("Foreground id must be 255 but got "+n);return"person"}function Ak(n){if(Zo(n),n>=ku.length)throw new Error("Invalid body part value "+n);return ku[n]}var Ok=function(){function n(e){this.bodyPixModel=e}return n.prototype.segmentPeople=function(e,t){return we(this,void 0,void 0,function(){var r,s,i,o;return ve(this,function(a){switch(a.label){case 0:return e instanceof ImageBitmap&&((r=document.createElement("canvas")).getContext("2d").drawImage(e,0,0),e=r),t.segmentBodyParts?t.multiSegmentation?[4,this.bodyPixModel.segmentMultiPersonParts(e,t)]:[3,2]:[3,5];case 1:return i=a.sent(),[3,4];case 2:return[4,this.bodyPixModel.segmentPersonParts(e,t)];case 3:i=[a.sent()],a.label=4;case 4:return s=i.map(function(u){var l=u.data,c=u.width,h=u.height,d=new Uint8ClampedArray(c*h*4).fill(0);return l.forEach(function(p,m){p===-1?(d[4*m]=ku.length,d[4*m+3]=0):(d[4*m]=p,d[4*m+3]=255)}),{maskValueToLabel:Ak,mask:new Bf(new ImageData(d,c,h))}}),[3,10];case 5:return t.multiSegmentation?[4,this.bodyPixModel.segmentMultiPerson(e,t)]:[3,7];case 6:return o=a.sent(),[3,9];case 7:return[4,this.bodyPixModel.segmentPerson(e,t)];case 8:o=[a.sent()],a.label=9;case 9:s=o.map(function(u){var l=u.data,c=u.width,h=u.height,d=new Uint8ClampedArray(c*h*4).fill(0);return l.forEach(function(p,m){p===0?(d[4*m]=0,d[4*m+3]=0):(d[4*m]=255,d[4*m+3]=255)}),{maskValueToLabel:Rk,mask:new Bf(new ImageData(d,c,h))}}),a.label=10;case 10:return[2,s]}})})},n.prototype.dispose=function(){this.bodyPixModel.dispose()},n.prototype.reset=function(){},n}();function Dk(n){return we(this,void 0,void 0,function(){return ve(this,function(e){return[2,_k(n).then(function(t){return new Ok(t)})]})})}var Mf={runtime:"mediapipe",modelType:"general"},Fk=function(){function n(e){this.mask=e}return n.prototype.toCanvasImageSource=function(){return we(this,void 0,void 0,function(){return ve(this,function(e){return[2,this.mask]})})},n.prototype.toImageData=function(){return we(this,void 0,void 0,function(){return ve(this,function(e){return[2,d1(this.mask)]})})},n.prototype.toTensor=function(){return we(this,void 0,void 0,function(){return ve(this,function(e){return[2,p1(this.mask)]})})},n.prototype.getUnderlyingType=function(){return"canvasimagesource"},n}();function Pk(n){return Zo(n),"person"}var Lk=function(){function n(e){var t,r=this;this.selfieMode=!1,this.selfieSegmentationSolution=new fk.SelfieSegmentation({locateFile:function(s,i){return e.solutionPath?e.solutionPath.replace(/\/+$/,"")+"/"+s:i+"/"+s}}),e.modelType==="landscape"?t=1:t=0,this.selfieSegmentationSolution.setOptions({modelSelection:t,selfieMode:this.selfieMode}),this.selfieSegmentationSolution.onResults(function(s){r.segmentation=[{maskValueToLabel:Pk,mask:new Fk(s.segmentationMask)}]})}return n.prototype.segmentPeople=function(e,t){return we(this,void 0,void 0,function(){var r,s;return ve(this,function(i){switch(i.label){case 0:return t&&t.flipHorizontal&&t.flipHorizontal!==this.selfieMode&&(this.selfieMode=t.flipHorizontal,this.selfieSegmentationSolution.setOptions({selfieMode:this.selfieMode})),e instanceof be?(s=ImageData.bind,[4,Ro(e)]):[3,2];case 1:return r=new(s.apply(ImageData,[void 0,i.sent(),e.shape[1],e.shape[0]])),[3,3];case 2:r=e,i.label=3;case 3:return e=r,[4,this.selfieSegmentationSolution.send({image:e})];case 4:return i.sent(),[2,this.segmentation]}})})},n.prototype.dispose=function(){this.selfieSegmentationSolution.close()},n.prototype.reset=function(){this.selfieSegmentationSolution.reset(),this.segmentation=null,this.selfieMode=!1},n.prototype.initialize=function(){return this.selfieSegmentationSolution.initialize()},n}();function Bk(n){return we(this,void 0,void 0,function(){var e,t;return ve(this,function(r){switch(r.label){case 0:return e=function(s){if(s==null)return nt({},Mf);var i=nt({},s);return i.runtime="mediapipe",i.modelType==null&&(i.modelType=Mf.modelType),i}(n),[4,(t=new Lk(e)).initialize()];case 1:return r.sent(),[2,t]}})})}function Mk(n,e,t,r){var s=n.width,i=n.height,o=r?-1:1,a=Math.cos(n.rotation),u=Math.sin(n.rotation),l=n.xCenter,c=n.yCenter,h=1/e,d=1/t,p=new Array(16);return p[0]=s*a*o*h,p[1]=-i*u*h,p[2]=0,p[3]=(-.5*s*a*o+.5*i*u+l)*h,p[4]=s*u*o*d,p[5]=i*a*d,p[6]=0,p[7]=(-.5*i*a-.5*s*u*o+c)*d,p[8]=0,p[9]=0,p[10]=s*h,p[11]=0,p[12]=0,p[13]=0,p[14]=0,p[15]=1,function(m){if(m.length!==16)throw new Error("Array length must be 16 but got "+m.length);return[[m[0],m[1],m[2],m[3]],[m[4],m[5],m[6],m[7]],[m[8],m[9],m[10],m[11]],[m[12],m[13],m[14],m[15]]]}(p)}function C1(n){return n instanceof be?{height:n.shape[0],width:n.shape[1]}:{height:n.height,width:n.width}}function Ma(n,e){N(n.width!==0,function(){return e+" width cannot be 0."}),N(n.height!==0,function(){return e+" height cannot be 0."})}function Vk(n,e){var t=function(r,s,i,o){var a=s-r,u=o-i;if(a===0)throw new Error("Original min and max are both "+r+", range cannot be 0.");var l=u/a;return{scale:l,offset:i-r*l}}(0,255,e[0],e[1]);return ie(function(){return se(Y(n,t.scale),t.offset)})}function Uk(n,e,t){var r=e.outputTensorSize,s=e.keepAspectRatio,i=e.borderMode,o=e.outputTensorFloatRange,a=C1(n),u=function(d,p){return p?{xCenter:p.xCenter*d.width,yCenter:p.yCenter*d.height,width:p.width*d.width,height:p.height*d.height,rotation:p.rotation}:{xCenter:.5*d.width,yCenter:.5*d.height,width:d.width,height:d.height,rotation:0}}(a,t),l=function(d,p,m){if(m===void 0&&(m=!1),!m)return{top:0,left:0,right:0,bottom:0};var y=p.height,g=p.width;Ma(p,"targetSize"),Ma(d,"roi");var x,$,C=y/g,S=d.height/d.width,I=0,A=0;return C>S?(x=d.width,$=d.width*C,A=(1-S/C)/2):(x=d.height/C,$=d.height,I=(1-C/S)/2),d.width=x,d.height=$,{top:A,left:I,right:I,bottom:A}}(u,r,s),c=Mk(u,a.width,a.height,!1),h=ie(function(){var d,p=(d=n)instanceof be?d:Ao(d),m=xr(function(x,$,C){return Ma(C,"inputResolution"),[1/C.width*x[0][0]*$.width,1/C.height*x[0][1]*$.width,x[0][3]*$.width,1/C.width*x[1][0]*$.height,1/C.height*x[1][1]*$.height,x[1][3]*$.height,0,0]}(c,a,r),[1,8]),y=i==="zero"?"constant":"nearest",g=Er.transform(wt(xe(p,"float32")),m,"bilinear",y,0,[r.height,r.width]);return o!=null?Vk(g,o):g});return{imageTensor:h,padding:l,transformationMatrix:c}}function zk(n,e,t){return ie(function(){var r=Ut(n,[0]),s=r.shape[2];if(s===1){var i=r;switch(e.activation){case"none":break;case"sigmoid":i=gn(i);break;case"softmax":throw new Error("Softmax activation requires two channels.");default:throw new Error("Activation not supported ("+e.activation+")")}var o=t?Er.resizeBilinear(i,[t.height,t.width]):i;return Ut(o,[2])}throw new Error("Unsupported number of tensor channels "+s)})}var Vf={runtime:"tfjs",modelType:"general",modelUrl:"https://tfhub.dev/mediapipe/tfjs-model/selfie_segmentation/general/1"},Uf={flipHorizontal:!1},Wk={outputTensorSize:{width:256,height:256},keepAspectRatio:!1,borderMode:"zero",outputTensorFloatRange:[0,1]},Gk={outputTensorSize:{width:256,height:144},keepAspectRatio:!1,borderMode:"zero",outputTensorFloatRange:[0,1]},Hk={activation:"none"},jk=function(){function n(e){this.mask=e}return n.prototype.toCanvasImageSource=function(){return we(this,void 0,void 0,function(){return ve(this,function(e){return[2,Hd(this.mask)]})})},n.prototype.toImageData=function(){return we(this,void 0,void 0,function(){return ve(this,function(e){return[2,d1(this.mask)]})})},n.prototype.toTensor=function(){return we(this,void 0,void 0,function(){return ve(this,function(e){return[2,this.mask]})})},n.prototype.getUnderlyingType=function(){return"tensor"},n}();function qk(n){return Zo(n),"person"}var Ks,Kk=function(){function n(e,t){this.modelType=e,this.model=t}return n.prototype.segmentPeople=function(e,t){return we(this,void 0,void 0,function(){var r,s=this;return ve(this,function(i){return t=function(o){if(o==null)return nt({},Uf);var a=nt({},o);return a.flipHorizontal==null&&(a.flipHorizontal=Uf.flipHorizontal),a}(t),e==null?(this.reset(),[2,[]]):(r=ie(function(){var o=Uk(e,s.modelType==="general"?Wk:Gk).imageTensor,a=$e(s.model.predict(o),[0,0,0,1],-1),u=C1(e),l=zk(a,Hk,u),c=wt(l,2),h=Or(c,[[0,0],[0,0],[0,1]]);return xd(h,[[0,0],[0,0],[0,2]],"symmetric")}),[2,[{maskValueToLabel:qk,mask:new jk(r)}]])})})},n.prototype.dispose=function(){this.model.dispose()},n.prototype.reset=function(){},n}();function Xk(n){return we(this,void 0,void 0,function(){var e,t,r;return ve(this,function(s){switch(s.label){case 0:return e=function(i){if(i==null)return nt({},Vf);var o=nt({},i);if(o.runtime="tfjs",o.modelType==null&&(o.modelType=Vf.modelType),o.modelType!=="general"&&o.modelType!=="landscape")throw new Error("Model type must be one of general or landscape, but got "+o.modelType);return o.modelUrl==null&&(o.modelType==="general"?o.modelUrl="https://tfhub.dev/mediapipe/tfjs-model/selfie_segmentation/general/1":o.modelUrl="https://tfhub.dev/mediapipe/tfjs-model/selfie_segmentation/landscape/1"),o}(n),t=typeof e.modelUrl=="string"&&e.modelUrl.indexOf("https://tfhub.dev")>-1,[4,Gd(e.modelUrl,{fromTFHub:t})];case 1:return r=s.sent(),[2,new Kk(e.modelType,r)]}})})}function Yk(n,e){return we(this,void 0,void 0,function(){var t,r;return ve(this,function(s){switch(n){case Ks.MediaPipeSelfieSegmentation:if(t=void 0,(r=e)!=null){if(r.runtime==="tfjs")return[2,Xk(r)];if(r.runtime==="mediapipe")return[2,Bk(r)];t=r.runtime}throw new Error("Expect modelConfig.runtime to be either 'tfjs' or 'mediapipe', but got "+t);case Ks.BodyPix:return[2,Dk(r=e)];default:throw new Error(n+" is not a supported model name.")}})})}(function(n){n.BodyPix="BodyPix",n.MediaPipeSelfieSegmentation="MediaPipeSelfieSegmentation"})(Ks||(Ks={}));function Qk(n,e,t,r,s,i){i===void 0&&(i={r:0,g:255,b:255,a:255});for(var o=-s;o<=s;o++)for(var a=-s;a<=s;a++)if(o!==0&&a!==0){var u=(e+o)*r+(t+a);n[4*u+0]=i.r,n[4*u+1]=i.g,n[4*u+2]=i.b,n[4*u+3]=i.a}}function Zk(n,e,t,r,s,i,o){o===void 0&&(o=1);for(var a=0,u=-o;u<=o;u++)for(var l=-o;l<=o;l++)if(u!==0&&l!==0){var c=(e+u)*r+(t+l);(!s[n[4*c]]||n[4*c+3]<i)&&(a+=1)}return a>0}function Jk(n,e,t,r,s,i){return e===void 0&&(e={r:0,g:0,b:0,a:0}),t===void 0&&(t={r:0,g:0,b:0,a:255}),r===void 0&&(r=!1),s===void 0&&(s=.5),i===void 0&&(i=Array.from(Array(256).keys())),we(this,void 0,void 0,function(){var o,a,u,l,c,h,d,p,m,y,g,x,$,C;return ve(this,function(S){switch(S.label){case 0:return(o=Array.isArray(n)?n:[n]).length===0?[2,null]:[4,Promise.all(o.map(function(I){return I.mask.toImageData()}))];case 1:for(a=S.sent(),u=a[0],l=u.width,c=u.height,h=new Uint8ClampedArray(l*c*4),d=Math.round(255*s),p=new Array(256).fill(!1),i.forEach(function(I){return p[I]=!0}),m=0;m<c;m++)for(y=0;y<l;y++)for(h[4*(g=m*l+y)+0]=t.r,h[4*g+1]=t.g,h[4*g+2]=t.b,h[4*g+3]=t.a,x=0,$=a;x<$.length;x++)C=$[x],p[C.data[4*g]]&&C.data[4*g+3]>=d&&(h[4*g]=e.r,h[4*g+1]=e.g,h[4*g+2]=e.b,h[4*g+3]=e.a,r&&m-1>=0&&m+1<c&&y-1>=0&&y+1<l&&Zk(C.data,m,y,l,p,d)&&Qk(h,m,y,l,1));return[2,new ImageData(h,l,c)]}})})}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hr={},Mi={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function e_(n,e){hr[n]=e}function on(n,e){if(!(n in hr)||e!=null){const r=n_(n,e);if(r!==null)hr[n]=r;else return console.log("Could not get context for WebGL version",n),null}const t=hr[n];return t==null||t.isContextLost()?(delete hr[n],on(n)):(t.disable(t.DEPTH_TEST),t.disable(t.STENCIL_TEST),t.disable(t.BLEND),t.disable(t.DITHER),t.disable(t.POLYGON_OFFSET_FILL),t.disable(t.SAMPLE_COVERAGE),t.enable(t.SCISSOR_TEST),t.enable(t.CULL_FACE),t.cullFace(t.BACK),hr[n])}function t_(n){if(typeof OffscreenCanvas<"u"&&n===2)return new OffscreenCanvas(300,150);if(typeof document<"u")return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}function n_(n,e){if(n!==1&&n!==2)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const t=e==null?t_(n):e;return t.addEventListener("webglcontextlost",r=>{r.preventDefault(),delete hr[n]},!1),B().getBool("SOFTWARE_WEBGL_ENABLED")&&(Mi.failIfMajorPerformanceCaveat=!1),n===1?t.getContext("webgl",Mi)||t.getContext("experimental-webgl",Mi):t.getContext("webgl2",Mi)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Xs;(function(n){n[n.DENSE=0]="DENSE",n[n.SHARED_BATCH=1]="SHARED_BATCH"})(Xs||(Xs={}));var Nt;(function(n){n[n.RENDER=0]="RENDER",n[n.UPLOAD=1]="UPLOAD",n[n.PIXELS=2]="PIXELS",n[n.DOWNLOAD=3]="DOWNLOAD"})(Nt||(Nt={}));var Ge;(function(n){n[n.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",n[n.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",n[n.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",n[n.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",n[n.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"})(Ge||(Ge={}));function di(n,e){return[e,n]}function r_(n,e){return n*e}function Vi(n){const e=q(n),t=Math.ceil(e/4);return Qi(t)}function ls(n,e){return[Math.max(1,Math.ceil(e/2)),Math.max(1,Math.ceil(n/2))]}function s_(n,e){const[t,r]=ls(n,e);return t*r*4}function qd(n,e){const t=n;let r,s,i,o,a,u,l,c,h,d;return B().getNumber("WEBGL_VERSION")===2?(r=t.R32F,s=t.R16F,i=t.RGBA16F,o=t.RGBA32F,a=t.RED,l=4,c=1,h=t.HALF_FLOAT,d=t.FLOAT,u=t.RGBA8):(r=n.RGBA,s=n.RGBA,i=n.RGBA,o=t.RGBA,a=n.RGBA,l=4,c=4,h=e!=null?e.HALF_FLOAT_OES:null,d=n.FLOAT,u=n.RGBA),{internalFormatFloat:r,internalFormatHalfFloat:s,internalFormatPackedHalfFloat:i,internalFormatPackedFloat:o,textureFormatFloat:a,downloadTextureFormat:u,downloadUnpackNumChannels:l,defaultNumChannels:c,textureTypeHalfFloat:h,textureTypeFloat:d}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function J(n,e){const t=e();return B().getBool("DEBUG")&&i_(n),t}function i_(n){const e=n.getError();if(e!==n.NO_ERROR)throw new Error("WebGL Error: "+l_(n,e))}const o_=596e-10,a_=65504;function u_(n){return!!(B().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||n===0||o_<Math.abs(n)&&Math.abs(n)<a_)}function l_(n,e){switch(e){case n.NO_ERROR:return"NO_ERROR";case n.INVALID_ENUM:return"INVALID_ENUM";case n.INVALID_VALUE:return"INVALID_VALUE";case n.INVALID_OPERATION:return"INVALID_OPERATION";case n.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case n.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case n.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${e}`}}function Ui(n,e){return Ln(n,()=>n.getExtension(e),'Extension "'+e+'" not supported on this browser.')}function c_(n,e){const t=Ln(n,()=>n.createShader(n.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(J(n,()=>n.shaderSource(t,e)),J(n,()=>n.compileShader(t)),n.getShaderParameter(t,n.COMPILE_STATUS)===!1)throw console.log(n.getShaderInfoLog(t)),new Error("Failed to compile vertex shader.");return t}function h_(n,e){const t=Ln(n,()=>n.createShader(n.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(J(n,()=>n.shaderSource(t,e)),J(n,()=>n.compileShader(t)),B().get("ENGINE_COMPILE_ONLY"))return t;if(n.getShaderParameter(t,n.COMPILE_STATUS)===!1)throw E1(e,n.getShaderInfoLog(t)),new Error("Failed to compile fragment shader.");return t}const d_=/ERROR: [0-9]+:([0-9]+):/g;function E1(n,e){const t=d_.exec(e);if(t==null){console.log(`Couldn't parse line number in error: ${e}`),console.log(n);return}const r=+t[1],s=n.split(`
`),i=s.length.toString().length+2,o=s.map((h,d)=>fr((d+1).toString(),i)+h);let a=0;for(let h=0;h<o.length;h++)a=Math.max(o[h].length,a);const u=o.slice(0,r-1),l=o.slice(r-1,r),c=o.slice(r);console.log(u.join(`
`)),console.log(e.split(`
`)[0]),console.log(`%c ${fr(l[0],a)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(c.join(`
`))}function p_(n){return Ln(n,()=>n.createProgram(),"Unable to create WebGLProgram.")}function f_(n,e){if(J(n,()=>n.linkProgram(e)),!B().get("ENGINE_COMPILE_ONLY")&&n.getProgramParameter(e,n.LINK_STATUS)===!1)throw console.log(n.getProgramInfoLog(e)),new Error("Failed to link vertex and fragment shaders.")}function Va(n,e){if(J(n,()=>n.validateProgram(e)),n.getProgramParameter(e,n.VALIDATE_STATUS)===!1)throw console.log(n.getProgramInfoLog(e)),new Error("Shader program validation failed.")}function m_(n,e){const t=Ln(n,()=>n.createBuffer(),"Unable to create WebGLBuffer");return J(n,()=>n.bindBuffer(n.ARRAY_BUFFER,t)),J(n,()=>n.bufferData(n.ARRAY_BUFFER,e,n.STATIC_DRAW)),t}function g_(n,e){const t=Ln(n,()=>n.createBuffer(),"Unable to create WebGLBuffer");return J(n,()=>n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,t)),J(n,()=>n.bufferData(n.ELEMENT_ARRAY_BUFFER,e,n.STATIC_DRAW)),t}function y_(n){return Ln(n,()=>n.createTexture(),"Unable to create WebGLTexture.")}function x_(n,e){const t=B().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(n<=0||e<=0){const r=`[${n}x${e}]`;throw new Error("Requested texture size "+r+" is invalid.")}if(n>t||e>t){const r=`[${n}x${e}]`,s=`[${t}x${t}]`;throw new Error("Requested texture size "+r+" greater than WebGL maximum on this browser / GPU "+s+".")}}function b_(n){return Ln(n,()=>n.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function zf(n,e,t,r,s,i,o){const a=n.getAttribLocation(e,t);return a===-1?!1:(J(n,()=>n.bindBuffer(n.ARRAY_BUFFER,r)),J(n,()=>n.vertexAttribPointer(a,s,n.FLOAT,!1,i,o)),J(n,()=>n.enableVertexAttribArray(a)),!0)}function w_(n,e,t){C_(n,t),J(n,()=>n.activeTexture(n.TEXTURE0+t)),J(n,()=>n.bindTexture(n.TEXTURE_2D,e))}function v_(n,e,t){return Ln(n,()=>n.getUniformLocation(e,t),'uniform "'+t+'" not present in program.')}function $_(n,e,t){return n.getUniformLocation(e,t)}function S_(n,e,t,r){J(n,()=>w_(n,e,r)),J(n,()=>n.uniform1i(t,r))}function Ua(n,e,t){J(n,()=>n.bindFramebuffer(n.FRAMEBUFFER,t)),J(n,()=>n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,e,0))}function Wf(n,e){J(n,()=>n.bindFramebuffer(n.FRAMEBUFFER,e)),J(n,()=>n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,null,0))}function zi(n){const e=n.checkFramebufferStatus(n.FRAMEBUFFER);if(e!==n.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+T_(n,e))}function T_(n,e){switch(e){case n.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case n.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case n.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case n.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${e}`}}function Ln(n,e,t){const r=J(n,()=>e());if(r==null)throw new Error(t);return r}function C_(n,e){const t=n.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=e+n.TEXTURE0;if(r<n.TEXTURE0||r>t){const s=`[gl.TEXTURE0, gl.TEXTURE${t}]`;throw new Error(`textureUnit must be in ${s}.`)}}function ns(n,e=2){return q(n.slice(0,n.length-e))}function rs(n){if(n.length===0)throw Error("Cannot get rows and columns of an empty shape array.");return[n.length>1?n[n.length-2]:1,n[n.length-1]]}function Wi(n){let e=[1,1,1];return n.length===0||n.length===1&&n[0]===1||(e=[ns(n),...rs(n)]),e}function E_(n,e=!1){let t=B().getNumber("WEBGL_MAX_TEXTURE_SIZE"),r=B().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");r===1/0&&B().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(r=t/2),e&&(t=t*2,r=r*2,n=n.map((a,u)=>u>=n.length-2?To(n[u]):n[u]),n.length===1&&(n=[2,n[0]])),n.length!==2&&(n=Fn(n).newShape);let s=q(n),i=null;n.length<=1&&s<=t?i=[1,s]:n.length===2&&n[0]<=t&&n[1]<=t?i=n:n.length===3&&n[0]*n[1]<=t&&n[2]<=t?i=[n[0]*n[1],n[2]]:n.length===3&&n[0]<=t&&n[1]*n[2]<=t?i=[n[0],n[1]*n[2]]:n.length===4&&n[0]*n[1]*n[2]<=t&&n[3]<=t?i=[n[0]*n[1]*n[2],n[3]]:n.length===4&&n[0]<=t&&n[1]*n[2]*n[3]<=t&&(i=[n[0],n[1]*n[2]*n[3]]);const o=i!=null&&Math.max(...i)>r&&Math.min(...i)<=(e?2:1)&&Math.min(...i)>0;if(i==null||o)if(e){const a=ns(n);let u=2,l=2;n.length&&([u,l]=rs(n)),s=a*(u/2)*(l/2),i=Qi(s).map(c=>c*2)}else i=Qi(s);return i}function Gi(n){return n%2===0}function yo(n,e){if(n=n.slice(-2),e=e.slice(-2),Oe(n,e)||!n.length||!e.length||n[0]===0||n[1]===0||e[0]===0||e[1]===0)return!0;if(n.length!==e.length){const t=n.slice(-1)[0],r=e.slice(-1)[0];if(t===r||Gi(t)&&Gi(r)&&(n[0]===1||e[0]===1))return!0}return n[1]===e[1]&&Gi(n[0])&&Gi(e[0])}let za,Wa;function N_(n){if(za==null){const e=on(n);za=e.getParameter(e.MAX_TEXTURE_SIZE)}return za}function I_(n){if(Wa==null){const e=on(n);Wa=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,Wa)}function k_(n){if(n===0)return 0;let e;const t=on(n);return Wt(t,"EXT_disjoint_timer_query_webgl2")&&n===2?e=2:Wt(t,"EXT_disjoint_timer_query")?e=1:e=0,e}function Wt(n,e){return n.getExtension(e)!=null}function Gf(n){try{if(on(n)!=null)return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function __(n){if(n===0)return!1;const e=on(n);if(n===1){if(!Wt(e,"OES_texture_float"))return!1}else if(!Wt(e,"EXT_color_buffer_float"))return!1;return _u(e)}function R_(n){if(n===0)return!1;const e=on(n);if(n===1){if(!Wt(e,"OES_texture_float")||!Wt(e,"WEBGL_color_buffer_float"))return!1}else{if(Wt(e,"EXT_color_buffer_float"))return _u(e);const r="EXT_color_buffer_half_float";if(Wt(e,r)){const s=e.getExtension(r);return A_(e,s)}return!1}return _u(e)}function _u(n){const e=qd(n),t=n.createTexture();n.bindTexture(n.TEXTURE_2D,t);const r=1,s=1;n.texImage2D(n.TEXTURE_2D,0,e.internalFormatFloat,r,s,0,e.textureFormatFloat,e.textureTypeFloat,null);const i=n.createFramebuffer();n.bindFramebuffer(n.FRAMEBUFFER,i),n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,t,0);const o=n.checkFramebufferStatus(n.FRAMEBUFFER)===n.FRAMEBUFFER_COMPLETE;return n.bindTexture(n.TEXTURE_2D,null),n.bindFramebuffer(n.FRAMEBUFFER,null),n.deleteTexture(t),n.deleteFramebuffer(i),o}function A_(n,e){const t=qd(n,e),r=n.createTexture();n.bindTexture(n.TEXTURE_2D,r);const s=1,i=1;n.texImage2D(n.TEXTURE_2D,0,t.internalFormatHalfFloat,s,i,0,t.textureFormatFloat,t.textureTypeHalfFloat,null);const o=n.createFramebuffer();n.bindFramebuffer(n.FRAMEBUFFER,o),n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,r,0);const a=n.checkFramebufferStatus(n.FRAMEBUFFER)===n.FRAMEBUFFER_COMPLETE;return n.bindTexture(n.TEXTURE_2D,null),n.bindFramebuffer(n.FRAMEBUFFER,null),n.deleteTexture(r),n.deleteFramebuffer(o),a}function O_(n){return n!==2?!1:on(n).fenceSync!=null}function pi(n,e){Array.isArray(n)||(n=[n]),n.forEach(t=>{t!=null&&N(t.dtype!=="complex64",()=>`${e} does not support complex64 tensors in the WebGL backend.`)})}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const te=B();te.registerFlag("HAS_WEBGL",()=>te.getNumber("WEBGL_VERSION")>0);te.registerFlag("WEBGL_VERSION",()=>Gf(2)?2:Gf(1)?1:0);te.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1);te.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>te.get("WEBGL_VERSION")===2);te.registerFlag("WEBGL_CPU_FORWARD",()=>!0);te.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1);te.registerFlag("WEBGL_PACK",()=>te.getBool("HAS_WEBGL"));te.registerFlag("WEBGL_PACK_NORMALIZATION",()=>te.getBool("WEBGL_PACK"));te.registerFlag("WEBGL_PACK_CLIP",()=>te.getBool("WEBGL_PACK"));te.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>te.getBool("WEBGL_PACK"));te.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>te.getBool("WEBGL_PACK"));te.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>te.getBool("WEBGL_PACK"));te.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>te.getBool("WEBGL_PACK"));te.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>te.getBool("WEBGL_PACK"));te.registerFlag("WEBGL_PACK_REDUCE",()=>te.getBool("WEBGL_PACK"));te.registerFlag("WEBGL_LAZILY_UNPACK",()=>te.getBool("WEBGL_PACK"));te.registerFlag("WEBGL_CONV_IM2COL",()=>te.getBool("WEBGL_PACK"));te.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>N_(te.getNumber("WEBGL_VERSION")));te.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>I_(te.getNumber("WEBGL_VERSION")));te.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{const n=te.getNumber("WEBGL_VERSION");return n===0?0:k_(n)});te.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>te.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!Rh());te.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>__(te.getNumber("WEBGL_VERSION")));te.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>te.getBool("WEBGL_FORCE_F16_TEXTURES")?!1:te.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"));te.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>R_(te.getNumber("WEBGL_VERSION")));te.registerFlag("WEBGL_FENCE_API_ENABLED",()=>O_(te.getNumber("WEBGL_VERSION")));te.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>te.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0);te.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,n=>{if(n<0&&n!==-1)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${n}.`)});te.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>Rh()?1:-1,n=>{if(n<0&&n!==-1)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${n}.`)});te.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128);te.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1);te.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5);te.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128);te.registerFlag("WEBGL_EXP_CONV",()=>!1);te.registerFlag("SOFTWARE_WEBGL_ENABLED",()=>te.getBool("IS_TEST"));te.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",()=>1/0);te.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",()=>!1);te.registerFlag("WEBGL2_ISNAN_CUSTOM",()=>!1);te.registerFlag("ENGINE_COMPILE_ONLY",()=>!1);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ct(){let n,e,t,r,s,i,o,a,u,l;return B().getNumber("WEBGL_VERSION")===2?(n="#version 300 es",e="in",t="out",r="in",s="texture",i="outputColor",o="out vec4 outputColor;",a=B().getBool("WEBGL2_ISNAN_CUSTOM")?`
      bool isnan_custom(float val) {
        uint floatToUint = floatBitsToUint(val);
        return (floatToUint & 0x7fffffffu) > 0x7f800000u;
      }

      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan_custom(val.x),
          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));
      }

      #define isnan(value) isnan_custom(value)
    `:"",u="",l=`
      #define round(value) newRound(value)
      int newRound(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 newRound(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `):(n="",e="attribute",t="varying",r="varying",s="texture2D",i="gl_FragColor",o="",a=`
      #define isnan(value) isnan_custom(value)
      bool isnan_custom(float val) {
        return (val > 0. || val < 1. || val == 0.) ? false : true;
      }
      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));
      }
    `,u=`
      uniform float INFINITY;

      bool isinf(float val) {
        return abs(val) == INFINITY;
      }
      bvec4 isinf(vec4 val) {
        return equal(abs(val), vec4(INFINITY));
      }
    `,l=`
      int round(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 round(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `),{version:n,attribute:e,varyingVs:t,varyingFs:r,texture2D:s,output:i,defineOutput:o,defineSpecialNaN:a,defineSpecialInf:u,defineRound:l}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fr(n,e,t="index"){const r=ze(e);return r.map((s,i)=>{const o=`int ${n[i]} = ${t} / ${s}`,a=i===r.length-1?`int ${n[i+1]} = ${t} - ${n[i]} * ${s}`:`index -= ${n[i]} * ${s}`;return`${o}; ${a};`}).join("")}function ea(n,e,t="index"){const r=ze(e);return r.map((s,i)=>{const o=`int ${n[i]} = ${t} / outShapeStrides[${i}]`,a=i===r.length-1?`int ${n[i+1]} = ${t} - ${n[i]} * outShapeStrides[${i}]`:`index -= ${n[i]} * outShapeStrides[${i}]`;return`${o}; ${a};`}).join("")}function D_(n,e){const t=n.length,r=n.map(i=>`${e}[${i}]`),s=new Array(t-1);s[t-2]=r[t-1];for(let i=t-3;i>=0;--i)s[i]=`(${s[i+1]} * ${r[i+1]})`;return s}function F_(n,e,t="index"){const r=n.map((i,o)=>o),s=D_(r,e);return s.map((i,o)=>{const a=`int ${n[o]} = ${t} / ${s[o]}`,u=o===s.length-1?`int ${n[o+1]} = ${t} - ${n[o]} * ${s[o]}`:`index -= ${n[o]} * ${s[o]}`;return`${a}; ${u};`}).join("")}function Kd(n){const e=ze(n).map(t=>t.toString());return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * ${e[0]} + coords.y * ${e[1]} + coords.z;
  }
`}function Xd(){return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;
  }
`}const N1=`
  const float FLOAT_MAX = 1.70141184e38;
  const float FLOAT_MIN = 1.17549435e-38;

  lowp vec4 encode_float(highp float v) {
    if (isnan(v)) {
      return vec4(255, 255, 255, 255);
    }

    highp float av = abs(v);

    if(av < FLOAT_MIN) {
      return vec4(0.0, 0.0, 0.0, 0.0);
    } else if(v > FLOAT_MAX) {
      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
    } else if(v < -FLOAT_MAX) {
      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
    }

    highp vec4 c = vec4(0,0,0,0);

    highp float e = floor(log2(av));
    highp float m = exp2(fract(log2(av))) - 1.0;

    c[2] = floor(128.0 * m);
    m -= c[2] / 128.0;
    c[1] = floor(32768.0 * m);
    m -= c[1] / 32768.0;
    c[0] = floor(8388608.0 * m);

    highp float ebias = e + 127.0;
    c[3] = floor(ebias / 2.0);
    ebias -= c[3] * 2.0;
    c[2] += floor(ebias) * 128.0;

    c[3] += 128.0 * step(0.0, -v);

    return c / 255.0;
  }
`;/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{getBroadcastDims:I1}=i1;function P_(n,e,t){const r=[];if(n.forEach(p=>{const m=q(p.shapeInfo.logicalShape);if(p.shapeInfo.isUniform?r.push(`uniform float ${p.name}${m>1?`[${m}]`:""};`):(r.push(`uniform sampler2D ${p.name};`),r.push(`uniform int offset${p.name};`)),t.enableShapeUniforms){const{uniformShape:y}=Yd(t.packedInputs,p.shapeInfo.logicalShape,p.shapeInfo.texShape);switch(y.length){case 1:r.push(`uniform int ${p.name}Shape;`);break;case 2:r.push(`uniform ivec2 ${p.name}Shape;`);break;case 3:r.push(`uniform ivec3 ${p.name}Shape;`);break;case 4:r.push(`uniform ivec4 ${p.name}Shape;`);break}r.push(`uniform ivec2 ${p.name}TexShape;`)}}),t.enableShapeUniforms){switch(e.logicalShape.length){case 1:r.push("uniform int outShape;");break;case 2:r.push("uniform ivec2 outShape;"),r.push("uniform int outShapeStrides;");break;case 3:r.push("uniform ivec3 outShape;"),r.push("uniform ivec2 outShapeStrides;");break;case 4:r.push("uniform ivec4 outShape;"),r.push("uniform ivec3 outShapeStrides;");break}r.push("uniform ivec2 outTexShape;")}t.customUniforms&&t.customUniforms.forEach(p=>{r.push(`uniform ${p.type} ${p.name}${p.arrayIndex?`[${p.arrayIndex}]`:""};`)});const s=r.join(`
`),i=n.map(p=>L_(p,e,t.packedInputs,t.enableShapeUniforms)).join(`
`),o=e.texShape,a=ct(),u=V_(a);let l,c,h=W_(a);return e.isPacked?(l=B_(e.logicalShape,o,t.enableShapeUniforms),c=z_(a)):(l=M_(e.logicalShape,o,t.enableShapeUniforms),c=U_(a)),t.packedInputs&&(h+=q_),[h,u,c,s,l,i,t.userCode].join(`
`)}function cs(n,e=!1){const t=n.shapeInfo.logicalShape;switch(t.length){case 0:return iR(n,e);case 1:return aR(n,e);case 2:return lR(n,e);case 3:return hR(n,e);case 4:return pR(n,e);case 5:return fR(n);case 6:return mR(n);default:throw new Error(`${t.length}-D input sampling is not yet supported`)}}function k1(n,e){switch(n.shapeInfo.logicalShape.length){case 0:return sR(n);case 1:return oR(n,e);case 2:return uR(n,e);case 3:return cR(n,e);default:return dR(n,e)}}function L_(n,e,t=!1,r){let s="";t?s+=k1(n,r):s+=cs(n,r);const i=n.shapeInfo.logicalShape,o=e.logicalShape;return i.length<=o.length&&(t?s+=gR(n,e):s+=yR(n,e)),s}function B_(n,e,t){switch(n.length){case 0:return _1();case 1:return K_(n,e,t);case 2:return nR(n,e,t);case 3:return Y_(n,e,t);default:return Z_(n,e,t)}}function M_(n,e,t){switch(n.length){case 0:return _1();case 1:return X_(n,e,t);case 2:return rR(n,e,t);case 3:return Q_(n,e,t);case 4:return J_(n,e,t);case 5:return eR(n,e);case 6:return tR(n,e);default:throw new Error(`${n.length}-D output sampling is not yet supported`)}}function V_(n){return`
    float sampleTexture(sampler2D textureSampler, vec2 uv) {
      return ${n.texture2D}(textureSampler, uv).r;
    }
  `}function U_(n){return`
    void setOutput(float val) {
      ${n.output} = vec4(val, 0, 0, 0);
    }
  `}function z_(n){return`
    void setOutput(vec4 val) {
      ${n.output} = val;
    }
  `}function W_(n){return`${n.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${n.varyingFs} vec2 resultUV;
    ${n.defineOutput}
    const vec2 halfCR = vec2(0.5, 0.5);

    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    uniform float NAN;
    ${n.defineSpecialNaN}
    ${n.defineSpecialInf}
    ${n.defineRound}

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    int idiv(int a, int b, float sign) {
      int res = a / b;
      int mod = imod(a, b);
      if (sign < 0. && mod != 0) {
        res -= 1;
      }
      return res;
    }

    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    #define HASHSCALE1 443.8975
    float random(float seed){
      vec2 p = resultUV * seed;
      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);
      p3 += dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${G_}
    ${H_}
    ${j_}
  `}const G_=`
vec2 uvFromFlat(int texNumR, int texNumC, int index) {
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
  int texelIndex = index / 2;
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,H_=`
vec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,
  int texNumC, int row, int col) {
  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,j_=`
vec2 packedUVfrom3D(int texNumR, int texNumC,
    int texelsInBatch, int texelsInLogicalRow, int b,
    int row, int col) {
  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,q_=`
  float getChannel(vec4 frag, vec2 innerDims) {
    vec2 modCoord = mod(innerDims, 2.);
    return modCoord.x == 0. ?
      (modCoord.y == 0. ? frag.r : frag.g) :
      (modCoord.y == 0. ? frag.b : frag.a);
  }
  float getChannel(vec4 frag, int dim) {
    float modCoord = mod(float(dim), 2.);
    return modCoord == 0. ? frag.r : frag.g;
  }
`;function _1(){return`
    int getOutputCoords() {
      return 0;
    }
  `}function K_(n,e,t){const r=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];return r[0]===1?t?`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ${r[1]}.0);
      }
    `:r[1]===1?t?`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ${r[0]}.0);
      }
    `:t?`
    int getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${r[0]}, ${r[1]}));
      return 2 * (resTexRC.x * ${r[1]} + resTexRC.y);
    }
  `}function X_(n,e,t){return e[0]===1?t?`
      int getOutputCoords() {
        return int(resultUV.x * float(outTexShape[1]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.x * ${e[1]}.0);
      }
    `:e[1]===1?t?`
      int getOutputCoords() {
        return int(resultUV.y * float(outTexShape[0]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.y * ${e[0]}.0);
      }
    `:t?`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      return resTexRC.x * outTexShape[1] + resTexRC.y;
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      return resTexRC.x * ${e[1]} + resTexRC.y;
    }
  `}function Y_(n,e,t){if(t)return`
    ivec3 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec3(b, r, c);
    }
  `;const r=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],s=Math.ceil(n[2]/2),i=s*Math.ceil(n[1]/2);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${r[0]}, ${r[1]}));
      int index = resTexRC.x * ${r[1]} + resTexRC.y;

      int b = index / ${i};
      index -= b * ${i};

      int r = 2 * (index / ${s});
      int c = imod(index, ${s}) * 2;

      return ivec3(b, r, c);
    }
  `}function Q_(n,e,t){if(t)return`
  ivec3 getOutputCoords() {
    ivec2 resTexRC = ivec2(resultUV.yx *
                           vec2(outTexShape[0], outTexShape[1]));
    int index = resTexRC.x * outTexShape[1] + resTexRC.y;
    ${ea(["r","c","d"],n)}
    return ivec3(r, c, d);
  }
`;const r=Fr(["r","c","d"],n);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      ${r}
      return ivec3(r, c, d);
    }
  `}function Z_(n,e,t){if(t)return`
    ivec4 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatchN = texelsInBatch * outShape[1];

      int b2 = index / texelsInBatchN;
      index -= b2 * texelsInBatchN;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec4(b2, b, r, c);
    }
  `;const r=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],s=Math.ceil(n[n.length-1]/2),i=s*Math.ceil(n[n.length-2]/2);let o=i,a="",u="b, r, c";for(let l=2;l<n.length-1;l++)o*=n[n.length-l-1],a=`
      int b${l} = index / ${o};
      index -= b${l} * ${o};
    `+a,u=`b${l}, `+u;return`
    ivec${n.length} getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${r[0]}, ${r[1]}));
      int index = resTexRC.x * ${r[1]} + resTexRC.y;

      ${a}

      int b = index / ${i};
      index -= b * ${i};

      int r = 2 * (index / ${s});
      int c = imod(index, ${s}) * 2;

      return ivec${n.length}(${u});
    }
  `}function J_(n,e,t){if(t)return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      ${ea(["r","c","d","d2"],n)}
      return ivec4(r, c, d, d2);
    }
  `;const r=Fr(["r","c","d","d2"],n);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      ${r}
      return ivec4(r, c, d, d2);
    }
  `}function eR(n,e){const t=Fr(["r","c","d","d2","d3"],n);return`
    ivec5 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${e[0]},
                             ${e[1]}));

      int index = resTexRC.x * ${e[1]} + resTexRC.y;

      ${t}

      ivec5 outShape = ivec5(r, c, d, d2, d3);
      return outShape;
    }
  `}function tR(n,e){const t=Fr(["r","c","d","d2","d3","d4"],n);return`
    ivec6 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;

      ${t}

      ivec6 result = ivec6(r, c, d, d2, d3, d4);
      return result;
    }
  `}function nR(n,e,t){const r=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];if(Oe(n,e))return t?`
      ivec2 getOutputCoords() {
        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return 2 * ivec2(resultUV.yx * vec2(${r[0]}, ${r[1]}));
      }
    `;const s=Math.ceil(n[1]/2);return t?`
    ivec2 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));

      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;
      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${r[0]}, ${r[1]}));

      int index = resTexRC.x * ${r[1]} + resTexRC.y;
      int r = 2 * (index / ${s});
      int c = imod(index, ${s}) * 2;

      return ivec2(r, c);
    }
  `}function rR(n,e,t){return Oe(n,e)?t?`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(${e[0]}, ${e[1]}));
      }
    `:n[1]===1?t?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(index, 0);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${e[0]}, ${e[1]}));
        int index = resTexRC.x * ${e[1]} + resTexRC.y;
        return ivec2(index, 0);
      }
    `:n[0]===1?t?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(0, index);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${e[0]}, ${e[1]}));
        int index = resTexRC.x * ${e[1]} + resTexRC.y;
        return ivec2(0, index);
      }
    `:t?`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      int r = index / outShape[1];
      int c = index - r * outShape[1];
      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      int r = index / ${n[1]};
      int c = index - r * ${n[1]};
      return ivec2(r, c);
    }
  `}function Pr(n){return`offset${n}`}function sR(n){const e=n.name,t="get"+e.charAt(0).toUpperCase()+e.slice(1),r=ct();return`
    vec4 ${t}() {
      return ${r.texture2D}(${e}, halfCR);
    }
  `}function iR(n,e){const t=n.name,r="get"+t.charAt(0).toUpperCase()+t.slice(1);if(n.shapeInfo.isUniform)return`float ${r}() {return ${t};}`;const[s,i]=n.shapeInfo.texShape;if(s===1&&i===1)return`
      float ${r}() {
        return sampleTexture(${t}, halfCR);
      }
    `;const o=Pr(t);if(e)return`
    float ${r}() {
      vec2 uv = uvFromFlat(${t}TexShape[0], ${t}TexShape[1], ${o});
      return sampleTexture(${t}, uv);
    }
  `;const[a,u]=n.shapeInfo.texShape;return`
    float ${r}() {
      vec2 uv = uvFromFlat(${a}, ${u}, ${o});
      return sampleTexture(${t}, uv);
    }
  `}function oR(n,e){const t=n.name,r="get"+t.charAt(0).toUpperCase()+t.slice(1),s=n.shapeInfo.texShape,i=ct();if(e)return`
    vec4 ${r}(int index) {
      ivec2 packedTexShape = ivec2(ceil(float(${t}TexShape[0]) / 2.0), ceil(float(${t}TexShape[1]) / 2.0));
      vec2 uv = packedUVfrom1D(
        packedTexShape[0], packedTexShape[1], index);
      return ${i.texture2D}(${t}, uv);
    }
  `;const o=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];return`
    vec4 ${r}(int index) {
      vec2 uv = packedUVfrom1D(
        ${o[0]}, ${o[1]}, index);
      return ${i.texture2D}(${t}, uv);
    }
  `}function aR(n,e){const t=n.name,r="get"+t.charAt(0).toUpperCase()+t.slice(1);if(n.shapeInfo.isUniform)return`
      float ${r}(int index) {
        ${hs(n)}
      }
    `;const s=n.shapeInfo.texShape,i=s[0],o=s[1];if(o===1&&i===1)return`
      float ${r}(int index) {
        return sampleTexture(${t}, halfCR);
      }
    `;const a=Pr(t);return o===1?e?`
      float ${r}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${a}) + 0.5) / float(${t}TexShape[0]));
        return sampleTexture(${t}, uv);
      }
    `:`
      float ${r}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${a}) + 0.5) / ${i}.0);
        return sampleTexture(${t}, uv);
      }
    `:i===1?e?`
      float ${r}(int index) {
        vec2 uv = vec2((float(index + ${a}) + 0.5) / float(${t}TexShape[1]), 0.5);
        return sampleTexture(${t}, uv);
      }
    `:`
      float ${r}(int index) {
        vec2 uv = vec2((float(index + ${a}) + 0.5) / ${o}.0, 0.5);
        return sampleTexture(${t}, uv);
      }
    `:e?`
    float ${r}(int index) {
      vec2 uv = uvFromFlat(${t}TexShape[0], ${t}TexShape[1], index + ${a});
      return sampleTexture(${t}, uv);
    }
  `:`
    float ${r}(int index) {
      vec2 uv = uvFromFlat(${i}, ${o}, index + ${a});
      return sampleTexture(${t}, uv);
    }
  `}function uR(n,e){const t=n.shapeInfo.logicalShape,r=n.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),i=n.shapeInfo.texShape,o=i[0],a=i[1],u=ct();if(i!=null&&Oe(t,i))return e?`
      vec4 ${s}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);

        return ${u.texture2D}(${r}, uv);
      }
    `:`
      vec4 ${s}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${a}.0, ${o}.0);

        return ${u.texture2D}(${r}, uv);
      }
    `;if(e)return`
    vec4 ${s}(int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${r}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);
      return ${u.texture2D}(${r}, uv);
    }
  `;const l=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)],c=Math.ceil(t[1]/2);return`
    vec4 ${s}(int row, int col) {
      vec2 uv = packedUVfrom2D(${c}, ${l[0]}, ${l[1]}, row, col);
      return ${u.texture2D}(${r}, uv);
    }
  `}function lR(n,e){const t=n.shapeInfo.logicalShape,r=n.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),i=n.shapeInfo.texShape;if(i!=null&&Oe(t,i)){if(e)return`
      float ${s}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `;const d=i[0],p=i[1];return`
    float ${s}(int row, int col) {
      vec2 uv = (vec2(col, row) + halfCR) / vec2(${p}.0, ${d}.0);
      return sampleTexture(${r}, uv);
    }
  `}const{newShape:o,keptDims:a}=Fn(t),u=o;if(u.length<t.length){const d=ds(n,u),p=["row","col"];return`
      ${cs(d,e)}
      float ${s}(int row, int col) {
        return ${s}(${ps(p,a)});
      }
    `}if(n.shapeInfo.isUniform)return`
      float ${s}(int row, int col) {
        int index = round(dot(vec2(row, col), vec2(${t[1]}, 1)));
        ${hs(n)}
      }
    `;const l=i[0],c=i[1],h=Pr(r);return c===1?e?`
      float ${s}(int row, int col) {
        float index = dot(vec3(row, col, ${h}), vec3(${r}Shape[1], 1, 1));
        vec2 uv = vec2(0.5, (index + 0.5) / float(${r}TexShape[0]));
        return sampleTexture(${r}, uv);
      }
    `:`
    float ${s}(int row, int col) {
      float index = dot(vec3(row, col, ${h}), vec3(${t[1]}, 1, 1));
      vec2 uv = vec2(0.5, (index + 0.5) / ${l}.0);
      return sampleTexture(${r}, uv);
    }
  `:l===1?e?`
      float ${s}(int row, int col) {
        float index = dot(vec3(row, col, ${h}), vec3(${r}Shape[1], 1, 1));
        vec2 uv = vec2((index + 0.5) / float(${r}TexShape[1]), 0.5);
        return sampleTexture(${r}, uv);
      }
    `:`
    float ${s}(int row, int col) {
      float index = dot(vec3(row, col, ${h}), vec3(${t[1]}, 1, 1));
      vec2 uv = vec2((index + 0.5) / ${c}.0, 0.5);
      return sampleTexture(${r}, uv);
    }
  `:e?`
      float ${s}(int row, int col) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${r}Shape[1] + col + ${h};
        vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);
        return sampleTexture(${r}, uv);
      }
    `:`
  float ${s}(int row, int col) {
    // Explicitly use integer operations as dot() only works on floats.
    int index = row * ${t[1]} + col + ${h};
    vec2 uv = uvFromFlat(${l}, ${c}, index);
    return sampleTexture(${r}, uv);
  }
`}function cR(n,e){const t=n.shapeInfo.logicalShape,r=n.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),i=n.shapeInfo.texShape,o=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)];if(t[0]===1){const d=t.slice(1),p=[1,2],m=ds(n,d),y=["b","row","col"];return`
        ${k1(m,e)}
        vec4 ${s}(int b, int row, int col) {
          return ${s}(${ps(y,p)});
        }
      `}const a=ct();if(e)return`
    vec4 ${s}(int b, int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${r}Shape[2]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${r}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom3D(
        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);
      return ${a.texture2D}(${r}, uv);
    }
  `;const u=o[0],l=o[1],c=Math.ceil(t[2]/2),h=c*Math.ceil(t[1]/2);return`
    vec4 ${s}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${u}, ${l}, ${h}, ${c}, b, row, col);
      return ${a.texture2D}(${r}, uv);
    }
  `}function hR(n,e){const t=n.shapeInfo.logicalShape,r=n.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),i=t[1]*t[2],o=t[2],{newShape:a,keptDims:u}=Fn(t),l=a;if(l.length<t.length){const y=ds(n,l),g=["row","col","depth"];return`
        ${cs(y,e)}
        float ${s}(int row, int col, int depth) {
          return ${s}(${ps(g,u)});
        }
      `}if(n.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth) {
        int index = round(dot(vec3(row, col, depth),
                          vec3(${i}, ${o}, 1)));
        ${hs(n)}
      }
    `;const c=n.shapeInfo.texShape,h=c[0],d=c[1],p=n.shapeInfo.flatOffset;if(d===i&&p==null)return e?`
      float ${s}(int row, int col, int depth) {
        int stride1 = ${r}Shape[2];
        float texR = float(row);
        float texC = dot(vec2(col, depth), vec2(stride1, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `:`
        float ${s}(int row, int col, int depth) {
          float texR = float(row);
          float texC = dot(vec2(col, depth), vec2(${o}, 1));
          vec2 uv = (vec2(texC, texR) + halfCR) /
                     vec2(${d}.0, ${h}.0);
          return sampleTexture(${r}, uv);
        }
      `;if(d===o&&p==null)return e?`
      float ${s}(int row, int col, int depth) {
        float texR = dot(vec2(row, col), vec2(${r}Shape[1], 1));
        float texC = float(depth);
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `:`
    float ${s}(int row, int col, int depth) {
      float texR = dot(vec2(row, col), vec2(${t[1]}, 1));
      float texC = float(depth);
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${d}.0, ${h}.0);
      return sampleTexture(${r}, uv);
    }
  `;const m=Pr(r);return e?`
    float ${s}(int row, int col, int depth) {
      // Explicitly use integer operations as dot() only works on floats.
      int stride0 = ${r}Shape[1] * ${r}Shape[2];
      int stride1 = ${r}Shape[2];
      int index = row * stride0 + col * stride1 + depth + ${m};
      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);
      return sampleTexture(${r}, uv);
    }
    `:`
      float ${s}(int row, int col, int depth) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${i} + col * ${o} + depth + ${m};
        vec2 uv = uvFromFlat(${h}, ${d}, index);
        return sampleTexture(${r}, uv);
      }
  `}function dR(n,e){const t=n.name,r="get"+t.charAt(0).toUpperCase()+t.slice(1),s=ct();if(e)return`
    vec4 ${r}(int b2, int b, int row, int col) {
      int valuesPerRow = int(ceil(float(${t}Shape[3]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${t}Shape[2]) / 2.0));
      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);
      texelsInBatch *= ${t}Shape[1];
      index = b2 * texelsInBatch + index;
      ivec2 packedTexShape = ivec2(ceil(float(${t}TexShape[0]) / 2.0), ceil(float(${t}TexShape[1]) / 2.0));
      int texR = index / packedTexShape[1];
      int texC = index - texR * packedTexShape[1];
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${s.texture2D}(${t}, uv);
    }
  `;const i=n.shapeInfo.logicalShape,o=i.length,a=n.shapeInfo.texShape,u=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)],l=u[0],c=u[1],h=Math.ceil(i[o-1]/2);let d=h*Math.ceil(i[o-2]/2),p="int b, int row, int col",m=`b * ${d} + (row / 2) * ${h} + (col / 2)`;for(let y=2;y<o-1;y++)p=`int b${y}, `+p,d*=i[o-y-1],m=`b${y} * ${d} + `+m;return`
    vec4 ${r}(${p}) {
      int index = ${m};
      int texR = index / ${c};
      int texC = index - texR * ${c};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${c}, ${l});
      return ${s.texture2D}(${t}, uv);
    }
  `}function pR(n,e){const t=n.shapeInfo.logicalShape,r=n.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),i=t[3],o=t[2]*i,a=t[1]*o,{newShape:u,keptDims:l}=Fn(t);if(u.length<t.length){const $=ds(n,u),C=["row","col","depth","depth2"];return`
      ${cs($,e)}
      float ${s}(int row, int col, int depth, int depth2) {
        return ${s}(${ps(C,l)});
      }
    `}if(n.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth, int depth2) {
        int index = round(dot(vec4(row, col, depth, depth2),
                          vec4(${a}, ${o}, ${i}, 1)));
        ${hs(n)}
      }
    `;const c=n.shapeInfo.flatOffset,h=n.shapeInfo.texShape,d=h[0],p=h[1],m=`int stride2 = ${r}Shape[3];`,y=`int stride1 = ${r}Shape[2] * stride2;`,g=`int stride0 = ${r}Shape[1] * stride1;`;if(p===a&&c==null)return e?`
      float ${s}(int row, int col, int depth, int depth2) {
        ${m}
        ${y}
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(stride1, stride2, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `:`
      float ${s}(int row, int col, int depth, int depth2) {
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(${o}, ${i}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${p}.0, ${d}.0);
        return sampleTexture(${r}, uv);
      }
    `;if(p===i&&c==null)return e?`
      float ${s}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${r}Shape[1] * ${r}Shape[2], ${r}Shape[2], 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `:`
      float ${s}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${t[1]*t[2]}, ${t[2]}, 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${p}.0, ${d}.0);
        return sampleTexture(${r}, uv);
      }
    `;const x=Pr(r);return e?`
    float ${s}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      ${m}
      ${y}
      ${g}
      int index = row * stride0 + col * stride1 +
          depth * stride2 + depth2;
      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index + ${x});
      return sampleTexture(${r}, uv);
    }
  `:`
    float ${s}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${a} + col * ${o} +
          depth * ${i} + depth2;
      vec2 uv = uvFromFlat(${d}, ${p}, index + ${x});
      return sampleTexture(${r}, uv);
    }
  `}function fR(n){const e=n.shapeInfo.logicalShape,t=n.name,r="get"+t.charAt(0).toUpperCase()+t.slice(1),s=e[4],i=e[3]*s,o=e[2]*i,a=e[1]*o,{newShape:u,keptDims:l}=Fn(e);if(u.length<e.length){const y=ds(n,u),g=["row","col","depth","depth2","depth3"];return`
      ${cs(y)}
      float ${r}(int row, int col, int depth, int depth2, int depth3) {
        return ${r}(${ps(g,l)});
      }
    `}if(n.shapeInfo.isUniform)return`
      float ${r}(int row, int col, int depth, int depth2, int depth3) {
        float index = dot(
          vec4(row, col, depth, depth2),
          vec4(${a}, ${o}, ${i}, ${s})) +
          depth3;
        ${hs(n)}
      }
    `;const c=n.shapeInfo.flatOffset,h=n.shapeInfo.texShape,d=h[0],p=h[1];if(p===a&&c==null)return`
      float ${r}(int row, int col, int depth, int depth2, int depth3) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
                         vec4(${o}, ${i}, ${s}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${p}.0, ${d}.0);
        return sampleTexture(${t}, uv);
      }
    `;if(p===s&&c==null)return`
      float ${r}(int row, int col, int depth, int depth2, int depth3) {
        float texR = dot(
          vec4(row, col, depth, depth2),
          vec4(${e[1]*e[2]*e[3]},
               ${e[2]*e[3]}, ${e[3]}, 1));
        int texC = depth3;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${p}.0, ${d}.0);
        return sampleTexture(${t}, uv);
      }
    `;const m=Pr(t);return`
    float ${r}(int row, int col, int depth, int depth2, int depth3) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${a} + col * ${o} + depth * ${i} +
          depth2 * ${s} + depth3 + ${m};
      vec2 uv = uvFromFlat(${d}, ${p}, index);
      return sampleTexture(${t}, uv);
    }
  `}function mR(n){const e=n.shapeInfo.logicalShape,t=n.name,r="get"+t.charAt(0).toUpperCase()+t.slice(1),{newShape:s,keptDims:i}=Fn(e);if(s.length<e.length){const g=ds(n,s),x=["row","col","depth","depth2","depth3","depth4"];return`
      ${cs(g)}
      float ${r}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        return ${r}(${ps(x,i)});
      }
    `}const o=e[5],a=e[4]*o,u=e[3]*a,l=e[2]*u,c=e[1]*l;if(n.shapeInfo.isUniform)return`
      float ${r}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
        int index = round(dot(
          vec4(row, col, depth, depth2),
          vec4(${c}, ${l}, ${u}, ${a})) +
          dot(
            vec2(depth3, depth4),
            vec2(${o}, 1)));
        ${hs(n)}
      }
    `;const h=n.shapeInfo.flatOffset,d=n.shapeInfo.texShape,p=d[0],m=d[1];if(m===c&&h==null)return`
      float ${r}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
          vec4(${l}, ${u}, ${a}, ${o})) +
               float(depth4);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${m}.0, ${p}.0);
        return sampleTexture(${t}, uv);
      }
    `;if(m===o&&h==null)return`
      float ${r}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        float texR = dot(vec4(row, col, depth, depth2),
          vec4(${e[1]*e[2]*e[3]*e[4]},
               ${e[2]*e[3]*e[4]},
               ${e[3]*e[4]},
               ${e[4]})) + float(depth3);
        int texC = depth4;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${m}.0, ${p}.0);
        return sampleTexture(${t}, uv);
      }
    `;const y=Pr(t);return`
    float ${r}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${c} + col * ${l} + depth * ${u} +
          depth2 * ${a} + depth3 * ${o} + depth4 + ${y};
      vec2 uv = uvFromFlat(${p}, ${m}, index);
      return sampleTexture(${t}, uv);
    }
  `}function hs(n){const e=n.name,t=q(n.shapeInfo.logicalShape);return t<2?`return ${e};`:`
    for (int i = 0; i < ${t}; i++) {
      if (i == index) {
        return ${e}[i];
      }
    }
  `}function gR(n,e){const t=n.name,r=t.charAt(0).toUpperCase()+t.slice(1),s="get"+r+"AtOutCoords",i=n.shapeInfo.logicalShape.length,o=e.logicalShape.length,a=I1(n.shapeInfo.logicalShape,e.logicalShape),u=Ee(o),l=o-i;let c;const h=["x","y","z","w","u","v"];i===0?c="":o<2&&a.length>=1?c="coords = 0;":c=a.map($=>`coords.${h[$+l]} = 0;`).join(`
`);let d="";o<2&&i>0?d="coords":d=n.shapeInfo.logicalShape.map(($,C)=>`coords.${h[C+l]}`).join(", ");let p="return outputValue;";const y=q(n.shapeInfo.logicalShape)===1,x=q(e.logicalShape)===1;if(i===1&&!y&&!x)p=`
      return vec4(outputValue.xy, outputValue.xy);
    `;else if(y&&!x)o===1?p=`
        return vec4(outputValue.x, outputValue.x, 0., 0.);
      `:p=`
        return vec4(outputValue.x);
      `;else if(a.length){const $=i-2,C=i-1;a.indexOf($)>-1&&a.indexOf(C)>-1?p="return vec4(outputValue.x);":a.indexOf($)>-1?p="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":a.indexOf(C)>-1&&(p="return vec4(outputValue.xx, outputValue.zz);")}return`
    vec4 ${s}() {
      ${u} coords = getOutputCoords();
      ${c}
      vec4 outputValue = get${r}(${d});
      ${p}
    }
  `}function yR(n,e){const t=n.name,r=t.charAt(0).toUpperCase()+t.slice(1),s="get"+r+"AtOutCoords",i=e.texShape,o=n.shapeInfo.texShape,a=n.shapeInfo.logicalShape.length,u=e.logicalShape.length;if(!n.shapeInfo.isUniform&&a===u&&n.shapeInfo.flatOffset==null&&Oe(o,i))return`
      float ${s}() {
        return sampleTexture(${t}, resultUV);
      }
    `;const l=Ee(u),c=I1(n.shapeInfo.logicalShape,e.logicalShape),h=u-a;let d;const p=["x","y","z","w","u","v"];a===0?d="":u<2&&c.length>=1?d="coords = 0;":d=c.map(y=>`coords.${p[y+h]} = 0;`).join(`
`);let m="";return u<2&&a>0?m="coords":m=n.shapeInfo.logicalShape.map((y,g)=>`coords.${p[g+h]}`).join(", "),`
    float ${s}() {
      ${l} coords = getOutputCoords();
      ${d}
      return get${r}(${m});
    }
  `}function Ee(n){if(n<=1)return"int";if(n===2)return"ivec2";if(n===3)return"ivec3";if(n===4)return"ivec4";if(n===5)return"ivec5";if(n===6)return"ivec6";throw Error(`GPU for rank ${n} is not yet supported`)}function Yd(n,e,t){const{newShape:r,keptDims:s}=Fn(e),i=e.length,o=n&&i===3&&e[0]===1,a=o?e.slice(1):r,u=!n&&i>1&&!Oe(e,t)&&r.length<i||o;return{useSqueezeShape:u,uniformShape:u?a:e,keptDims:s}}function ds(n,e){const t=JSON.parse(JSON.stringify(n));return t.shapeInfo.logicalShape=e,t}function ps(n,e){return e.map(t=>n[t]).join(", ")}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xR(n,e,t,r){const s=t.map((c,h)=>{const d={logicalShape:c.shape,texShape:c.isUniform?null:c.texData.texShape,isUniform:c.isUniform,isPacked:c.isUniform?!1:c.texData.isPacked,flatOffset:null};return c.texData!=null&&c.texData.slice!=null&&c.texData.slice.flatOffset>0&&(d.flatOffset=c.texData.slice.flatOffset),{name:e.variableNames[h],shapeInfo:d}}),i=s.map(c=>c.shapeInfo),o={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},a=P_(s,o,e),u=h_(n.gl,a),l=n.createProgram(u);return B().get("ENGINE_COMPILE_ONLY")?{program:e,fragmentShader:u,source:a,webGLProgram:l,inShapeInfos:i,outShapeInfo:o,uniformLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,inShapesLocations:null,inTexShapesLocations:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:Object.assign({program:e,fragmentShader:u,source:a,webGLProgram:l,inShapeInfos:i,outShapeInfo:o},R1(n,e,l))}function R1(n,e,t){const r={},s={},i={},o=[];let a,u,l,c=null,h=null;h=n.getUniformLocation(t,"NAN",!1),B().getNumber("WEBGL_VERSION")===1&&(c=n.getUniformLocation(t,"INFINITY",!1));const d=!1;for(let p=0;p<e.variableNames.length;p++){const m=e.variableNames[p];r[m]=n.getUniformLocation(t,m,d),r[`offset${m}`]=n.getUniformLocation(t,`offset${m}`,d),e.enableShapeUniforms&&(s[`${m}Shape`]=n.getUniformLocation(t,`${m}Shape`,d),i[`${m}TexShape`]=n.getUniformLocation(t,`${m}TexShape`,d))}return e.enableShapeUniforms&&(a=n.getUniformLocation(t,"outShape",d),l=n.getUniformLocation(t,"outShapeStrides",d),u=n.getUniformLocation(t,"outTexShape",d)),e.customUniforms&&e.customUniforms.forEach((p,m)=>{o[m]=n.getUniformLocation(t,p.name,d)}),{uniformLocations:r,customUniformLocations:o,infLoc:c,nanLoc:h,inShapesLocations:s,inTexShapesLocations:i,outShapeLocation:a,outShapeStridesLocation:l,outTexShapeLocation:u}}function Hf(n,e){if(n.length!==e.length)throw Error(`Binary was compiled with ${n.length} inputs, but was executed with ${e.length} inputs`);n.forEach((t,r)=>{const s=t.logicalShape,i=e[r],o=i.shape;if(!Oe(s,o))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${s} and ${o} must match`);if(t.isUniform&&i.isUniform)return;const a=t.texShape,u=i.isUniform?null:i.texData.texShape;if(!Oe(a,u))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${a} and ${u} must match`)})}function bR(n,e,t,r,s){e.program.enableShapeUniforms||(Hf(e.inShapeInfos,t),Hf([e.outShapeInfo],[r]));const i=r.texData.texture,o=r.texData.texShape;r.texData.isPacked?n.setOutputPackedMatrixTexture(i.texture,o[0],o[1]):n.setOutputMatrixTexture(i.texture,o[0],o[1]),n.setProgram(e.webGLProgram),B().getNumber("WEBGL_VERSION")===1&&e.infLoc!==null&&n.gl.uniform1f(e.infLoc,1/0),e.nanLoc!==null&&n.gl.uniform1f(e.nanLoc,NaN),t.forEach((u,l)=>{const c=e.program.variableNames[l],h=e.uniformLocations[c],d=e.uniformLocations[`offset${c}`],p=e.inShapesLocations[`${c}Shape`],m=e.inTexShapesLocations[`${c}TexShape`];if(p){const{uniformShape:y}=Yd(e.program.packedInputs,u.shape,u.texData.texShape);switch(y.length){case 1:n.gl.uniform1iv(p,new Int32Array(y));break;case 2:n.gl.uniform2iv(p,new Int32Array(y));break;case 3:n.gl.uniform3iv(p,new Int32Array(y));break;case 4:n.gl.uniform4iv(p,new Int32Array(y));break}}if(m&&n.gl.uniform2i(m,u.texData.texShape[0],u.texData.texShape[1]),h!=null){if(u.isUniform){if(q(u.shape)<2)n.gl.uniform1f(h,u.uniformValues[0]);else{let y=u.uniformValues;y instanceof Float32Array||(y=new Float32Array(y)),n.gl.uniform1fv(h,y)}return}u.texData.slice!=null&&d!=null&&n.gl.uniform1i(d,u.texData.slice.flatOffset),n.setInputMatrixTexture(u.texData.texture.texture,h,l)}});const a=e.outShapeLocation;if(a)switch(r.shape.length){case 1:n.gl.uniform1iv(a,new Int32Array(r.shape));break;case 2:n.gl.uniform2iv(a,new Int32Array(r.shape));break;case 3:n.gl.uniform3iv(a,new Int32Array(r.shape));break;case 4:n.gl.uniform4iv(a,new Int32Array(r.shape));break}if(e.outShapeStridesLocation){const u=ze(r.shape);switch(r.shape.length){case 2:n.gl.uniform1iv(e.outShapeStridesLocation,new Int32Array(u));break;case 3:n.gl.uniform2iv(e.outShapeStridesLocation,new Int32Array(u));break;case 4:n.gl.uniform3iv(e.outShapeStridesLocation,new Int32Array(u));break}}e.outTexShapeLocation&&n.gl.uniform2i(e.outTexShapeLocation,r.texData.texShape[0],r.texData.texShape[1]),e.program.customUniforms&&s&&e.program.customUniforms.forEach((u,l)=>{const c=e.customUniformLocations[l],h=s[l];if(u.type==="float")n.gl.uniform1fv(c,h);else if(u.type==="vec2")n.gl.uniform2fv(c,h);else if(u.type==="vec3")n.gl.uniform3fv(c,h);else if(u.type==="vec4")n.gl.uniform4fv(c,h);else if(u.type==="int")n.gl.uniform1iv(c,h);else if(u.type==="ivec2")n.gl.uniform2iv(c,h);else if(u.type==="ivec3")n.gl.uniform3iv(c,h);else if(u.type==="ivec4")n.gl.uniform4iv(c,h);else throw Error(`uniform type ${u.type} is not supported yet.`)}),n.executeProgram()}function wR(n,e,t){let r="";e.concat(t).forEach(o=>{const a=o.texData!=null&&o.texData.slice!=null&&o.texData.slice.flatOffset>0;if(n.enableShapeUniforms&&!o.isUniform){const u=o.texData.texShape,{useSqueezeShape:l,uniformShape:c,keptDims:h}=Yd(n.packedInputs,o.shape,u);let d="",p="",m="";if(c.length===1&&n.packedInputs){const I=[Math.ceil(u[0]/2),Math.ceil(u[1]/2)];d=`${I[0]>1}_${I[1]>1}`}else if(c.length===2&&!n.packedInputs)p=`${c[0]>1}_${c[1]>1}`;else if(c.length>2&&!n.packedInputs){const I=ze(c);m=`${I[0]===u[1]}_${I[I.length-1]===u[1]}`}const y=o.shape.length,g=c.length===2&&Oe(o.shape,u),x=q(o.shape)===1,$=zs(o.shape,t.shape),C=!n.packedInputs&&y===t.shape.length&&Oe(u,t.texData.texShape),S=n.packedInputs||c.length>2?"":`${u[0]>1}_${u[1]>1}`;r+=`${y}_${C}_${l?h:""}_${c.length}_${x}_${$}_${g}_${d}_${p}_${m}_${S}_${a}`}else{const u=o.isUniform?"uniform":o.texData.texShape;r+=`${o.shape}_${u}_${a}`}});const s=n.userCode;let i=n.constructor.name;return i+="_"+r+"_"+s+`${B().getNumber("WEBGL_VERSION")}`,i}function ht(n){return B().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&n<=4}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class vR{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=Xs.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=ct();this.outputShape=e,this.enableShapeUniforms=ht(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?ea(["r","c","d"],e):Fr(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getA(rc.x, rc.y, rc.z);
        }

        ${t.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class $R{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=Xs.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=ct();this.outputShape=e,this.enableShapeUniforms=ht(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?ea(["r","c","d"],e):Fr(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));
        }

        ${t.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class SR{constructor(e){this.variableNames=["A"],this.outTexUsage=Nt.DOWNLOAD;const t=ct();this.outputShape=e,this.userCode=`
      ${N1}

      void main() {
        float x = getAAtOutCoords();
        ${t.output} = encode_float(x);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class TR{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=Nt.DOWNLOAD;const t=ct();this.outputShape=e,this.userCode=`
      ${N1}

      void main() {
        ivec3 coords = getOutputCoords();
        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));
        ${t.output} = encode_float(x);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CR={R:0,G:1,B:2,A:3};class jf{constructor(e,t=!1,r="RGBA"){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const s=ct();this.outputShape=e,this.enableShapeUniforms=ht(this.outputShape.length);let i="result";t&&(i="floor(result * 255. + 0.5)");let o="";for(let a=0;a<r.length;a++){const u=r[a];o+=`
          if(offset == ${a}) {
            result = values[${CR[u]}];
          }`}this.userCode=`
      ${this.enableShapeUniforms?Xd():Kd(e)}

      void main() {
        ivec3 coords = getOutputCoords();
        int flatIndex = getFlatIndex(coords);
        float result = 0.;
        int offset = imod(flatIndex, ${r.length});

        flatIndex = idiv(flatIndex, ${r.length}, 1.);

        int r = flatIndex / texShape[1];
        if (r < texShape[0]) {
          int c = imod(flatIndex, texShape[1]);
          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
          vec4 values = ${s.texture2D}(A, uv);
          ${o}
        }
        ${s.output} = vec4(${i}, 0., 0., 0.);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ER{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const r=ct();this.outputShape=e,this.enableShapeUniforms=ht(this.outputShape.length);let s="",i="result";t&&(i="floor(result * 255. + 0.5)");for(let o=0;o<=1;o++)for(let a=0;a<=1;a++){const u=o*2+a;s+=`
          localCoords = coords;
          if(localCoords[2] + ${a} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {
          localCoords[2] += ${a};
          if (localCoords[1] + ${o} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {
            localCoords[1] += ${o};

            flatIndex = getFlatIndex(localCoords);
            offset = imod(flatIndex, 4);

            flatIndex = idiv(flatIndex, 4, 1.);

            int r = flatIndex / texShape[1];
            int c = imod(flatIndex, texShape[1]);
            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
            values = ${r.texture2D}(A, uv);

            if (offset == 0) {
              result[${u}] = values[0];
            } else if (offset == 1) {
              result[${u}] = values[1];
            } else if (offset == 2) {
              result[${u}] = values[2];
            } else {
              result[${u}] = values[3];
            }
          }
        }
        `}this.userCode=`
        ${this.enableShapeUniforms?Xd():Kd(e)}

        void main() {
          ivec3 coords = getOutputCoords();

          vec4 result = vec4(0.);
          int flatIndex, r, c, offset;
          ivec3 localCoords;
          vec2 uv;
          vec4 values;

          ${s}

          ${r.output} = ${i};
        }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NR(n){const e=ct(),t=`${e.version}
    precision highp float;
    ${e.attribute} vec3 clipSpacePos;
    ${e.attribute} vec2 uv;
    ${e.varyingVs} vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`;return c_(n,t)}function IR(n){const e=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return m_(n,e)}function kR(n){const e=new Uint16Array([0,1,2,2,1,3]);return g_(n,e)}function fi(n,e,t,r,s,i){x_(e,t);const o=y_(n),a=n.TEXTURE_2D;return J(n,()=>n.bindTexture(a,o)),J(n,()=>n.texParameteri(a,n.TEXTURE_WRAP_S,n.CLAMP_TO_EDGE)),J(n,()=>n.texParameteri(a,n.TEXTURE_WRAP_T,n.CLAMP_TO_EDGE)),J(n,()=>n.texParameteri(a,n.TEXTURE_MIN_FILTER,n.NEAREST)),J(n,()=>n.texParameteri(a,n.TEXTURE_MAG_FILTER,n.NEAREST)),B().getNumber("WEBGL_VERSION")===1?J(n,()=>n.texImage2D(a,0,r,e,t,0,s,i,null)):J(n,()=>n.texStorage2D(a,1,r,e,t)),J(n,()=>n.bindTexture(n.TEXTURE_2D,null)),{texture:o,texShape:[t,e]}}function A1(n){return n.internalFormatFloat}function _R(n,e,t,r){const[s,i]=di(e,t);return fi(n,s,i,A1(r),r.textureFormatFloat,n.FLOAT)}function O1(n){return n.internalFormatHalfFloat}function RR(n,e,t,r){const[s,i]=di(e,t);return fi(n,s,i,O1(r),r.textureFormatFloat,r.textureTypeHalfFloat)}function D1(n){return n.downloadTextureFormat}function AR(n,e,t,r){const[s,i]=di(e,t);return fi(n,s,i,D1(r),n.RGBA,n.UNSIGNED_BYTE)}function F1(n){return n.internalFormatPackedFloat}function OR(n,e,t,r){const[s,i]=ls(e,t);return fi(n,s,i,F1(r),n.RGBA,n.FLOAT)}function P1(n){return n.internalFormatPackedHalfFloat}function DR(n,e,t,r){const[s,i]=ls(e,t);return fi(n,s,i,P1(r),n.RGBA,r.textureTypeHalfFloat)}function FR(n,e,t){return J(n,()=>n.bindBuffer(n.ARRAY_BUFFER,t)),zf(n,e,"clipSpacePos",t,3,20,0)&&zf(n,e,"uv",t,2,20,12)}function PR(n,e,t,r,s,i){J(n,()=>n.bindTexture(n.TEXTURE_2D,e));let o,a,u;s instanceof Uint8Array?(o=new Uint8Array(t*r*4),a=n.UNSIGNED_BYTE,u=n.RGBA):(o=new Float32Array(t*r*4),a=n.FLOAT,u=i.internalFormatPackedFloat),o.set(s),B().getNumber("WEBGL_VERSION")===2?J(n,()=>n.texSubImage2D(n.TEXTURE_2D,0,0,0,t,r,n.RGBA,a,o)):J(n,()=>n.texImage2D(n.TEXTURE_2D,0,u,t,r,0,n.RGBA,a,o)),J(n,()=>n.bindTexture(n.TEXTURE_2D,null))}function LR(n,e,t){J(n,()=>n.bindTexture(n.TEXTURE_2D,e)),t.data instanceof Uint8Array?B().getNumber("WEBGL_VERSION")===2?J(n,()=>n.texSubImage2D(n.TEXTURE_2D,0,0,0,t.width,t.height,n.RGBA,n.UNSIGNED_BYTE,t.data)):J(n,()=>n.texImage2D(n.TEXTURE_2D,0,n.RGBA,t.width,t.height,0,n.RGBA,n.UNSIGNED_BYTE,t.data)):B().getNumber("WEBGL_VERSION")===2?J(n,()=>n.texSubImage2D(n.TEXTURE_2D,0,0,0,n.RGBA,n.UNSIGNED_BYTE,t)):J(n,()=>n.texImage2D(n.TEXTURE_2D,0,n.RGBA,n.RGBA,n.UNSIGNED_BYTE,t)),J(n,()=>n.bindTexture(n.TEXTURE_2D,null))}function BR(n,e,t,r){const s=n.createBuffer();J(n,()=>n.bindBuffer(n.PIXEL_PACK_BUFFER,s));const a=4*4*e*t;return J(n,()=>n.bufferData(n.PIXEL_PACK_BUFFER,a,n.STREAM_READ)),J(n,()=>n.readPixels(0,0,t,e,n.RGBA,n.FLOAT,0)),J(n,()=>n.bindBuffer(n.PIXEL_PACK_BUFFER,null)),s}function MR(n,e,t){const r=n,s=new Float32Array(t);return r.bindBuffer(r.PIXEL_PACK_BUFFER,e),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,s),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),s}function VR(n,e,t,r){const[s,i]=di(e,t),o=4,a=new Uint8Array(r_(e*t,o));return J(n,()=>n.readPixels(0,0,s,i,r.downloadTextureFormat,n.UNSIGNED_BYTE,a)),new Float32Array(a.buffer)}function UR(n,e,t,r,s,i,o,a){const u=n,l=new Float32Array(s_(i,o));return u.bindBuffer(u.PIXEL_PACK_BUFFER,e),u.getBufferSubData(u.PIXEL_PACK_BUFFER,0,l),u.bindBuffer(u.PIXEL_PACK_BUFFER,null),l}function zR(n,e,t){const r=new Float32Array(e*t*4);return J(n,()=>n.readPixels(0,0,t,e,n.RGBA,n.FLOAT,r)),r}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ga{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];const t=B().getNumber("WEBGL_VERSION");if(e!=null?(this.gl=e,e_(t,e)):this.gl=on(t),e=this.gl,B().getNumber("WEBGL_VERSION")===2){const i=e;this.createVertexArray=()=>J(i,()=>i.createVertexArray()),this.bindVertexArray=o=>J(i,()=>i.bindVertexArray(o)),this.deleteVertexArray=o=>J(i,()=>i.deleteVertexArray(o)),this.getVertexArray=()=>J(i,()=>i.getParameter(i.VERTEX_ARRAY_BINDING))}else if(e!=null){const i=e.getExtension("OES_vertex_array_object");if(i==null)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>J(e,()=>i.createVertexArrayOES()),this.bindVertexArray=o=>J(e,()=>i.bindVertexArrayOES(o)),this.deleteVertexArray=o=>J(e,()=>i.deleteVertexArrayOES(o)),this.getVertexArray=()=>J(e,()=>e.getParameter(i.VERTEX_ARRAY_BINDING_OES))}let r="WEBGL_color_buffer_float";const s="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),B().getNumber("WEBGL_VERSION")===1){const i="OES_texture_float",o="OES_texture_half_float";if(this.textureFloatExtension=Ui(this.gl,i),Wt(this.gl,o))this.textureHalfFloatExtension=Ui(this.gl,o);else if(B().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(r),Wt(this.gl,s))this.colorBufferHalfFloatExtension=Ui(this.gl,s);else if(B().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(r="EXT_color_buffer_float",Wt(this.gl,r))this.colorBufferFloatExtension=this.gl.getExtension(r);else if(Wt(this.gl,s))this.colorBufferHalfFloatExtension=this.gl.getExtension(s);else throw new Error("GL context does not support color renderable floats");this.vertexBuffer=IR(this.gl),this.indexBuffer=kR(this.gl),this.framebuffer=b_(this.gl),this.textureConfig=qd(this.gl,this.textureHalfFloatExtension)}get debug(){return B().getBool("DEBUG")}dispose(){if(this.disposed)return;this.program!=null&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),this.outputTexture!=null&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;J(e,()=>e.finish()),J(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),J(e,()=>e.deleteFramebuffer(this.framebuffer)),J(e,()=>e.bindBuffer(e.ARRAY_BUFFER,null)),J(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null)),J(e,()=>e.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),_R(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),RR(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),AR(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),LR(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,r,s){this.throwIfDisposed(),PR(this.gl,e,t,r,s,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),DR(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),OR(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(Wf(this.gl,this.framebuffer),this.outputTexture=null),J(this.gl,()=>this.gl.deleteTexture(e))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,r){return this.downloadMatrixDriver(e,()=>VR(this.gl,t,r,this.textureConfig))}downloadPackedMatrixFromBuffer(e,t,r,s,i,o){return UR(this.gl,e,t,r,s,i,o,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return MR(this.gl,e,t)}createBufferFromTexture(e,t,r){this.bindTextureToFrameBuffer(e);const s=BR(this.gl,t,r,this.textureConfig);return this.unbindTextureToFrameBuffer(),s}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,r;if(B().getBool("WEBGL_FENCE_API_ENABLED")){const s=e,i=s.fenceSync(s.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),r=()=>{const o=s.clientWaitSync(i,0,0);return o===s.ALREADY_SIGNALED||o===s.CONDITION_SATISFIED},t=i}else B().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),r=()=>this.isQueryAvailable(t,B().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):r=()=>!0;return{query:t,isFencePassed:r}}downloadMatrixFromPackedTexture(e,t,r){return this.downloadMatrixDriver(e,()=>zR(this.gl,t,r))}createProgram(e){this.throwIfDisposed();const t=this.gl;this.vertexShader==null&&(this.vertexShader=NR(t));const r=p_(t);J(t,()=>t.attachShader(r,this.vertexShader)),J(t,()=>t.attachShader(r,e)),f_(t,r);let s;return s=Object.assign(r,{vao:this.createVertexArray()}),this.bindVertexArray(s.vao),J(t,()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,this.indexBuffer)),console.assert(FR(t,s,this.vertexBuffer),"gpgpu_util.bindVertexProgramAttributeStreams not fully successful."),this.debug&&Va(t,s),this.setProgram(s),s}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),e!=null&&(J(this.gl,()=>this.gl.deleteProgram(e)),this.deleteVertexArray(e.vao))}setProgram(e){this.throwIfDisposed(),this.program=e,this.program!=null&&(this.bindVertexArray(this.program.vao),this.debug&&Va(this.gl,this.program)),J(this.gl,()=>this.gl.useProgram(e))}getUniformLocation(e,t,r=!0){return this.throwIfDisposed(),r?v_(this.gl,e,t):$_(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),J(this.gl,()=>this.gl.getAttribLocation(e,t))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,r){this.throwIfDisposed(),this.throwIfNoProgram(),S_(this.gl,e,t,r)}setOutputMatrixTexture(e,t,r){this.setOutputMatrixTextureDriver(e,r,t)}setOutputPackedMatrixTexture(e,t,r){this.throwIfDisposed();const[s,i]=ls(t,r);this.setOutputMatrixTextureDriver(e,s,i)}setOutputMatrixWriteRegion(e,t,r,s){this.setOutputMatrixWriteRegionDriver(r,e,s,t)}setOutputPackedMatrixWriteRegion(e,t,r,s){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){this.program!=null&&Va(this.gl,this.program),zi(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;if(this.debug){const t=this.getVertexArray();console.assert(t===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}J(e,()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),J(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return this.disjointQueryTimerExtension==null&&(this.disjointQueryTimerExtension=Ui(this.gl,B().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(B().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){const r=this.gl,s=this.getQueryTimerExtensionWebGL2(),i=r.createQuery();return r.beginQuery(s.TIME_ELAPSED_EXT,i),i}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(B().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){const t=this.gl,r=this.getQueryTimerExtensionWebGL2();t.endQuery(r.TIME_ELAPSED_EXT);return}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await Ya(()=>this.disposed||this.isQueryAvailable(e,B().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(e,B().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(t===0)return null;if(t===2){const r=this.gl;return r.getQueryParameter(e,r.QUERY_RESULT)/1e6}else{const r=this.getQueryTimerExtensionWebGL1();return r.getQueryObjectEXT(e,r.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(t===0)return!0;if(t===2){const r=this.gl,s=this.getQueryTimerExtensionWebGL2(),i=r.getQueryParameter(e,r.QUERY_RESULT_AVAILABLE);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(s.GPU_DISJOINT_EXT)),i&&!this.disjoint}else{const r=this.getQueryTimerExtensionWebGL1(),s=r.getQueryObjectEXT(e,r.QUERY_RESULT_AVAILABLE_EXT);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(r.GPU_DISJOINT_EXT)),s&&!this.disjoint}}pollFence(e){return new Promise(t=>{this.addItemToPoll(()=>e.isFencePassed(),()=>t())})}pollItems(){const e=WR(this.itemsToPoll.map(t=>t.isDoneFn));for(let t=0;t<=e;++t){const{resolveFn:r}=this.itemsToPoll[t];r()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){if(this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1)return;let r;"setTimeoutCustom"in B().platform&&(r=B().platform.setTimeoutCustom.bind(B().platform)),Ya(()=>(this.pollItems(),this.itemsToPoll.length===0),()=>0,null,r)}bindTextureToFrameBuffer(e){this.throwIfDisposed(),Ua(this.gl,e,this.framebuffer),this.debug&&zi(this.gl)}unbindTextureToFrameBuffer(){this.outputTexture!=null?(Ua(this.gl,this.outputTexture,this.framebuffer),this.debug&&zi(this.gl)):Wf(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const r=t();return this.unbindTextureToFrameBuffer(),r}setOutputMatrixTextureDriver(e,t,r){this.throwIfDisposed();const s=this.gl;Ua(s,e,this.framebuffer),this.debug&&zi(s),this.outputTexture=e,J(s,()=>s.viewport(0,0,t,r)),J(s,()=>s.scissor(0,0,t,r))}setOutputMatrixWriteRegionDriver(e,t,r,s){this.throwIfDisposed(),J(this.gl,()=>this.gl.scissor(e,t,r,s))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(this.program==null)throw new Error("No GPU program is currently set.")}}function WR(n){let e=0;for(;e<n.length&&n[e]();++e);return e-1}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GR(n){const e=new Float32Array(n.length);for(let t=0;t<n.length;++t)e[t]=Math.abs(n[t]);return e}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rt(n){return(e,t,r,s,i)=>{const o=fe(e,t),a=o.length,u=ze(o),l=q(o),c=yn(i,l),h=e.length,d=t.length,p=ze(e),m=ze(t),y=zs(e,o),g=zs(t,o);if(y.length+g.length===0)for(let x=0;x<c.length;++x)c[x]=n(r[x%r.length],s[x%s.length]);else for(let x=0;x<c.length;++x){const $=Co(x,a,u),C=$.slice(-h);y.forEach(L=>C[L]=0);const S=eo(C,h,p),I=$.slice(-d);g.forEach(L=>I[L]=0);const A=eo(I,d,m);c[x]=n(r[S],s[A])}return[c,o]}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HR(n,e,t,r){if(r==="int32"){const s=Int32Array.from(n);return[e,"int32",s]}if(r==="bool"){const s=ti([0],t),[i,o]=Rt((a,u)=>a!==u?1:0)(e,[],n,s,"bool");return[o,"bool",i]}throw new Error(`Error in Cast: failed to cast ${t} to ${r}`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jR=Rt((n,e)=>n+e);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qR(n,e,t,r,s){const i=q(r),o=On(s,t);for(let a=0;a<n.length;a++){const u=n[a];if(u<0)throw new Error("Input x must be non-negative!");u>=s||(i>0?o[u]+=e[a]:o[u]+=1)}return o}function KR(n,e,t,r=!1){const s=n.shape[0],i=n.shape[1],o=De([s,t],e.dtype);for(let a=0;a<s;a++)for(let u=0;u<i;u++){const l=n.get(a,u);if(l<0)throw new Error("Input x must be non-negative!");l>=t||(r?o.set(1,a,l):e.size>0?o.set(o.get(a,l)+e.get(a,u),a,l):o.set(o.get(a,l)+1,a,l))}return o}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tr(n){return(e,t,r)=>{const s=yn(t,e.length);for(let i=0;i<e.length;++i)s[i]=n(e[i],r);return s}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const XR=tr(n=>Math.ceil(n));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YR(n,e,t,r){const s=He(t,q(e));if(r&&t!=="string"){let i=0;n.forEach(o=>{const a=q(o.shape);s.set(o.vals,i),i+=a})}else{let i=0;n.forEach(o=>{const a=t==="string"?qs(o.vals):o.vals;let u=0;for(let l=0;l<o.shape[0];++l){const c=l*e[1]+i;for(let h=0;h<o.shape[1];++h)s[c+h]=a[u++]}i+=o.shape[1]})}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QR=Rt((n,e)=>n===e?1:0);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZR=tr(n=>Math.exp(n));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JR=tr(n=>Math.expm1(n));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eA=tr(n=>Math.floor(n));/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tA(n,e,t,r,s,i,o,a,u){const l=De([r,i],t);for(let c=0;c<r;c++){const h=[];let d=0;for(let p=0;p<s;p++){const m=n[c*s+p];d+=m*o[p],h.push(m)}if(d<0||d>=u/i)throw new Error(`Invalid indices: ${h} does not index into ${a}`);for(let p=0;p<i;p++)l.values[c*i+p]=e.get(...e.indexToLoc(d*i+p))}return l}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nA(n,e,t){const r=De(t,n.dtype);for(let s=0;s<r.size;++s){const o=r.indexToLoc(s).slice(),a=o[0],u=o[2],l=e.locToIndex([a,u]);o[2]=e.values[l];const c=n.locToIndex(o);0<=c&&c<n.values.length&&(r.values[s]=n.values[c])}return r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rA=Rt((n,e)=>n>e?1:0);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sA=Rt((n,e)=>n>=e?1:0);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iA=Rt((n,e)=>n<e?1:0);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oA=Rt((n,e)=>n<=e?1:0);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aA(n,e,t){const r=(e-n)/(t-1),s=On(t,"float32");s[0]=n;for(let i=1;i<s.length;i++)s[i]=s[i-1]+r;return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uA=tr(n=>Math.log(n));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lA(n,e,t,r){const s=yn(r,q(t));for(let i=0;i<s.length;++i){const o=i*e;let a=n[o];for(let u=0;u<e;++u){const l=n[o+u];(Number.isNaN(l)||l>a)&&(a=l)}s[i]=a}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cA=Rt((n,e)=>Math.max(n,e));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hA=Rt((n,e)=>Math.min(n,e));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const L1=Rt((n,e)=>n*e);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dA(n,e,t){const r=Rr(-1,t);return L1([],e,r,n,t)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pA=Rt((n,e)=>n!==e?1:0);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fA(n,e,t,r,s){const i=e.length,o=q(e),a=ze(e),u=ze(s),l=yn(t,q(s));for(let c=0;c<o;++c){const h=Co(c,i,a),d=new Array(h.length);for(let m=0;m<d.length;m++)d[m]=h[r[m]];const p=eo(d,i,u);l[p]=n[c]}return l}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mA(n,e,t,r){const[s,i]=$n(n,r),o=sn(e,"int32"),a=On(q(s),o),u=q(i);for(let l=0;l<a.length;++l){const c=l*u;let h=1;for(let d=0;d<u;++d)h*=t[c+d];a[l]=h}return{outVals:a,outShape:s,outDtype:o}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gA(n,e,t){n.forEach((r,s)=>{if(r<0||r>=t){const i=Co(s,e.length,ze(e)).join(",");throw new Error(`indices[${i}] = ${r} is not in [0, ${t})`)}})}function yA(n,e){for(let t=0;t<n.length;++t){const r=n[t],s=t===n.length-1?e:n[t+1].length;if(r.length===0)throw new Error("Ragged splits may not be empty");if(r[0]<0)throw new Error("Ragged splits must be non-negative");if(r[r.length-1]>s)throw new Error("Ragged splits must not point past values");for(let i=1;i<r.length;++i)if(r[i-1]>r[i])throw new Error("Ragged splits must be sorted in ascending order")}}function xA(n,e,t,r){const s=[];let i=0;const o=e.length-1+t.length,a=new Array(o).fill(null).map(()=>[0]);yA(t,r);let u=1;for(let l=0;l<e.length-1;++l){u*=e[l];const c=e[l+1];for(let h=1;h<u+1;++h)a[l].push(h*c)}for(let l=0;l<n.length;++l){let c=n[l],h=n[l]+1;for(let d=0;d<t.length;++d){const p=t[d],m=d+e.length-1;if(m>=0){const y=a[m],g=y[y.length-1]-p[c];for(let x=c;x<h;++x)a[m].push(p[x+1]+g)}c=p[c],h=p[h]}h!==c&&(s.push([c,h]),i+=h-c)}return{outSplits:a,valueSlices:s,numValues:i}}function bA(n){const e=[];for(let t=0;t<n.length;++t){const r=n[t].length,s=He("int32",r);e.push(s),n[t].forEach((i,o)=>s[o]=i)}return e}function qf(n,e){const t=n.slice(0,e);for(;t.length<e;)t.push(1);for(let r=e;r<n.length;r++)t[e-1]*=n[r];return t}function wA(n,e,t,r,s,i){const o=qf(e,2)[1],a=qf(i,2)[1];let u=0;for(const l of t)for(let c=l[0];c<l[1];++c){for(let h=0;h<r;++h)s[u*a+h]=n[c*o+h];++u}}function vA(n,e,t,r,s){const i=e.slice();i[0]=s;const o=He(t,q(i)),a=n.length,u=a===0?0:a/e[0];return wA(n,e,r,u,o,i),[o,i]}function $A(n,e,t,r,s,i,o,a){if(n.length===0)throw new Error("paramsNestedSplits must be non empty");if(e[0].length===0)throw new Error("Split tensors must not be scalars");const u=e[0][0]-1;if(gA(i,o,u),r.length===0)throw new Error("params.rank must be nonzero");const l=r[0],{outSplits:c,valueSlices:h,numValues:d}=xA(i,o,n,l),p=bA(c),m=vA(t,r,s,h,d);return[p,m[0],m[1]]}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Kf=2147483647;function SA(n,e,t,r,s,i,o){if(e.length>1)throw new Error("starts must be a scalar or vector");if(s.length>1)throw new Error("limits must be a scalar or vector");if(o.length>1)throw new Error("deltas must be a scalar or vector");const a=e.length===0,u=s.length===0,l=o.length===0,c=[];a||c.push(e[0]),u||c.push(s[0]),l||c.push(o[0]);for(let g=1;g<c.length;++g)if(c[g]!==c[g-1])throw new Error("starts, limits, and deltas must have the same shape");const h=c.length===0?1:c[0],d=He("int32",h+1);d[0]=0;for(let g=0;g<h;++g){const x=a?n[0]:n[g],$=u?r[0]:r[g],C=l?i[0]:i[g];if(C===0)throw new Error("Requires delta != 0");let S;if(C>0&&$<x||C<0&&$>x)S=0;else if(S=Math.ceil(Math.abs(($-x)/C)),S>Kf)throw new Error(`Requires ((limit - start) / delta) <= ${Kf}`);d[g+1]=d[g]+S}const p=d[h],m=He(t,p);let y=0;for(let g=0;g<h;++g){const x=d[g+1]-d[g];let $=a?n[0]:n[g];const C=l?i[0]:i[g];for(let S=0;S<x;++S)m[y++]=$,$+=C}return[d,m]}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Ot=en;class xo{constructor(e,t,r,s,i,o,a,u,l,c){this.shape=e,this.shapeShape=t,this.values=r,this.valuesShape=s,this.valuesDType=i,this.defaultValue=o,this.defaultValueShape=a,this.rowPartitionValues=u,this.rowPartitionValuesShapes=l,this.rowPartitionTypes=Tx(c),this.raggedRank=Cx(this.rowPartitionTypes)}getRowPartitionTypeByDimension(e){return this.rowPartitionTypes[0]===Ot.FIRST_DIM_SIZE?this.rowPartitionTypes[e+1]:this.rowPartitionTypes[e]}getRowPartitionTensor(e){return this.rowPartitionTypes[0]===Ot.FIRST_DIM_SIZE?this.rowPartitionValues[e+1]:this.rowPartitionValues[e]}getMaxWidth(e){const t=this.getRowPartitionTensor(e-1);switch(this.getRowPartitionTypeByDimension(e-1)){case Ot.VALUE_ROWIDS:return xo.getMaxWidthValueRowID(t);case Ot.ROW_SPLITS:return xo.getMaxWidthRowSplit(t);default:throw new Error(`Cannot handle partition type ${Ot[this.getRowPartitionTypeByDimension(e-1)]}`)}}static getMaxWidthRowSplit(e){const t=e.length;if(t===0||t===1)return 0;let r=0;for(let s=0;s<t-1;++s){const i=e[s+1]-e[s];i>r&&(r=i)}return r}static getMaxWidthValueRowID(e){const t=e.length;if(t===0)return 0;let r=0,s=e[0],i=0;for(let o=1;o<t;++o){const a=e[o];a!==s&&(s=a,i=Math.max(o-r,i),r=o)}return Math.max(t-r,i)}tensorShapeFromTensor(e,t,r=!0){if(t.length===0){if(e[0]===-1)return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return Yf(e,r)}calculateOutputSize(e){const t=this.valuesShape,r=this.defaultValueShape;Ex(r,t);const s=this.tensorShapeFromTensor(this.shape,this.shapeShape),o=Sx(this.raggedRank,s,t);o[0]<0&&(o[0]=e);for(let a=1;a<=this.raggedRank;++a)o[a]<0&&(o[a]=this.getMaxWidth(a));return o}calculateFirstParentOutputIndex(e,t,r){const s=Math.min(e,r),i=[];let o=0;for(let a=0;a<s;++a,o+=t)i.push(o);for(let a=s;a<e;++a)i.push(-1);return N(i.length===e,()=>"Final length of result must be equal to firstDimension."),i}calculateOutputIndexRowSplit(e,t,r,s){const i=e.length,o=[];for(let a=0;a<i-1;++a){const u=e[a+1]-e[a];let l=Math.min(s,u),c=t[a];c===-1&&(l=0);for(let h=0;h<l;++h)o.push(c),c+=r;for(let h=0;h<u-l;++h)o.push(-1)}if(i>0&&o.length!==e[i-1])throw new Error("Invalid row split size.");return o}calculateOutputIndexValueRowID(e,t,r,s){const i=e.length,o=[];if(i===0)return[];let a=0,u=e[0];if(u>=t.length)throw new Error(`Got currentValueRowId=${u}, which is not less than ${t.length}`);let l=t[u];o.push(l);for(let c=1;c<i;++c){const h=e[c];if(h===u)l>=0&&(++a,a<s?l+=r:l=-1);else{if(a=0,u=h,h>=t.length)throw new Error(`Got nextValueRowId=${h} which is not less than ${t.length}`);l=t[h]}o.push(l)}if(o.length!==e.length)throw new Error("Invalid row ids.");return o}calculateOutputIndex(e,t,r,s){const i=this.getRowPartitionTensor(e),o=this.getRowPartitionTypeByDimension(e);switch(o){case Ot.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(i,t,r,s);case Ot.ROW_SPLITS:if(i.length-1>t.length)throw new Error(`Row partition size is greater than output size: ${i.length-1} > ${t.length}`);return this.calculateOutputIndexRowSplit(i,t,r,s);default:throw new Error(`Unsupported partition type: ${Ot[o]}`)}}getFirstDimensionSize(){const e=this.rowPartitionValues[0];if(this.rowPartitionTypes.length===0)throw new Error("No row_partition_types given.");const t=this.rowPartitionTypes[0];switch(t){case Ot.FIRST_DIM_SIZE:return e[0];case Ot.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case Ot.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${Ot[t]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");const t=this.getFirstDimensionSize(),r=this.calculateOutputSize(t),s=new Array(this.raggedRank+1);s[s.length-1]=1;for(let u=s.length-2;u>=0;--u)s[u]=s[u+1]*r[u+1];const i=Yf(r,!1),o=He(this.valuesDType,q(i));if(s[0]*r[0]>0){let u=this.calculateFirstParentOutputIndex(t,s[0],r[0]);for(let l=1;l<=this.raggedRank;++l)u=this.calculateOutputIndex(l-1,u,s[l],r[l]);this.setOutput(this.raggedRank,u,o,i)}return[i,o]}setOutput(e,t,r,s){if(r.length===0)return;const i=this.values,o=r;let a=s.slice();a=a.slice(e+1);const u=q(a),l=t.length;let c=this.defaultValue;if(c.length!==u&&c.length!==1){const m=this.defaultValueShape;ie(()=>{const y=W(c,m);c=jr(y,a).dataSync()})}let h=0,d=0,p=0;for(let m=0;m<=l;++m){let y=m<l?t[m]:-1;if(y===p){++p;continue}if(d<p){const g=i.subarray(h*u),x=o.subarray(d*u),$=(p-d)*u;Xf(x,g,$)}if(m>=l){const g=r.length;y=Math.floor(g/u)}if(y>p)if(this.defaultValue.length===1)o.subarray(p*u,y*u).fill(this.defaultValue[0]),p=y;else for(;y>p;){const g=o.slice(p*u);Xf(g,c,u),++p}y<0?(h=m+1,d=p):(h=m,d=p,p=d+1)}}}function Xf(n,e,t){for(let r=0;r<t;r++)n[r]=e[r]}function Yf(n,e){const t=[];for(let r of n){if(r<0){if(!e)throw new Error(`Dimension ${r} must be >= 0`);if(r<-1)throw new Error(`Dimension ${r} must be >= -1`);r=-1}t.push(r)}return t}function TA(n,e,t,r,s,i,o,a,u,l){return new xo(n,e,t,r,s,i,o,a,u,l).compute()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CA(n,e,t,r){const s=n===e,i=n<e&&t<0,o=e<n&&t>1;if(s||i||o)return On(0,r);const a=Math.abs(Math.ceil((e-n)/t)),u=On(a,r);e<n&&t===1&&(t=-1),u[0]=n;for(let l=1;l<u.length;l++)u[l]=u[l-1]+t;return u}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EA=tr(n=>1/Math.sqrt(n));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NA(n,e,t,r,s,i,o,a,u,l){const c=[r/s,s],h=n.values,d=e.values;if(r===0)return De(t,e.dtype);const p=De(c,e.dtype);typeof u=="string"||typeof u=="number"?p.values.fill(u):typeof u=="boolean"&&p.values.fill(+u);for(let m=0;m<i;m++){const y=[];let g=0;for(let x=0;x<o;x++){const $=h[m*o+x];y.push($),g+=$*a[x]}if(g<0||g>=r/s)throw new Error(`Invalid indices: ${y} does not index into ${t}`);for(let x=0;x<s;x++)l?p.values[g*s+x]+=d[m*s+x]:p.values[g*s+x]=e.rank===0?d[0]:d[m*s+x]}return p}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IA=tr(n=>1/(1+Math.exp(-n)));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kA(n,e,t,r,s){const i=jh(r,e,t),o=q(t),a=ze(r);if(i){const h=qh(e,a);return s==="string"?n.slice(h,h+o):n.subarray(h,h+o)}const u=s==="string"?qs(n):n,l=De(r,s,u),c=De(t,s);for(let h=0;h<c.size;++h){const d=c.indexToLoc(h),p=d.map((m,y)=>m+e[y]);c.set(l.get(...p),...d)}return s==="string"?s1(c.values):c.values}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _A(n,e,t,r,s,i,o){const a=e[0],u=i[0],l=new Array(u),c=new Array(a),h=e[1];if(u===0){if(a!==0)throw new Error(Gx(a));const g=He(t,0),x=He(s,0);return[g,[0,h],x,l,c]}let d=!0,p=0;const m=new Array(u).fill(0);for(let g=0;g<a;++g){const x=n[g*h];if(x<0)throw new Error(Hx(g,x));if(x>=u)throw new Error(jx(g,x,u));++m[x],d=d&&x>=p,p=x}let y=!0;for(let g=0;g<u;++g){const x=m[g]===0;l[g]=x,y=y&&!x,m[g]=Math.max(m[g],1),g>0&&(m[g]+=m[g-1])}if(y&&d){const g=n,x=r;for(let $=0;$<a;++$)c[$]=$;return[g,[a,h],x,l,c]}else{const g=m[u-1],x=He(t,g*h),$=He(s,g),C=new Array(u).fill(0);for(let S=0;S<a;++S){const I=n[S*h],A=C[I],L=(I===0?0:m[I-1])+A;C[I]++;for(let P=0;P<h;++P)x[L*h+P]=n[S*h+P];$[L]=r[S],c[S]=L}for(let S=0;S<u;++S)if(C[S]===0){const A=S===0?0:m[S-1];x[A*h+0]=S;for(let L=1;L<h;++L)x[A*h+L]=0;$[A]=o}return[x,[g,h],$,l,c]}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RA(n,e,t,r,s){const i=q(r),o=e[0],a=s.length,u=[];let l=1,c=-1;for(let g=0;g<a;++g){const x=s[g];if(x===-1){if(c!==-1)throw new Error(qx(c,g));c=g,u.push(1)}else{if(x<0)throw new Error(Kx(g,x));l*=x,u.push(x)}}if(c!==-1){if(l<=0)throw new Error(Xx());const g=Math.trunc(i/l);if(l*g!==i)throw new Error(Yx(r,u));u[c]=g}if(q(u)!==i)throw new Error(Qx(r,u));const d=r.length,p=[];if(d>0){p[d-1]=1;for(let g=d-2;g>=0;--g)p[g]=p[g+1]*r[g+1]}const m=[];if(a>0){m[a-1]=1;for(let g=a-2;g>=0;--g)m[g]=m[g+1]*u[g+1]}const y=He(t,o*a);for(let g=0;g<o;++g){let x=0;for(let $=0;$<d;++$)x+=n[g*d+$]*p[$];for(let $=0;$<a;++$)y[g*a+$]=Math.trunc(x/m[$]),x%=m[$]}return[y,[o,a],u]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AA(n,e,t,r,s,i=!1,o=0){const a=r.length,u=[e[0],n.length/e[0]],l=u[1],h=a>0?s[a-1]+1:0;if(h<0)throw new Error(gu());const d=e.slice();d[0]=h;const p=d.reduce((C,S)=>C*S,1),m=He(t,p);if(a===0)return h>0&&m.fill(o),[m,d];if(h<=0)throw new Error(gu());let y=0,g=1,x=0,$=s[y];for(;;){let C=0;if(g<a){if(C=s[g],$===C){++g;continue}if($>=C)throw new Error(Zx())}if($<0||$>=h)throw new Error(Jx($,h));$>x&&m.fill(o,x*l,$*l);for(let S=y;S<g;++S){const I=r[S];if(I<0||I>=u[0])throw new Error(e1(S,r[S],u[0]));for(let A=0;A<l;A++)m[$*l+A]+=n[I*l+A]}if(i)for(let S=0;S<l;S++)m[$*l+S]/=g-y;if(y=g,++g,x=$+1,$=C,g>a)break}return x<h&&m.fill(o,x*l,h*l),[m,d]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OA=tr(n=>Math.sqrt(n));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DA=Rt((n,e)=>{const t=n-e;return t*t});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FA(n,e,t,r){const s=De(n,e.dtype);for(let i=0;i<s.size;i++){const o=s.indexToLoc(i),a=new Array(o.length);for(let u=0;u<a.length;u++)a[u]=o[u]*t[u]+r[u];s.set(e.get(...a),...o)}return s}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class PA{constructor(e,t,r,s,i,o){this.separator=_n(e),this.nGramWidths=t,this.leftPad=_n(r),this.rightPad=_n(s),this.padWidth=i,this.preserveShort=o}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){const r=this.getPadWidth(t);return Math.max(0,e+2*r-t+1)}createNGrams(e,t,r,s,i,o){for(let a=0;a<i;++a){const u=this.getPadWidth(o),l=Math.max(0,u-a),c=Math.max(0,u-(i-(a+1))),h=o-(l+c),d=t+(l>0?0:a-u);let p=0;p+=l*this.leftPad.length;for(let $=0;$<h;++$)p+=e[d+$].length;p+=c*this.rightPad.length,p+=(l+c+h-1)*this.separator.length,r[s+a]=new Uint8Array(p);const y=r[s+a];let g=0;const x=$=>$.forEach(C=>y[g++]=C);for(let $=0;$<l;++$)x(this.leftPad),x(this.separator);for(let $=0;$<h-1;++$)x(e[d+$]),x(this.separator);if(h>0){x(e[d+h-1]);for(let $=0;$<c;++$)x(this.separator),x(this.rightPad)}else{for(let $=0;$<c-1;++$)x(this.rightPad),x(this.separator);x(this.rightPad)}}}compute(e,t){const r=e.length,s=t.length;if(s>0){let u=t[0];if(u!==0)throw new Error(`First split value must be 0, got ${u}`);for(let l=1;l<s;++l){let c=t[l]>=u;if(c=c&&t[l]<=r,!c)throw new Error(`Invalid split value ${t[l]}, must be in [${u}, ${r}]`);u=t[l]}if(u!==r)throw new Error(`Last split value must be data size. Expected ${r}, got ${u}`)}const i=s-1,o=He("int32",s);if(r===0||s===0){const u=new Array(r);for(let l=0;l<=i;++l)o[l]=0;return[u,o]}o[0]=0;for(let u=1;u<=i;++u){const l=t[u]-t[u-1];let c=0;this.nGramWidths.forEach(h=>{c+=this.getNumNGrams(l,h)}),this.preserveShort&&l>0&&c===0&&(c=1),o[u]=o[u-1]+c}const a=new Array(o[i]);for(let u=0;u<i;++u){const l=t[u];let c=o[u];if(this.nGramWidths.forEach(h=>{const d=t[u+1]-t[u],p=this.getNumNGrams(d,h);this.createNGrams(e,l,a,c,p,h),c+=p}),this.preserveShort&&c===o[u]){const h=t[u+1]-t[u];if(h===0)continue;const d=h+2*this.padWidth,p=1;this.createNGrams(e,l,a,c,p,d)}}return[a,o]}}function LA(n,e,t,r,s,i,o,a){return new PA(t,r,s,i,o,a).compute(n,e)}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BA(n,e,t,r){if(!n.length)return;if(e.length===0){for(let i=0;i<n.length;++i)r.push(n.subarray(i,i+1));return}if(e.length===1){const i=e[0];let o=n.indexOf(i);for(;o!==-1;){const a=n.subarray(0,o);(!t||a.length!==0)&&r.push(a),n=n.subarray(o+1),o=n.indexOf(i)}(!t||n.length!==0)&&r.push(n);return}let s=0;for(let i=0;i<n.length+1;i++)if(i===n.length||e.indexOf(n[i])!==-1){const o=n.subarray(s,i);(!t||o.length!==0)&&r.push(o),s=i+1}}function MA(n,e,t){const r=n.length,s=[];let i=0,o=0;const a=new Array(r);for(let d=0;d<r;++d){const p=s.length;BA(n[d],e,t,s);const m=s.length-p;a[d]=m,i+=m,o=Math.max(o,m)}const u=He("int32",i*2),l=new Array(i),c=[r,o];let h=0;for(let d=0;d<r;++d)for(let p=0;p<a[d];++p)u[h*2]=d,u[h*2+1]=p,l[h]=s[h],++h;return[u,l,c]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VA(n,e){const t=He("int32",n.length);for(let r=0;r<n.length;++r)t[r]=fg(n[r]).modulo(e).getLowBitsUnsigned();return t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UA=Rt((n,e)=>n-e);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zA(n,e){const t=new Array(n.rank);for(let s=0;s<t.length;s++)t[s]=n.shape[s]*e[s];const r=De(t,n.dtype);for(let s=0;s<r.values.length;++s){const i=r.indexToLoc(s),o=new Array(n.rank);for(let u=0;u<o.length;u++)o[u]=i[u]%n.shape[u];const a=n.locToIndex(o);r.values[s]=n.values[a]}return r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Os=(n,e)=>{const t=e.value-n.value;return t===0?n.index-e.index:t};function B1(n,e,t=0,r=n.length-1){for(;r>t;){if(r-t>600){const a=r-t+1,u=e-t+1,l=Math.log(a),c=.5*Math.exp(2*l/3),h=.5*Math.sqrt(l*c*(a-c)/a)*Math.sign(u-a/2),d=Math.max(t,Math.floor(e-u*c/a+h)),p=Math.min(r,Math.floor(e+(a-u)*c/a+h));B1(n,e,d,p)}const s=n[e];let i=t,o=r;for(Nn(n,t,e),Os(n[r],s)>0&&Nn(n,t,r);i<o;){for(Nn(n,i,o),i++,o--;Os(n[i],s)<0;)i=i+1;for(;Os(n[o],s)>0;)o=o-1}Os(n[t],s)===0?Nn(n,t,o):(o=o+1,Nn(n,o,r)),o<=e&&(t=o+1),e<=o&&(r=o-1)}}function WA(n,e,t,r,s){const i=e[e.length-1],[o,a]=[n.length/i,i],u=yn(t,o*r),l=yn("int32",o*r);for(let h=0;h<o;h++){const d=h*a,p=n.subarray(d,d+a);let m=new Array(p.length);p.forEach(($,C)=>m[C]={value:$,index:C}),r<m.length&&(B1(m,r),m=m.slice(0,r)),s&&m.sort(Os);const y=h*r,g=u.subarray(y,y+r),x=l.subarray(y,y+r);for(let $=0;$<r;$++)g[$]=m[$].value,x[$]=m[$].index}const c=e.slice();return c[c.length-1]=r,[De(c,t,u),De(c,"int32",l)]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GA(n,e,t,r){const s=Ve(e,t)[0],i=[1,t[0],1];for(let m=0;m<s;m++)i[0]*=t[m];i[1]=t[s];for(let m=s+1;m<t.length;m++)i[2]*=t[m];const o={},a=new Int32Array(t[s]),u=new Yr(i,r,n),l=[],c=i[0]===1&&i[2]===1;for(let m=0;m<t[s];m++){let y;if(c)y=n[m].toString();else{const g=[];for(let x=0;x<i[0];x++)for(let $=0;$<i[2];$++)g.push(u.get(x,m,$));y=g.join(",")}if(o[y]!==void 0)a[m]=o[y];else{const g=Object.keys(o).length;o[y]=g,a[m]=g,l.push(m)}}const h=i.slice();h[1]=Object.keys(o).length;const d=new Yr(h,r);l.forEach((m,y)=>{for(let g=0;g<i[0];g++)for(let x=0;x<i[2];x++)d.set(u.get(g,m,x),g,y,x)});const p=t.slice();return p[s]=h[1],{outputValues:d.values,outputShape:p,indices:a}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HA=Object.freeze(Object.defineProperty({__proto__:null,simpleAbsImpl:GR,addImpl:jR,bincountImpl:qR,bincountReduceImpl:KR,castImpl:HR,ceilImpl:XR,concatImpl:YR,equalImpl:QR,expImpl:ZR,expm1Impl:JR,floorImpl:eA,gatherNdImpl:tA,gatherV2Impl:nA,greaterImpl:rA,greaterEqualImpl:sA,lessImpl:iA,lessEqualImpl:oA,linSpaceImpl:aA,logImpl:uA,maxImpl:lA,maximumImpl:cA,minimumImpl:hA,multiplyImpl:L1,negImpl:dA,notEqualImpl:pA,prodImpl:mA,raggedGatherImpl:$A,raggedRangeImpl:SA,raggedTensorToTensorImpl:TA,rangeImpl:CA,rsqrtImpl:EA,scatterImpl:NA,sigmoidImpl:IA,sliceImpl:kA,sparseFillEmptyRowsImpl:_A,sparseReshapeImpl:RA,sparseSegmentReductionImpl:AA,sqrtImpl:OA,squaredDifferenceImpl:DA,stridedSliceImpl:FA,stringNGramsImpl:LA,stringSplitImpl:MA,stringToHashBucketFastImpl:VA,subImpl:UA,tileImpl:zA,topKImpl:WA,transposeImpl:fA,uniqueImpl:GA},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{addImpl:jA,bincountImpl:M1,bincountReduceImpl:qA,castImpl:KA,ceilImpl:XA,concatImpl:YA,equalImpl:QA,expImpl:ZA,expm1Impl:JA,floorImpl:eO,gatherNdImpl:tO,gatherV2Impl:nO,greaterImpl:rO,greaterEqualImpl:sO,lessImpl:iO,lessEqualImpl:oO,linSpaceImpl:aO,logImpl:uO,maxImpl:lO,maximumImpl:cO,minimumImpl:hO,multiplyImpl:dO,negImpl:pO,notEqualImpl:fO,prodImpl:mO,raggedGatherImpl:gO,raggedRangeImpl:yO,raggedTensorToTensorImpl:xO,rangeImpl:bO,rsqrtImpl:wO,scatterImpl:vO,sigmoidImpl:$O,simpleAbsImpl:V1,sliceImpl:SO,sparseFillEmptyRowsImpl:TO,sparseReshapeImpl:CO,sparseSegmentReductionImpl:U1,sqrtImpl:EO,stridedSliceImpl:NO,stringNGramsImpl:IO,stringSplitImpl:kO,stringToHashBucketFastImpl:_O,subImpl:RO,tileImpl:AO,topKImpl:OO,transposeImpl:Qd,uniqueImpl:DO}=HA;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function z1(n,e){return["x","y","z","w","u","v"].slice(0,e).map(t=>`${n}.${t}`)}function at(n,e){return e===1?[n]:z1(n,e)}function FO(n,e){if(n===1)return"rc";let t="";for(let r=0;r<n;r++)t+=e[r],r<n-1&&(t+=",");return t}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class PO{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=ht(this.outputShape.length),this.rank===0)this.userCode=`
        void main() {
          setOutput(vec4(getA(), 0., 0., 0.));
        }
      `;else{const t=at("rc",this.rank),r=Ee(this.rank),s=this.getOutOfBoundsCondition(t),i=this.getSetup(t),o=this.getOutput(t);this.userCode=`
        void main() {
          ${r} rc = getOutputCoords();

          if(${s}) {
            setOutput(vec4(0));
          } else {
            ${i}

            setOutput(vec4(${o}));
          }
        }
      `}}getSourceCoordsArr(e){const t=[];for(let r=0;r<=1;r++)for(let s=0;s<=1;s++){let i=`${r===0?"r":"rp1"}, ${s===0?"c":"cp1"}`;for(let o=2;o<this.rank;o++)i=`${e[e.length-1-o]},`+i;t.push(i)}return t}getOutOfBoundsCondition(e){if(this.rank===1)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let r=this.rank-2;r<this.rank;r++)t+=`${e[r]} >= ${this.enableShapeUniforms?`outShape[${r}]`:this.outputShape[r]}`,r<this.rank-1&&(t+="||");return t}getSetup(e){if(this.rank===1)return"";const t=e.slice(-2),r=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],s=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`
      int r = ${t[0]};
      int c = ${t[1]};
      int rp1 = r + 1;
      int cp1 = c + 1;

      bool cEdge = cp1 >= ${r};
      bool rEdge = rp1 >= ${s};
    `}getOutput(e){const t=this.getSourceCoordsArr(e);return this.rank===1?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${t[0]}),
            cEdge ? 0. : getA(${t[1]}),
            rEdge ? 0. : getA(${t[2]}),
            rEdge || cEdge ? 0. : getA(${t[3]})`}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class W1{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=ht(this.outputShape.length);let r="";for(let s=0;s<4;s++){let i="thisRC = rc;";s%2===1&&(i+="thisRC.z += 1;"),s>1&&(i+="thisRC.y += 1;"),r+=`
        ${i}
        ${s>0?"if(thisRC.y < rows && thisRC.z < cols){":""}
          int flatIndex = getFlatIndex(thisRC);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);
          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${s}] =
            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);
        ${s>0?"}":""}
      `}this.userCode=`
      ${LO(t,this.enableShapeUniforms)}
      ${this.enableShapeUniforms?Xd():Kd(e)}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.);

        ivec3 thisRC;
        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};
        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};

        ${r}

        setOutput(result);
      }
    `}}function LO(n,e){return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${e?F_(["r","c","d"],"inputShape"):Fr(["r","c","d"],n)}
      return ivec3(r, c, d);
    }
  `}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class BO{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(e,t,r){const s=Zf(t,r),i=Jf(e,s,r);i in this.freeTextures||(this.freeTextures[i]=[]),i in this.usedTextures||(this.usedTextures[i]=[]);const o=Qf(e,s,this.gpgpu.gl,this.gpgpu.textureConfig,r);if(this.freeTextures[i].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=o,this.log();const u=this.freeTextures[i].shift();return this.usedTextures[i].push(u),u}let a;return s===Ge.PACKED_2X2_FLOAT32?a=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):s===Ge.PACKED_2X2_FLOAT16?a=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):s===Ge.UNPACKED_FLOAT32?a=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):s===Ge.UNPACKED_FLOAT16?a=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):s===Ge.PACKED_4X1_UNSIGNED_BYTE&&(a=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[i].push(a),this.numUsedTextures++,this._numBytesAllocated+=o,this.log(),a}releaseTexture(e,t,r,s){if(this.freeTextures==null)return;const i=Zf(r,s),o=Jf(t,i,s);o in this.freeTextures||(this.freeTextures[o]=[]);const a=Qf(t,i,this.gpgpu.gl,this.gpgpu.textureConfig,s),u=B().get("WEBGL_DELETE_TEXTURE_THRESHOLD");u!==-1&&this._numBytesAllocated>u?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=a):(this.freeTextures[o].push(e),this.numFreeTextures++,this._numBytesFree+=a),this.numUsedTextures--;const l=this.usedTextures[o],c=l.indexOf(e);if(c<0)throw new Error("Cannot release a texture that was never provided by this texture manager");l.splice(c,1),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(this.freeTextures!=null){for(const e in this.freeTextures)this.freeTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t.texture)});for(const e in this.usedTextures)this.usedTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t.texture)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function MO(n,e){const t=n;if(e===t.R32F)return 4;if(e===t.R16F)return 2;if(e===t.RGBA32F)return 16;if(e===n.RGBA)return 16;if(e===t.RGBA16F)return 8;if(e===t.RGBA8)return 4;throw new Error(`Unknown internal format ${e}`)}function Qf(n,e,t,r,s){const i=VO(e,r);let o;if(s){const[u,l]=ls(n[0],n[1]);o=u*l}else{const[u,l]=di(n[0],n[1]);o=u*l}const a=MO(t,i);return o*a}function VO(n,e){switch(n){case Ge.PACKED_2X2_FLOAT32:return F1(e);case Ge.PACKED_2X2_FLOAT16:return P1(e);case Ge.UNPACKED_FLOAT32:return A1(e);case Ge.UNPACKED_FLOAT16:return O1(e);case Ge.PACKED_4X1_UNSIGNED_BYTE:return D1(e);default:throw new Error(`Unknown physical texture type ${n}`)}}function UO(n){return B().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?n?Ge.PACKED_2X2_FLOAT32:Ge.UNPACKED_FLOAT32:n?Ge.PACKED_2X2_FLOAT16:Ge.UNPACKED_FLOAT16}function Zf(n,e){if(n===Nt.UPLOAD)return Ge.PACKED_2X2_FLOAT32;if(n===Nt.RENDER||n==null)return UO(e);if(n===Nt.DOWNLOAD||n===Nt.PIXELS)return Ge.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${n}`)}function Jf(n,e,t){return`${n[0]}_${n[1]}_${e}_${t}`}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class pn{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=ht(this.outputShape.length),this.userCode=`
      float unaryOperation(float x) {
        ${t}
      }

      void main() {
        float x = getAAtOutCoords();
        float y = unaryOperation(x);

        setOutput(y);
      }
    `}}const Xt="if (isnan(x)) return x;",zO="return x;",em="return abs(x);",WO="return (x >= 0.0) ? x : (exp(x) - 1.0);",GO=Xt+`
  return (x < 0.0) ? 0.0 : x;
`,HO=Xt+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,Vn="return x;",jO="return 1.0 / (1.0 + exp(-1.0 * x));";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qO="return x;",KO=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,XO=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,YO=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,QO="return 1.0 / (1.0 + exp(-1.0 * x));";class Gn{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=ht(this.outputShape.length),this.userCode=`
      vec4 unaryOperation(vec4 x) {
        ${t}
      }

      void main() {
        vec4 x = getAAtOutCoords();
        vec4 y = unaryOperation(x);

        setOutput(y);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ZO{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=ht(this.outputShape.length);const t=e.length,r=at("rc",t),s=Ee(t),i=FO(t,r),o=r.slice(-2),a=t<=1?"rc":`vec2(${o.join(",")})`;this.userCode=`
      void main() {
        ${s} rc = getOutputCoords();
        vec4 packedInput = getA(${i});

        setOutput(getChannel(packedInput, ${a}));
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JO=Ad,eD=1e-7,tD=1e-4,Hi={};function nD(n){return n in Hi||(Hi[n]={}),Hi[n]}const rD=B().getNumber("CPU_HANDOFF_SIZE_THRESHOLD"),sD=600;function iD(){return B().global.screen==null?1024:B().global.screen.height*B().global.screen.width*window.devicePixelRatio*sD/1024/1024}class ta extends Lu{constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!B().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(e!=null){if(e instanceof Ga)t=e;else{const r=on(B().getNumber("WEBGL_VERSION"),e);t=new Ga(r)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const r=on(B().getNumber("WEBGL_VERSION"));t=new Ga(r),this.binaryCache=nD(B().getNumber("WEBGL_VERSION")),this.gpgpuCreatedLocally=!0}this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new BO(this.gpgpu),this.numMBBeforeWarning=iD(),this.texData=new Mm(this,Zt())}nextDataId(){return ta.nextDataId++}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(e,t,r,s,i,o){const a=this.makeTensorInfo(t,r),u=this.texData.get(a.dataId);u.isPacked=!1,u.texture={texture:e,texShape:[s,i]},u.texShape=[s,i];const l=Wi(t),c=new jf(l,!1,o),h=this.runWebGLProgram(c,[a],r,[[s,i]]);return h.shape=t,u.texture=null,this.disposeIntermediateTensorInfo(a),h.dataId}write(e,t,r){if((B().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||B().getBool("DEBUG"))&&this.checkNumericalProblems(e),r==="complex64"&&e!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const s={id:this.nextDataId()};return this.texData.set(s,{shape:t,dtype:r,values:e,usage:Nt.UPLOAD,refCount:1}),s}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){const t=this.texData.get(e);t.refCount++}decRef(e){if(this.texData.has(e)){const t=this.texData.get(e);t.refCount--}}move(e,t,r,s,i){if(B().getBool("DEBUG")&&this.checkNumericalProblems(t),s==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:r,dtype:s,values:t,usage:Nt.UPLOAD,refCount:i})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:r,dtype:s,complexTensorInfos:i,slice:o,shape:a,isPacked:u}=t;if(o!=null){let d;u?d=new Gn(a,Vn):d=new pn(a,Vn);const p=this.runWebGLProgram(d,[{dataId:e,shape:a,dtype:s}],s),m=this.readSync(p.dataId);return this.disposeIntermediateTensorInfo(p),m}if(r!=null)return this.convertAndCacheOnCPU(e);if(s==="string")return r;const l=this.activeTimers!=null;let c;l&&(c=Pt());let h;if(s==="complex64"){const d=this.readSync(i.real.dataId),p=this.readSync(i.imag.dataId);h=mu(d,p)}else h=this.getValuesFromTexture(e);return l&&(this.downloadWaitMs+=Pt()-c),this.convertAndCacheOnCPU(e,h)}async read(e){if(this.pendingRead.has(e)){const m=this.pendingRead.get(e);return new Promise(y=>m.push(y))}const t=this.texData.get(e),{values:r,shape:s,slice:i,dtype:o,complexTensorInfos:a,isPacked:u}=t;if(i!=null){let m;u?m=new Gn(s,Vn):m=new pn(s,Vn);const y=this.runWebGLProgram(m,[{dataId:e,shape:s,dtype:o}],o),g=this.read(y.dataId);return this.disposeIntermediateTensorInfo(y),g}if(r!=null)return this.convertAndCacheOnCPU(e);if(B().getBool("DEBUG")&&!B().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&B().getNumber("WEBGL_VERSION")===2)throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let l=null,c;if(o!=="complex64"&&B().get("WEBGL_BUFFER_SUPPORTED")){c=this.decode(e);const m=this.texData.get(c.dataId);l=this.gpgpu.createBufferFromTexture(m.texture.texture,...Vi(s))}this.pendingRead.set(e,[]),o!=="complex64"&&await this.gpgpu.createAndWaitForFence();let h;if(o==="complex64"){const m=await Promise.all([this.read(a.real.dataId),this.read(a.imag.dataId)]),y=m[0],g=m[1];h=mu(y,g)}else if(l==null)h=this.getValuesFromTexture(e);else{const m=q(s);h=this.gpgpu.downloadFloat32MatrixFromBuffer(l,m)}if(c!=null&&this.disposeIntermediateTensorInfo(c),l!=null){const m=this.gpgpu.gl;J(m,()=>m.deleteBuffer(l))}const d=this.convertAndCacheOnCPU(e,h),p=this.pendingRead.get(e);return this.pendingRead.delete(e),p.forEach(m=>m(d)),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&Zt().removeDataId(e,this),this.pendingDeletes--),d}readToGPU(e,t={}){const r=this.texData.get(e),{values:s,shape:i,slice:o,dtype:a,isPacked:u,texture:l}=r;if(a==="complex64")throw new Error("Does not support reading texture for complex64 dtype.");if(o!=null){let p;u?p=new Gn(i,Vn):p=new pn(i,Vn);const m=this.runWebGLProgram(p,[{dataId:e,shape:i,dtype:a}],a),y=this.readToGPU(m,t);return this.disposeIntermediateTensorInfo(m),y}if(l==null)throw s!=null?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const c=this.decode(e,t.customTexShape),h=Zt().makeTensorFromTensorInfo(c),d=this.texData.get(c.dataId);return Object.assign({tensorRef:h},d.texture)}bufferSync(e){const t=this.readSync(e.dataId);if(e.dtype==="string")try{const r=t.map(s=>vr(s));return De(e.shape,e.dtype,r)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return De(e.shape,e.dtype,t)}checkNumericalProblems(e){if(e!=null)for(let t=0;t<e.length;t++){const r=e[t];if(!u_(r))throw B().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${r} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${r} cannot be represented on this device.`)}}getValuesFromTexture(e){const{shape:t,dtype:r,isPacked:s}=this.texData.get(e),i=q(t);if(B().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const d=this.decode(e),p=this.texData.get(d.dataId),m=this.gpgpu.downloadMatrixFromPackedTexture(p.texture.texture,...Vi(t)).subarray(0,i);return this.disposeIntermediateTensorInfo(d),m}const o=B().getBool("WEBGL_PACK")&&s===!0,a=o?Wi(t):t,u=o?new TR(a):new SR(a),l=this.runWebGLProgram(u,[{shape:a,dtype:r,dataId:e}],"float32"),c=this.texData.get(l.dataId),h=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(c.texture.texture,c.texShape[0],c.texShape[1]).subarray(0,i);return this.disposeIntermediateTensorInfo(l),h}timerAvailable(){return B().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){const t=this.activeTimers,r=[];let s=!1;this.programTimersStack==null?(this.programTimersStack=r,s=!0):this.activeTimers.push(r),this.activeTimers=r,e();const i=An(this.activeTimers.map(u=>u.query)).filter(u=>u!=null),o=An(this.activeTimers.map(u=>u.name)).filter(u=>u!=null);this.activeTimers=t,s&&(this.programTimersStack=null);const a={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(B().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const u=await Promise.all(i);a.kernelMs=Um(u),a.getExtraProfileInfo=()=>u.map((l,c)=>({name:o[c],ms:l})).map(l=>`${l.name}: ${l.ms}`).join(", ")}else a.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,a})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return B().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:Pt(),endMs:null}}endTimer(e){return B().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=Pt(),e)}async getQueryTime(e){if(B().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:r}=this.texData.get(e);return r!=null&&(this.disposeData(r.real.dataId,t),this.disposeData(r.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:r,texShape:s,usage:i,isPacked:o,slice:a}=this.texData.get(e),u=a&&a.origDataId||e,l=this.dataRefCount.get(u);l>1?this.dataRefCount.set(u,l-1):(this.dataRefCount.delete(u),t!=null&&(this.numBytesInGPU-=this.computeBytes(s,r),this.textureManager.releaseTexture(t,s,i,o)));const c=this.texData.get(e);c.texture=null,c.texShape=null,c.isPacked=!1,c.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=rD){return B().getBool("WEBGL_CPU_FORWARD")&&e.every(r=>this.texData.get(r.dataId).texture==null&&q(r.shape)<t)}getGPGPUContext(){return this.gpgpu}where(e){Lt("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return JO(e.shape,t)}packedUnaryOp(e,t,r){const s=new Gn(e.shape,t),i=this.compileAndRun(s,[e],r);return Zt().makeTensorFromTensorInfo(i)}abs(e){if(this.shouldExecuteOnCPU([e])&&e.dtype!=="complex64"){const s=V1(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,s)}if(B().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,em,e.dtype);const t=new pn(e.shape,em),r=this.compileAndRun(t,[e]);return Zt().makeTensorFromTensorInfo(r)}makeTensorInfo(e,t,r){let s;if(t==="string"&&r!=null&&r.length>0&&kn(r[0])){const i=r.map(o=>_n(o));s=this.write(i,e,t)}else s=this.write(r,e,t);return this.texData.get(s).usage=null,{dataId:s,shape:e,dtype:t}}makeOutput(e,t,r){return Zt().makeTensorFromTensorInfo(this.makeTensorInfo(e,t,r),this)}unpackTensor(e){const t=new ZO(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new PO(e.shape),r=!0;return this.runWebGLProgram(t,[e],e.dtype,null,r)}packedReshape(e,t){const r=[ns(e.shape),...rs(e.shape)],s={dtype:e.dtype,shape:r,dataId:e.dataId},i=[ns(t),...rs(t)],o=new W1(i,r),a=!0,u=[r],l=this.runWebGLProgram(o,[s],e.dtype,u,a);return{dataId:l.dataId,shape:t,dtype:l.dtype}}decode(e,t){const r=this.texData.get(e),{isPacked:s,shape:i,dtype:o}=r;if(t!=null){const d=q(i),p=t[0]*t[1]*4;N(d<=p,()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data.")}const a=Wi(i);let u;s?u=new $R(a):u=new vR(a);const l=!0,c=[t!=null?t:Vi(a)],h=this.runWebGLProgram(u,[{shape:a,dtype:o,dataId:e}],o,c,l,t);return{dtype:o,shape:i,dataId:h.dataId}}runWebGLProgram(e,t,r,s,i=!1,o){const a=this.makeTensorInfo(e.outputShape,r),u=this.texData.get(a.dataId);if(e.packedOutput&&(u.isPacked=!0),e.outPackingScheme===Xs.DENSE){const x=o!=null?o:Vi(e.outputShape);u.texShape=x.map($=>$*2)}if(e.outTexUsage!=null&&(u.usage=e.outTexUsage),q(a.shape)===0)return u.values=yn(a.dtype,0),a;const l=[],c=t.map(x=>{if(x.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let $=this.texData.get(x.dataId);if($.texture==null){if(!e.packedInputs&&q(x.shape)<=B().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:x.shape,texData:null,isUniform:!0,uniformValues:$.values};e.packedInputs&&($.isPacked=!0,$.shape=x.shape)}if(this.uploadToGPU(x.dataId),!!$.isPacked!=!!e.packedInputs)x=$.isPacked?this.unpackTensor(x):this.packTensor(x),l.push(x),$=this.texData.get(x.dataId);else if($.isPacked&&!yo($.shape,x.shape)){const C=x,S=x.shape;x.shape=$.shape,x=this.packedReshape(x,S),l.push(x),$=this.texData.get(x.dataId),C.shape=S}return{shape:x.shape,texData:$,isUniform:!1}});this.uploadToGPU(a.dataId);const h={shape:a.shape,texData:u,isUniform:!1},d=wR(e,c,h),p=this.getAndSaveBinary(d,()=>xR(this.gpgpu,e,c,h)),m=this.activeTimers!=null;let y;m&&(y=this.startTimer()),B().get("ENGINE_COMPILE_ONLY")||bR(this.gpgpu,p,c,h,s),l.forEach(x=>this.disposeIntermediateTensorInfo(x)),m&&(y=this.endTimer(y),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(y)}));const g=B().get("WEBGL_FLUSH_THRESHOLD");if(g>0){const x=Pt();x-this.lastGlFlushTime>g&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=x)}if(!B().getBool("WEBGL_LAZILY_UNPACK")&&u.isPacked&&i===!1){const x=this.unpackTensor(a);return this.disposeIntermediateTensorInfo(a),x}return a}compileAndRun(e,t,r,s,i=!1){return r=r||t[0].dtype,this.runWebGLProgram(e,t,r,s,i)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(B().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(t=>{this.gpgpu.deleteProgram(this.binaryCache[t].webGLProgram),delete this.binaryCache[t]}),this.textureManager.dispose(),this.canvas!=null&&typeof HTMLCanvasElement<"u"&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return this.floatPrecisionValue==null&&(this.floatPrecisionValue=ie(()=>{if(!B().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=B().getBool("DEBUG");B().set("DEBUG",!1);const t=this.abs(ue(1e-8)).dataSync()[0];if(B().set("DEBUG",e),t>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return this.floatPrecision()===32?eD:tD}uploadToGPU(e){const t=this.texData.get(e),{shape:r,dtype:s,values:i,texture:o,usage:a,isPacked:u}=t;if(o!=null)return;const l=this.activeTimers!=null;let c;l&&(c=Pt());let h=t.texShape;if(h==null&&(h=E_(r,u),t.texShape=h),i!=null){const d=Wi(r);let p,m=h[1],y=h[0];const g=i instanceof Uint8Array||i instanceof Uint8ClampedArray;(u||!g)&&([m,y]=ls(h[0],h[1])),u?p=new ER(d,g):p=new jf(d,g);const x=g?[y,m]:h,$=this.makeTensorInfo(x,s),C=this.texData.get($.dataId);g?C.usage=Nt.PIXELS:C.usage=Nt.UPLOAD,C.texShape=x,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture($.dataId),m,y,i);const S=[[y,m]],I=!0,A=this.runWebGLProgram(p,[$],s,S,I),L=this.texData.get(A.dataId);t.texShape=L.texShape,t.isPacked=L.isPacked,t.usage=L.usage,B().get("ENGINE_COMPILE_ONLY")?this.disposeData(A.dataId):(t.texture=L.texture,t.values=null,this.texData.delete(A.dataId)),this.disposeIntermediateTensorInfo($),l&&(this.uploadWaitMs+=Pt()-c)}else{const d=this.acquireTexture(h,a,s,u);t.texture=d}}convertAndCacheOnCPU(e,t){const r=this.texData.get(e),{dtype:s}=r;return t!=null&&(r.values=oD(t,s)),r.values}acquireTexture(e,t,r,s){if(this.numBytesInGPU+=this.computeBytes(e,r),!this.warnedAboutMemory&&this.numBytesInGPU>this.numMBBeforeWarning*1024*1024){const i=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${i} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,s)}computeBytes(e,t){return e[0]*e[1]*Zi(t)}checkCompileCompletion(){for(const[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){const e=[];if(this.gpgpu.parallelCompilationExtension){for(const[,t]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(t));return Promise.all(e)}else{for(const[,t]of Object.entries(this.binaryCache)){const r=new Promise(s=>{try{this.checkCompletion_(t),s(!0)}catch(i){throw i}});e.push(r)}return Promise.all(e)}}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await vx(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS)===!1)throw console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS)===!1?(E1(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.")):new Error("Failed to link vertex and fragment shaders.");return!0}getUniformLocations(){for(const[,e]of Object.entries(this.binaryCache)){const{uniformLocations:t,customUniformLocations:r,infLoc:s,nanLoc:i,inShapesLocations:o,inTexShapesLocations:a,outShapeLocation:u,outShapeStridesLocation:l,outTexShapeLocation:c}=R1(this.gpgpu,e.program,e.webGLProgram);e.uniformLocations=t,e.customUniformLocations=r,e.infLoc=s,e.nanLoc=i,e.inShapesLocations=o,e.inTexShapesLocations=a,e.outShapeLocation=u,e.outShapeStridesLocation=l,e.outTexShapeLocation=c}}createTensorFromTexture(e,t,r){const{texture:s,height:i,width:o,channels:a}=e,u=Zt().backend;if(!u.gpgpu.gl.isTexture(s))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");const l=u.writeTexture(s,t,r,i,o,a);return Zt().makeTensorFromDataId(l,t,r,u)}}ta.nextDataId=0;function oD(n,e){if(e==="float32"||e==="complex64")return n;if(e==="int32"||e==="bool"){const t=e==="int32"?new Int32Array(n.length):new Uint8Array(n.length);for(let r=0;r<t.length;++r)t[r]=Math.round(n[r]);return t}else throw new Error(`Unknown dtype ${e}`)}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Ah()&&Lg("webgl",()=>new ta,2);/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Zd=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`;class ss{constructor(e,t,r){this.variableNames=["A","B"],this.outputShape=fe(t,r),this.enableShapeUniforms=ht(this.outputShape.length),this.userCode=`
      float binaryOperation(float a, float b) {
        ${e}
      }

      void main() {
        float a = getAAtOutCoords();
        float b = getBAtOutCoords();
        setOutput(binaryOperation(a, b));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mi=`
  result.r = isNaN.r ? NAN : result.r;
  result.g = isNaN.g ? NAN : result.g;
  result.b = isNaN.b ? NAN : result.b;
  result.a = isNaN.a ? NAN : result.a;
`;class gi{constructor(e,t,r,s=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=fe(t,r);const i=this.outputShape.length;this.enableShapeUniforms=ht(i);let o="";if(s)if(i===0||q(this.outputShape)===1)o=`
          result.y = 0.;
          result.z = 0.;
          result.w = 0.;
        `;else if(o=`
          ${Ee(i)} coords = getOutputCoords();
        `,i===1)this.enableShapeUniforms?o+=`
            result.y = (coords + 1) >= outShape ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `:o+=`
            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `;else{const u=at("coords",i);this.enableShapeUniforms?o+=`
            bool nextRowOutOfBounds =
              (${u[i-2]} + 1) >= outShape[${i} - 2];
            bool nextColOutOfBounds =
              (${u[i-1]} + 1) >= outShape[${i} - 1];
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `:o+=`
            bool nextRowOutOfBounds =
              (${u[i-2]} + 1) >= ${this.outputShape[i-2]};
            bool nextColOutOfBounds =
              (${u[i-1]} + 1) >= ${this.outputShape[i-1]};
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `}this.userCode=`
      vec4 binaryOperation(vec4 a, vec4 b) {
        ${e}
      }

      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();

        vec4 result = binaryOperation(a, b);
        ${o}

        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function St(n){const{inputs:e,backend:t}=n,{x:r}=e;return t.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const aD={kernelName:Io,backendName:"webgl",kernelFunc:St};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nr(n){const{inputs:e,backend:t}=n,{real:r,imag:s}=e,i=t.makeTensorInfo(r.shape,"complex64"),o=t.texData.get(i.dataId),a=St({inputs:{x:r},backend:t}),u=St({inputs:{x:s},backend:t});return o.complexTensorInfos={real:a,imag:u},i}const uD={kernelName:ul,backendName:"webgl",kernelFunc:nr};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const G1="return (a < 0.) ? b * a : a;",H1=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function lD(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{alpha:i}=r,o=t.makeTensorInfo([],"float32",Rr(i,"float32")),a=B().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new gi(H1,s.shape,o.shape):new ss(G1,s.shape,o.shape),u=t.runWebGLProgram(a,[s,o],"float32");return t.disposeIntermediateTensorInfo(o),u}const cD={kernelName:Ql,backendName:"webgl",kernelFunc:lD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const j1="return (a < 0.) ? b * a : a;",q1=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function hD(n){const{inputs:e,backend:t}=n,{x:r,alpha:s}=e,i=B().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new gi(q1,r.shape,s.shape):new ss(j1,r.shape,s.shape);return t.runWebGLProgram(i,[r,s],"float32")}const dD={kernelName:kc,backendName:"webgl",kernelFunc:hD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fs="if (isnan(x)) return x;";function me({opSnippet:n,packedOpSnippet:e,cpuKernelImpl:t,dtype:r}){return({inputs:s,backend:i})=>{const{x:o}=s,a=i,u=r||o.dtype;if(a.shouldExecuteOnCPU([o])&&t!=null){const h=a.texData.get(o.dataId),d=t(h.values,u);return a.makeTensorInfo(o.shape,u,d)}const l=B().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&e!=null;let c;return l?c=new Gn(o.shape,e):c=new pn(o.shape,n),a.runWebGLProgram(c,[o],u)}}function qe({opSnippet:n,packedOpSnippet:e,checkOutOfBounds:t=!1,supportsComplex:r=!1,cpuKernelImpl:s,dtype:i}){return({inputs:o,backend:a})=>{const{a:u,b:l}=o,c=a;if(r&&u.dtype==="complex64"){const m=c.texData.get(u.dataId),y=c.texData.get(l.dataId),[g,x]=[[m.complexTensorInfos.real,y.complexTensorInfos.real],[m.complexTensorInfos.imag,y.complexTensorInfos.imag]].map(C=>{const[S,I]=C,A={dataId:S.dataId,dtype:S.dtype,shape:u.shape},L={dataId:I.dataId,dtype:I.dtype,shape:l.shape},P=new ss(n,u.shape,l.shape);return c.runWebGLProgram(P,[A,L],sn(S.dtype,I.dtype))}),$=nr({inputs:{real:g,imag:x},backend:c});return c.disposeIntermediateTensorInfo(g),c.disposeIntermediateTensorInfo(x),$}const h=i||sn(u.dtype,l.dtype);if((u.dtype==="string"||l.dtype==="string"||c.shouldExecuteOnCPU([u,l]))&&s!=null){const m=c.texData.get(u.dataId).values,y=c.texData.get(l.dataId).values,g=u.dtype==="string"?qs(m):m,x=u.dtype==="string"?qs(y):y,[$,C]=s(u.shape,l.shape,g,x,h),S=c.makeTensorInfo(C,h),I=c.texData.get(S.dataId);return I.values=$,S}const d=B().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&e!=null;let p;return d?p=new gi(e,u.shape,l.shape,t):p=new ss(n,u.shape,l.shape),c.runWebGLProgram(p,[u,l],h)}}function Ys(n,e=!1){if(n==="linear")return e?qO:zO;if(n==="relu")return e?XO:GO;if(n==="elu")return e?KO:WO;if(n==="relu6")return e?YO:HO;if(n==="prelu")return e?q1:j1;if(n==="leakyrelu")return e?H1:G1;if(n==="sigmoid")return e?QO:jO;throw new Error(`Activation ${n} has not been implemented for the WebGL backend.`)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class K1{constructor(e,t,r,s=!1,i=!1,o=!1,a=null,u=!1,l=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=r,this.enableShapeUniforms=ht(this.outputShape.length);const c=s?e[1]:e[2],h=Math.ceil(c/2),d=s?"i * 2, rc.y":"rc.y, i * 2",p=i?"rc.z, i * 2":"i * 2, rc.z",m=s?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],y=i?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let g="",x="";a&&(u?g=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${a}
        }`:l?g=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${a}
        }`:g=`vec4 activation(vec4 x) {
          ${a}
        }`,x="result = activation(result);");const $=o?"result += getBiasAtOutCoords();":"";o&&this.variableNames.push("bias"),u&&this.variableNames.push("preluActivationWeights"),l&&this.variableNames.push("leakyreluAlpha");let C="rc.x",S="rc.x";e[0]<t[0]?C=`int(min(float(rc.x), ${e[0]-1}.))`:t[0]<e[0]&&(S=`int(min(float(rc.x), ${t[0]-1}.))`),this.userCode=`
      ${g}
      // Don't use uniform for sharedDimensionPacked for performance.
      const float sharedDimension = ${h}.0;

      vec4 dot2x2ARowBCol(ivec3 rc) {
        vec4 result = vec4(0);
        for (int i = 0; i < ${h}; i++) {
          int batchA = ${C};
          int batchB = ${S};
          vec4 a = getMatrixA(batchA, ${d});
          vec4 b = getMatrixB(batchB, ${p});

          // These swizzled products need to be separately added.
          // See: https://github.com/tensorflow/tfjs/issues/1735
          result += (${m[0]} * ${y[0]});
          result += (${m[1]} * ${y[1]});
        }
        return result;
      }

      void main() {
        ivec3 rc = getOutputCoords();
        vec4 result = dot2x2ARowBCol(rc);

        ${$}

        ${x}

        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tm={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"};class nm{constructor(e,t,r){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=fe(t,r),this.userCode=`
      float binaryOpComplex(
          float areal, float aimag, float breal, float bimag) {
        ${e}
      }

      void main() {
        float areal = getARealAtOutCoords();
        float aimag = getAImagAtOutCoords();
        float breal = getBRealAtOutCoords();
        float bimag = getBImagAtOutCoords();
        setOutput(binaryOpComplex(areal, aimag, breal, bimag));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rm="return a * b;";function Jd(n){const{inputs:e,backend:t}=n,{a:r,b:s}=e,i=sn(r.dtype,s.dtype);if(r.dtype==="complex64"){const a=t.texData.get(r.dataId),u=t.texData.get(s.dataId),l=new nm(tm.REAL,r.shape,s.shape),c=new nm(tm.IMAG,r.shape,s.shape),h=[{dataId:a.complexTensorInfos.real.dataId,dtype:a.complexTensorInfos.real.dtype,shape:r.shape},{dataId:a.complexTensorInfos.imag.dataId,dtype:a.complexTensorInfos.imag.dtype,shape:r.shape},{dataId:u.complexTensorInfos.real.dataId,dtype:u.complexTensorInfos.real.dtype,shape:s.shape},{dataId:u.complexTensorInfos.imag.dataId,dtype:u.complexTensorInfos.imag.dtype,shape:s.shape}],d=t.runWebGLProgram(l,h,"float32"),p=t.runWebGLProgram(c,h,"float32"),m=nr({inputs:{real:d,imag:p},backend:t});return t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(p),m}if(t.shouldExecuteOnCPU([r,s])){const a=t.texData.get(r.dataId),u=t.texData.get(s.dataId),[l,c]=dO(r.shape,s.shape,a.values,u.values,i),h=t.makeTensorInfo(c,i),d=t.texData.get(h.dataId);return d.values=l,h}let o;return B().getBool("WEBGL_PACK_BINARY_OPERATIONS")?o=new gi(rm,r.shape,s.shape):o=new ss(rm,r.shape,s.shape),t.runWebGLProgram(o,[r,s],i)}const pD={kernelName:xc,backendName:"webgl",kernelFunc:Jd};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fD(n,e,t){const r=[ns(n.shape),...rs(n.shape)],s={dtype:n.dtype,shape:r,dataId:n.dataId},i=[ns(e),...rs(e)],o=new W1(i,r),a=!0,u=[r],l=t.runWebGLProgram(o,[s],n.dtype,u,a);return{dataId:l.dataId,shape:e,dtype:l.dtype}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Z(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{shape:i}=r,o=t,a=q(s.shape),u=zm(i,a),l=q(u);N(a===l,()=>`The new shape (${u}) has ${l} elements and the old shape (${s.shape}) has ${a} elements. The new shape and old shape must have the same number of elements.`);const c=o.texData.get(s.dataId);return c.isPacked&&!yo(s.shape,u)&&!(c.texture!==null&&yo(c.shape,u))?fD(s,u,o):(o.incRef(s.dataId),{dataId:s.dataId,shape:u,dtype:s.dtype})}const mD={kernelName:Bc,backendName:"webgl",kernelFunc:Z};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class sm{constructor(e,t){this.variableNames=["x"];const{windowSize:r,batchSize:s,inSize:i,outSize:o}=e;this.outputShape=[s,o];const a=Math.floor(r/4)*4,u=r%4;let l="sumValue += dot(values, ones);";if(t!=null){const h=1/t;l=`sumValue += dot(values * ${br(h)?h.toPrecision(2):h}, ones);`}let c="";i%r>0&&(c=`
        if (inIdx < 0 || inIdx >= ${i}) {
          return 0.0;
        }
      `),this.userCode=`
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${c}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${r};

        float sumValue = 0.0;

        for (int i = 0; i < ${a}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${l}
        }

        int inIdx = inOffset + ${a};
        if (${u===1}) {
          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);

          ${l}
        } else if (${u===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1), 0.0, 0.0);

          ${l}
        } else if (${u===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2), 0.0);

          ${l}
        }
        setOutput(sumValue);
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class gD{constructor(e,t){this.variableNames=["x"];const{windowSize:r,batchSize:s,inSize:i,outSize:o}=e;this.outputShape=[s,o];let a="0.0",u="";t==="prod"?a="1.0":t==="min"?(a="1.0 / 1e-20",u="min"):t==="max"&&(a="-1.0 / 1e-20",u="max");let l=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="sum"?l="sumValue":t==="prod"?l="prodValue":t==="all"?l="allValue":t==="any"&&(l="anyValue");const c=Math.floor(r/4)*4,h=r%4;let d=`
      if (${t==="sum"}) {
        sumValue += dot(values, ones);
      } else if (${t==="prod"}) {
        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);
        prodValue *= tmp[0] * tmp[1];
      } else {
        minMaxValue = ${u}(values, minMaxValue);
        if (${t==="min"} || ${t==="max"}) {
          minMaxValue = ${u}(values, minMaxValue);
          bvec4 isNaN = isnan(values);
          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {
            minMaxValue = vec4(NAN);
          }
        }
      }
    `,p="vec4";t==="all"?(a="1.0",d=`
        bool reducedAllValue = all(values);
        float floatedReducedAllValue = float(reducedAllValue);
        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);
      `,p="bvec4"):t==="any"&&(a="0.0",d=`
        bool reducedAnyValue = any(values);
        float floatedReducedAnyValue = float(reducedAnyValue);
        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);
      `,p="bvec4");let m="";i%r>0&&(m=`
        if (inIdx < 0 || inIdx >= ${i}) {
          return initializationValue;
        }
      `),this.userCode=`
      const float initializationValue = ${a};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${m}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${r};

        vec4 minMaxValue = vec4(${a});
        float prodValue = 1.0;
        float sumValue = 0.0;
        float allValue = 1.0;
        float anyValue = 0.0;

        for (int i = 0; i < ${c}; i += 4) {
          int inIdx = inOffset + i;
          ${p} values = ${p}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${d}
        }

        int inIdx = inOffset + ${c};
        if (${h===1}) {
          ${p} values = ${p}(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          ${d}
        } else if (${h===2}) {
          ${p} values = ${p}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          ${d}
        } else if (${h===3}) {
          ${p} values = ${p}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          ${d}
        }
        setOutput(${l});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yD(n){const e=[];for(;e.length===0||e[e.length-1].outSize!==1;){const t=e.length?e[e.length-1].outSize:n[1],r=Qo(t);e.push({inSize:t,windowSize:r,outSize:Math.ceil(t/r)})}return e}function Lr(n,e,t,r){const s=yD(n.shape);let i=n;for(let o=0;o<s.length;o++){const{inSize:a,windowSize:u,outSize:l}=s[o];let c,h;t==="mean"?c=o===0?new sm({windowSize:u,inSize:a,batchSize:n.shape[0],outSize:l},a):new sm({windowSize:u,inSize:a,batchSize:n.shape[0],outSize:l}):c=new gD({windowSize:u,inSize:a,batchSize:n.shape[0],outSize:l},t),h=i,i=r.runWebGLProgram(c,[i],e),h.dataId!==n.dataId&&r.disposeIntermediateTensorInfo(h)}return i}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class xD{constructor(e,t){this.variableNames=["A"];const r=new Array(e.length);for(let o=0;o<r.length;o++)r[o]=e[t[o]];this.outputShape=r,this.rank=r.length;const s=Ee(this.rank),i=bD(t);this.userCode=`
    void main() {
      ${s} resRC = getOutputCoords();
      setOutput(getA(${i}));
    }
    `}}function bD(n){const e=n.length;if(e>6)throw Error(`Transpose for rank ${e} is not yet supported`);const t=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(e);for(let s=0;s<n.length;s++)r[n[s]]=t[s];return r.join()}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class wD{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const r=new Array(e.length);for(let c=0;c<r.length;c++)r[c]=e[t[c]];if(this.outputShape=r,this.rank=r.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const s=Ee(this.rank),i=z1("rc",this.rank),o=new Array(this.rank);for(let c=0;c<t.length;c++)o[t[c]]=i[c];const a=`vec2(${o.slice(-2).join()})`,u=`++${i[this.rank-1]} < ${r[this.rank-1]}`,l=`getChannel(getA(${o.join()}), ${a})`;this.userCode=`
    void main() {
      ${s} rc = getOutputCoords();
      vec4 result = vec4(0.);
      result[0] = ${l};
      if(${u}) {
        result[1] = ${l};
      }
      --${i[this.rank-1]};
      if(++${i[this.rank-2]} < ${r[this.rank-2]}) {
        result[2] = ${l};
        if(${u}) {
          result[3] = ${l};
        }
      }
      setOutput(result);
    }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function na(n,e,t){const r=B().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new wD(n.shape,e):new xD(n.shape,e);return t.runWebGLProgram(r,[n],n.dtype)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vD(n,e,t,r){const s=e,i=n.shape.length,o=Ve(s,n.shape);let a=o;const u=qt(a,i),l=u!=null;let c=n;l&&(c=na(n,u,r),a=Kt(a.length,i)),un("sum",a,i);const[h,d]=$n(c.shape,a);let p=h;t&&(p=_t(h,o));const m=q(d),g=q(n.shape)/m,x=Z({inputs:{x:c},attrs:{shape:[g,m]},backend:r}),$=_o(n.dtype),C=Lr(x,$,"sum",r),S=Z({inputs:{x:C},attrs:{shape:p},backend:r});return r.disposeIntermediateTensorInfo(x),r.disposeIntermediateTensorInfo(C),l&&r.disposeIntermediateTensorInfo(c),S}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ra(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{axis:i,keepDims:o}=r;return vD(s,i,o,t)}const $D={kernelName:nh,backendName:"webgl",kernelFunc:ra};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lt(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{perm:i}=r,o=t,a=s.shape.length,u=new Array(a);for(let c=0;c<u.length;c++)u[c]=s.shape[i[c]];let l;if(o.shouldExecuteOnCPU([s])){const h=o.texData.get(s.dataId).values,d=Qd(h,s.shape,s.dtype,i,u);l=o.makeTensorInfo(u,s.dtype);const p=o.texData.get(l.dataId);p.values=d}else l=na(s,i,o);return l}const SD={kernelName:Fs,backendName:"webgl",kernelFunc:lt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const X1=1e3;function bo({a:n,b:e,transposeA:t,transposeB:r,backend:s,bias:i=null,preluActivationWeights:o=null,leakyreluAlpha:a=0,activation:u=null}){const l=n.shape.length,c=e.shape.length,h=t?n.shape[l-2]:n.shape[l-1],d=r?e.shape[c-1]:e.shape[c-2],p=t?n.shape[l-1]:n.shape[l-2],m=r?e.shape[c-2]:e.shape[c-1],y=n.shape.slice(0,-2),g=e.shape.slice(0,-2),x=q(y),$=q(g),S=fe(n.shape.slice(0,-2),e.shape.slice(0,-2)).concat([p,m]);N(h===d,()=>`Error in matMul: inner shapes (${h}) and (${d}) of Tensors with shapes ${n.shape} and ${e.shape} and transposeA=${t} and transposeB=${r} must match.`);const I=t?[x,h,p]:[x,p,h],A=r?[$,m,d]:[$,d,m],L=Z({inputs:{x:n},backend:s,attrs:{shape:I}}),P=Z({inputs:{x:e},backend:s,attrs:{shape:A}}),M=[L,P],U=Math.max(x,$),V=t?L.shape[1]:L.shape[2],j=i!=null,K=o!=null,H=u==="leakyrelu",ne=u!=null?Ys(u,!0):null,le=j||K||H||ne!=null;let pe;if((p===1||m===1)&&V>X1&&le===!1){let Ne=L,Ke=P;t&&(Ne=lt({inputs:{x:L},backend:s,attrs:{perm:[0,2,1]}}),M.push(Ne)),r&&(Ke=lt({inputs:{x:P},backend:s,attrs:{perm:[0,2,1]}}),M.push(Ke));const dt=m!==1,pt=m===1;let et=Ne;dt&&(et=Z({inputs:{x:Ne},backend:s,attrs:{shape:[U,V,1]}}),M.push(et));const ft=m===1?2:1;let tt=Ke;pt&&(tt=Z({inputs:{x:Ke},backend:s,attrs:{shape:[U,1,V]}}),M.push(tt));const We=Jd({inputs:{a:et,b:tt},backend:s});pe=ra({inputs:{x:We},backend:s,attrs:{axis:ft,keepDims:!0}}),M.push(We)}else{const Ne=sn(n.dtype,e.dtype),Ke=new K1(I,A,[U,p,m],t,r,j,ne,K,H),dt=[L,P];if(i!=null&&dt.push(i),K&&dt.push(o),H){const pt=s.makeTensorInfo([],"float32",Rr(a,"float32"));dt.push(pt),M.push(pt)}pe=s.runWebGLProgram(Ke,dt,Ne)}const de=Z({inputs:{x:pe},backend:s,attrs:{shape:S}});M.push(pe);for(const Ne of M)s.disposeIntermediateTensorInfo(Ne);return de}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TD(n){const{inputs:e,backend:t,attrs:r}=n,{a:s,b:i,bias:o,preluActivationWeights:a}=e,{transposeA:u,transposeB:l,activation:c,leakyreluAlpha:h}=r;return bo({a:s,b:i,transposeA:u,transposeB:l,backend:t,bias:o,preluActivationWeights:a,leakyreluAlpha:h,activation:c})}const CD={kernelName:no,backendName:"webgl",kernelFunc:TD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const im="return abs(x);";function ED(n){const{inputs:e,backend:t}=n,{x:r}=e;if(t.shouldExecuteOnCPU([r])&&r.dtype!=="complex64"){const i=t.texData.get(r.dataId),o=V1(i.values);return t.makeTensorInfo(r.shape,r.dtype,o)}let s;return B().getBool("WEBGL_PACK_UNARY_OPERATIONS")?s=new Gn(r.shape,im):s=new pn(r.shape,im),t.runWebGLProgram(s,[r],r.dtype)}const ND={kernelName:Uu,backendName:"webgl",kernelFunc:ED};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ID=Xt+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return acos(x);
`,kD=me({opSnippet:ID}),_D={kernelName:zu,backendName:"webgl",kernelFunc:kD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RD=Xt+`
  if (x < 1.0) return NAN;
return log(x + sqrt(x * x - 1.0));`,AD=me({opSnippet:RD}),OD={kernelName:Wu,backendName:"webgl",kernelFunc:AD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const om="return a + b;",DD=qe({opSnippet:om,packedOpSnippet:om,supportsComplex:!0,cpuKernelImpl:jA}),FD={kernelName:Eo,backendName:"webgl",kernelFunc:DD};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class PD{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map((i,o)=>`T${o}`);const r=[];this.variableNames.forEach(i=>{r.push(`float v${i} = get${i}AtOutCoords();`)});const s=this.variableNames.map(i=>`v${i}`).join(" + ");this.userCode=`
      void main() {
        ${r.join(`
        `)}

        float result = ${s};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class LD{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map((i,o)=>`T${o}`);const r=[];this.variableNames.forEach(i=>{r.push(`vec4 v${i} = get${i}AtOutCoords();`)});const s=this.variableNames.map(i=>`v${i}`).join(" + ");this.userCode=`
      void main() {
        ${r.join(`
        `)}

        vec4 result = ${s};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yi(n){const{inputs:e,backend:t}=n,r=e;if(r.length===1)return St({inputs:{x:r[0]},backend:t});if(r.length>B().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const u=Math.floor(r.length/2),l=Yi({inputs:r.slice(0,u),backend:t}),c=Yi({inputs:r.slice(u),backend:t});return Yi({inputs:[l,c],backend:t})}const s=r.map(u=>u.dtype).reduce((u,l)=>sn(u,l)),i=r.map(u=>u.shape),a=B().getBool("WEBGL_PACK")?new LD(r[0].shape,i):new PD(r[0].shape,i);return t.runWebGLProgram(a,r,s)}const BD={kernelName:Gu,backendName:"webgl",kernelFunc:Yi};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MD(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{axis:i,keepDims:o}=r,a=s.shape.length,u=Ve(i,s.shape);let l=u;const c=qt(l,a);let h=s;c!=null&&(h=lt({inputs:{x:s},backend:t,attrs:{perm:c}}),l=Kt(l.length,a)),un("all",l,a);const[d,p]=$n(h.shape,l),m=q(p),y=Z({inputs:{x:h},backend:t,attrs:{shape:[-1,m]}}),g=Lr(y,y.dtype,"all",t);let x;if(o){const $=_t(d,u);x=Z({inputs:{x:g},backend:t,attrs:{shape:$}})}else x=Z({inputs:{x:g},backend:t,attrs:{shape:d}});return t.disposeIntermediateTensorInfo(y),t.disposeIntermediateTensorInfo(g),c!=null&&t.disposeIntermediateTensorInfo(h),x}const VD={kernelName:Hu,backendName:"webgl",kernelFunc:MD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UD(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{axis:i,keepDims:o}=r,a=s.shape.length,u=Ve(i,s.shape);let l=u;const c=qt(l,a);let h=s;c!=null&&(h=lt({inputs:{x:s},backend:t,attrs:{perm:c}}),l=Kt(l.length,a)),un("any",l,a);const[d,p]=$n(h.shape,l),m=q(p),y=Z({inputs:{x:h},backend:t,attrs:{shape:[-1,m]}}),g=Lr(y,y.dtype,"any",t);let x;if(o){const $=_t(d,u);x=Z({inputs:{x:g},backend:t,attrs:{shape:$}})}else x=Z({inputs:{x:g},backend:t,attrs:{shape:d}});return t.disposeIntermediateTensorInfo(y),t.disposeIntermediateTensorInfo(g),c!=null&&t.disposeIntermediateTensorInfo(h),x}const zD={kernelName:ju,backendName:"webgl",kernelFunc:UD};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class WD{constructor(e,t,r){this.variableNames=["A"];const{windowSize:s,batchSize:i,outSize:o}=e;r||this.variableNames.push("bestIndicesA"),this.outputShape=[i,o];const a=t==="max"?">":"<",u=r?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${s};

        int bestIndex = inOffset;
        float bestValue = getA(batch, bestIndex);

        for (int i = 0; i < ${s}; i++) {
          int inIdx = ${u};
          float candidate = getA(batch, inIdx);
          if (candidate ${a} bestValue) {
            bestValue = candidate;
            bestIndex = inIdx;
          }
        }
        setOutput(float(bestIndex));
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class GD{constructor(e,t,r,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,N(e.length>2,()=>`Packed arg${r.charAt(0).toUpperCase()+r.slice(1)} supports only inputs with rank above 2.`);const i=e[e.length-1],o=Math.ceil(i/t);this.outputShape=e.slice(0,-1),o>1&&this.outputShape.push(o),s||this.variableNames.push("bestIndicesA");const a=this.outputShape,u=a.length,l=Ee(u),c=at("coords",u);let h,d;if(o===1){d=u+1;const P=Ee(d);h=`
        ${P} sourceLocR = ${P}(${c.join()}, 0);
        ++${c[u-1]};
        ${P} sourceLocG = ${P}(${c.join()}, 0);
        ++${c[u-2]};
        ${P} sourceLocA = ${P}(${c.join()}, 0);
        --${c[u-1]};
        ${P} sourceLocB = ${P}(${c.join()}, 0);
        --${c[u-2]};`}else d=u,h=`
        ${l} sourceLocR = coords;
        ++${c[u-1]};
        ${l} sourceLocG = coords;
        ++${c[u-2]};
        ${l} sourceLocA = coords;
        --${c[u-1]};
        ${l} sourceLocB = coords;
        --${c[u-2]};`;const p=["x","y","z","w","u","v"].slice(0,d),m="."+p[d-1],y=p.map(P=>"int "+P),g=at("sourceLocR",d-1).concat("inIdx.r"),x=at("sourceLocG",d-1).concat("inIdx.g"),$=at("sourceLocB",d-1).concat("inIdx.b"),C=at("sourceLocA",d-1).concat("inIdx.a"),S=r==="max"?"greaterThan":"lessThan",I=s?"":`
          inIdx = round(vec4(getBestIndicesAChannel(${g.join()}),
                             getBestIndicesAChannel(${x.join()}),
                             getBestIndicesAChannel(${$.join()}),
                             getBestIndicesAChannel(${C.join()})));`,A=`vec4(
            getAChannel(${g.join()}),
            hasNextCol ? getAChannel(${x.join()}) : 0.,
            hasNextRow ? getAChannel(${$.join()}) : 0.,
            hasNextRow && hasNextCol ? getAChannel(${C.join()}) : 0.)`,L=s?"":`
      float getBestIndicesAChannel(${y.join()}) {
        return getChannel(getBestIndicesA(${p.join()}),
                                          vec2(${p.slice(-2).join()}));
      }`;this.userCode=`
      float getAChannel(${y.join()}) {
        return getChannel(getA(${p.join()}),
                               vec2(${p.slice(-2).join()}));
      }
      ${L}
      void main() {
        ${l} coords = getOutputCoords();
        bool hasNextCol = ${c[u-1]} < ${a[u-1]-1};
        bool hasNextRow = ${c[u-2]} < ${a[u-2]-1};
        ${h}
        ivec4 srcIdx = ivec4(sourceLocR${m}, sourceLocG${m},
          sourceLocB${m}, sourceLocA${m}) * ${t};
        ivec4 inIdx = srcIdx;
        vec4 bestIndex = vec4(inIdx);
        vec4 bestValue = ${A};

        for (int i = 0; i < ${t}; i++) {
          inIdx = srcIdx;
          ${I}
          vec4 candidate = ${A};
          bvec4 nan = isnan(candidate);
          bvec4 replace = bvec4(
            vec4(${S}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));

          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,
                           replace.y  ? candidate.y : bestValue.y,
                           replace.z  ? candidate.z : bestValue.z,
                           replace.w  ? candidate.w : bestValue.w);
          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));
          srcIdx++;
        }
        setOutput(bestIndex);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Y1(n,e,t,r=null){let s=e.shape[0],i=e.shape[1];r!=null&&(s=r.shape[0],i=r.shape[1]);const o=Qo(i),a={windowSize:o,inSize:i,batchSize:s,outSize:Math.ceil(i/o)},u=new WD(a,t,r==null),l=[e];r!=null&&l.push(r);const c=n.runWebGLProgram(u,l,"int32");if(c.shape[1]===1)return c;const h=Y1(n,e,t,c);return n.disposeIntermediateTensorInfo(c),h}function Q1(n,e,t,r=null){const s=r!=null?r.shape:e.shape,i=s[s.length-1],o=Qo(i),a=new GD(s,o,t,r==null),u=r==null?[e]:[e,r],l=n.runWebGLProgram(a,u,"int32");if(l.shape.length===e.shape.length){const c=Q1(n,e,t,l);return n.disposeIntermediateTensorInfo(l),c}return l}function Z1(n,e,t,r){const s=[t];if(un("arg"+r.charAt(0).toUpperCase()+r.slice(1),s,e.shape.length),!B().getBool("WEBGL_PACK_REDUCE")||e.shape.length<=2){const i=[],o=n.texData.get(e.dataId),a=o!==null&&o.isPacked;let u=e;a&&(u=n.unpackTensor(e),i.push(u));const[l,c]=$n(u.shape,s),h=q(c),d=Z({inputs:{x:u},backend:n,attrs:{shape:[-1,h]}});i.push(d);const p=Y1(n,d,r);i.push(p);const m=Z({inputs:{x:p},backend:n,attrs:{shape:l}});return i.forEach(y=>n.disposeIntermediateTensorInfo(y)),m}return Q1(n,e,r)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HD(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{axis:i}=r;let o=Ve(i,s.shape);const a=qt(o,s.shape.length);let u=s;const l=[];a!=null&&(u=lt({inputs:{x:s},backend:t,attrs:{perm:a}}),l.push(u),o=Kt(o.length,u.shape.length)),un("argMax",[o[0]],u.shape.length);const c=Z1(t,u,o[0],"max");return l.forEach(h=>t.disposeIntermediateTensorInfo(h)),c}const jD={kernelName:qu,backendName:"webgl",kernelFunc:HD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qD(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{axis:i}=r;let o=Ve(i,s.shape);const a=qt(o,s.shape.length);let u=s;const l=[];a!=null&&(u=lt({inputs:{x:s},backend:t,attrs:{perm:a}}),l.push(u),o=Kt(o.length,u.shape.length)),un("argMin",[o[0]],u.shape.length);const c=Z1(t,u,o[0],"min");return l.forEach(h=>t.disposeIntermediateTensorInfo(h)),c}const KD={kernelName:Ku,backendName:"webgl",kernelFunc:qD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const XD=Xt+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return asin(x);
`,YD=me({opSnippet:XD}),QD={kernelName:Xu,backendName:"webgl",kernelFunc:YD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZD=Xt+"return log(x + sqrt(x * x + 1.0));",JD=me({opSnippet:ZD}),eF={kernelName:Yu,backendName:"webgl",kernelFunc:JD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tF=Xt+`
  return atan(x);
`,nF=me({opSnippet:tF}),rF={kernelName:Qu,backendName:"webgl",kernelFunc:nF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sF=Zd+`
  return atan(a, b);
`,iF=`
  vec4 result = atan(a, b);
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+mi+`
  return result;
`,oF=qe({opSnippet:sF,packedOpSnippet:iF}),aF={kernelName:Ju,backendName:"webgl",kernelFunc:oF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uF=Xt+`
  if ((x < -1.0) || (x > 1.0)) return NAN;
return (log(1.0 + x) - log(1.0 - x)) / 2.0;`,lF=me({opSnippet:uF}),cF={kernelName:Zu,backendName:"webgl",kernelFunc:lF};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Qs{constructor(e,t,r,s=!1,i=!1){if(this.variableNames=["x"],t==="avg"&&r)throw new Error("Cannot compute positions for average pool.");const o=e.filterWidth,a=e.strideHeight,u=e.strideWidth,l=e.dilationHeight,c=e.dilationWidth,h=e.effectiveFilterHeight,d=e.effectiveFilterWidth,p=e.padInfo.top,m=e.padInfo.left;this.outputShape=e.outShape;const y=t==="avg",g=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,x=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let $="0.0";if(y||($="-1.0 / 1e-20"),r){const P=">=";this.userCode=`
        const ivec2 strides = ivec2(${a}, ${u});
        const ivec2 pads = ivec2(${p}, ${m});

        void main() {
          ivec4 coords = getOutputCoords();
          int batch = coords[0];
          int d = coords[3];

          ivec2 xRCCorner = coords.yz * strides - pads;
          int xRCorner = xRCCorner.x;
          int xCCorner = xRCCorner.y;

          // max/min x(?, ?, d) to get y(yR, yC, d).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;
          float avgValue = 0.0;

          for (int wR = 0; wR < ${h};
              wR += ${l}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${d};
                wC += ${c}) {
              int xC = xCCorner + wC;

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float value = getX(batch, xR, xC, d);

              // If a min / max value has already been found, use it. If not,
              // use the current value.
              float currMinMaxValue = mix(
                  value, minMaxValue, minMaxValueFound);
              if (value ${P} currMinMaxValue) {
                minMaxValue = value;
                minMaxValueFound = 1.0;
                minMaxPosition = ${s?i?g:x:`wR * ${d} + wC`};
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}const C="max";let S=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(S="avgValue / count");const I=Math.floor(o/4)*4,A=o%4,L=`
      if (${y}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${C}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec2 strides = ivec2(${a}, ${u});
      const ivec2 pads = ivec2(${p}, ${m});
      const float initializationValue = ${$};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xR, int xC, int d) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xR, xC, d);
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d = coords[3];

        ivec2 xRCCorner = coords.yz * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // max/min x(?, ?, d) to get y(yR, yC, d).
        // ? = to be determined
        vec4 minMaxValue = vec4(${$});
        float avgValue = 0.0;
        count = 0.0;

        for (int wR = 0; wR < ${h};
            wR += ${l}) {
          int xR = xRCorner + wR;

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${I}; wC += 4) {
            int xC = xCCorner + wC * ${c};

            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${c}, d),
              getValue(batch, xR, xC + 2 * ${c}, d),
              getValue(batch, xR, xC + 3 * ${c}, d)
            );

            ${L}
          }

          int xC = xCCorner + ${I};
          if (${A===1}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              initializationValue,
              initializationValue,
              initializationValue
            );

            ${L}
          } else if (${A===2}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${c}, d),
              initializationValue,
              initializationValue
            );

            ${L}
          } else if (${A===3}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${c}, d),
              getValue(batch, xR, xC + 2 * ${c}, d),
              initializationValue
            );

            ${L}
          }
        }
        setOutput(${S});
      }
    `}}class ep{constructor(e,t,r,s=!1,i=!1){if(this.variableNames=["x"],t==="avg"&&r)throw new Error("Cannot compute positions for average pool.");const o=e.filterWidth,a=e.strideDepth,u=e.strideHeight,l=e.strideWidth,c=e.dilationDepth,h=e.dilationHeight,d=e.dilationWidth,p=e.effectiveFilterDepth,m=e.effectiveFilterHeight,y=e.effectiveFilterWidth,g=e.padInfo.front,x=e.padInfo.top,$=e.padInfo.left;this.outputShape=e.outShape;const C=t==="avg";let S="0.0";if(C||(S="-1.0 / 1e-20"),r){const U=">=";this.userCode=`
        const ivec3 strides =
            ivec3(${a}, ${u}, ${l});
        const ivec3 pads = ivec3(${g}, ${x}, ${$});

        void main() {
          ivec5 coords = getOutputCoords();
          int batch = coords.x;
          int ch = coords.u;

          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
          int xDCorner = xCorner.x;
          int xRCorner = xCorner.y;
          int xCCorner = xCorner.z;

          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;

          for (int wD = 0; wD < ${p};
              wD += ${c}) {
            int xD = xDCorner + wD;

            if (xD < 0 || xD >= ${e.inDepth}) {
              continue;
            }

            for (int wR = 0; wR < ${m};
                wR += ${h}) {
              int xR = xRCorner + wR;

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int wC = 0; wC < ${y};
                  wC += ${d}) {
                int xC = xCCorner + wC;

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float value = getX(batch, xD, xR, xC, ch);

                // If a min / max value has already been found, use it. If not,
                // use the current value.
                float currMinMaxValue = mix(
                    value, minMaxValue, minMaxValueFound);
                if (value ${U} currMinMaxValue) {
                  minMaxValue = value;
                  minMaxValueFound = 1.0;
                  minMaxPosition = ${s?i?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${m} * ${y} +
                      wR * ${y} + wC`};
                }
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}const I="max";let A=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(A="avgValue / count");const L=Math.floor(o/4)*4,P=o%4,M=`
      if (${C}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${I}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec3 strides =
        ivec3(${a}, ${u}, ${l});
      const ivec3 pads = ivec3(${g}, ${x}, ${$});
      const float initializationValue = ${S};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xD, int xR, int xC, int ch) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xD, xR, xC, ch);
      }

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xDCorner = xCorner.x;
        int xRCorner = xCorner.y;
        int xCCorner = xCorner.z;

        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).
        // ? = to be determined
        vec4 minMaxValue = vec4(${S});
        float avgValue = 0.0;
        count = 0.0;

        for (int wD = 0; wD < ${p};
            wD += ${c}) {
          int xD = xDCorner + wD;

          if (xD < 0 || xD >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${m};
            wR += ${h}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${L}; wC += 4) {
              int xC = xCCorner + wC * ${d};

              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                getValue(batch, xD, xR, xC + 2 * ${d}, ch),
                getValue(batch, xD, xR, xC + 3 * ${d}, ch)
              );

              ${M}
            }

            int xC = xCCorner + ${L};
            if (${P===1}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                initializationValue,
                initializationValue,
                initializationValue
              );

              ${M}
            } else if (${P===2}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                initializationValue,
                initializationValue
              );

              ${M}
            } else if (${P===3}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                getValue(batch, xD, xR, xC + 2 * ${d}, ch),
                initializationValue
              );

              ${M}
            }
          }
          setOutput(${A});
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hF(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e;pi(s,"avgPool");const{filterSize:i,strides:o,pad:a,dimRoundingMode:u}=r,l=1;N(Et(o,l),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${l}'`);const c=Ar(s.shape,i,o,l,a,u);if(c.filterWidth===1&&c.filterHeight===1&&Oe(c.inShape,c.outShape))return St({inputs:{x:s},backend:t});const h=new Qs(c,"avg",!1);return t.runWebGLProgram(h,[s],"float32")}const dF={kernelName:el,backendName:"webgl",kernelFunc:hF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pF(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{filterSize:i,strides:o,pad:a,dimRoundingMode:u,dataFormat:l}=r,c=[1,1,1],h=si(s.shape,i,o,c,a,u,l),d=new ep(h,"avg",!1);return t.runWebGLProgram(d,[s],"float32")}const fF={kernelName:tl,backendName:"webgl",kernelFunc:pF};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class mF{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,r=e.filterWidth,s=e.strideHeight,i=e.strideWidth,o=e.dilationHeight,a=e.dilationWidth,u=e.effectiveFilterHeight,l=e.effectiveFilterWidth,c=u-1-e.padInfo.top,h=l-1-e.padInfo.left,d=1/(t*r);this.userCode=`
      const ivec2 pads = ivec2(${c}, ${h});
      const float avgMultiplier = float(${d});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${u};
            wR += ${o}) {
          float dyR = float(dyRCorner + wR) / ${s}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${l};
            wC+= ${a}) {
            float dyC = float(dyCCorner + wC) / ${i}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);

            dotProd += dyValue * avgMultiplier;
          }
        }
        setOutput(dotProd);
      }
    `}}class gF{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,r=e.filterHeight,s=e.filterWidth,i=e.strideDepth,o=e.strideHeight,a=e.strideWidth,u=e.dilationDepth,l=e.dilationHeight,c=e.dilationWidth,h=e.effectiveFilterDepth,d=e.effectiveFilterHeight,p=e.effectiveFilterWidth,m=h-1-e.padInfo.front,y=d-1-e.padInfo.top,g=p-1-e.padInfo.left,x=1/(t*r*s);this.userCode=`
      const ivec3 pads = ivec3(${m}, ${y}, ${g});
      const float avgMultiplier = float(${x});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${h};
            wD += ${u}) {
          float dyD = float(dyDCorner + wD) / ${i}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${d};
              wR += ${l}) {
            float dyR = float(dyRCorner + wR) / ${o}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${p};
                wC += ${c}) {
              float dyC = float(dyCCorner + wC) / ${a}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);

              dotProd += dyValue * avgMultiplier;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yF(n){const{inputs:e,backend:t,attrs:r}=n,{dy:s,input:i}=e,o=i,{filterSize:a,strides:u,pad:l,dimRoundingMode:c}=r,h=[1,1,1],d=si(o.shape,a,u,h,l,c),p=new gF(d);return t.runWebGLProgram(p,[s],o.dtype)}const xF={kernelName:Jm,backendName:"webgl",kernelFunc:yF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bF(n){const{inputs:e,backend:t,attrs:r}=n,{dy:s,input:i}=e,o=i;pi([s,i],"avgPoolGrad");const{filterSize:a,strides:u,pad:l}=r,c=Ar(o.shape,a,u,1,l),h=new mF(c);return t.runWebGLProgram(h,[s],o.dtype)}const wF={kernelName:Zm,backendName:"webgl",kernelFunc:bF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vF(n){const{inputs:e,backend:t,attrs:r}=n,{a:s,b:i}=e,{transposeA:o,transposeB:a}=r;return bo({a:s,b:i,transposeA:o,transposeB:a,backend:t})}const $F={kernelName:nl,backendName:"webgl",kernelFunc:vF};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class SF{constructor(e,t,r,s,i,o){this.outputShape=[],this.variableNames=["x","mean","variance"],fe(e,t),fe(e,r);let a="0.0";s!=null&&(fe(e,s),this.variableNames.push("offset"),a="getOffsetAtOutCoords()");let u="1.0";i!=null&&(fe(e,i),this.variableNames.push("scale"),u="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        float x = getXAtOutCoords();
        float mean = getMeanAtOutCoords();
        float variance = getVarianceAtOutCoords();
        float offset = ${a};
        float scale = ${u};
        float inv = scale * inversesqrt(variance + float(${o}));
        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class TF{constructor(e,t,r,s,i,o){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],fe(e,t),fe(e,r);let a="vec4(0.0)";s!=null&&(fe(e,s),this.variableNames.push("offset"),a="getOffsetAtOutCoords()");let u="vec4(1.0)";i!=null&&(fe(e,i),this.variableNames.push("scale"),u="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        vec4 offset = ${a};
        vec4 scale = ${u};

        vec4 x = getXAtOutCoords();
        vec4 mean = getMeanAtOutCoords();
        vec4 variance = getVarianceAtOutCoords();

        vec4 inv = scale * inversesqrt(variance + vec4(${o}));

        setOutput((x - mean) * inv + offset);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CF=({inputs:n,backend:e,attrs:t})=>{const{x:r,mean:s,variance:i,offset:o,scale:a}=n;N(s.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),N(o==null||s.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),N(a==null||s.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:u}=t;u==null&&(u=.001);const l=[r,s,i];let c=null;o!=null&&(c=o.shape,l.push(o));let h=null;a!=null&&(h=a.shape,l.push(a));const d=B().getBool("WEBGL_PACK_NORMALIZATION")?new TF(r.shape,s.shape,i.shape,c,h,u):new SF(r.shape,s.shape,i.shape,c,h,u);return e.runWebGLProgram(d,l,l[0].dtype)},EF={kernelName:Ul,backendName:"webgl",kernelFunc:CF};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class NF{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=Ee(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const r=IF(this.rank);let s;const i=e.map((o,a)=>`sourceLoc.${Ru[a]} = start[${a}] + coords.${Ru[a]};`);s=`
        ${t} sourceLoc;
        ${t} coords = getOutputCoords();
        ${i.join(`
`)}
      `,this.userCode=`
      void main() {
        ${s}
        setOutput(getSource(${r}));
      }
    `}}const Ru=["x","y","z","w","u","v"];function IF(n){if(n===1)return"sourceLoc";if(n<=6)return Ru.slice(0,n).map(e=>"sourceLoc."+e).join(",");throw Error(`Slicing for rank ${n} is not yet supported`)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class kF{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const t=Ee(this.rank),r=at("coords",this.rank),s=at("sourceLoc",this.rank),i=this.rank===1?"sourceLoc":`vec2(${s.slice(-2).join()})`,o=`getChannel(getSource(${s.join()}), ${i})`,a=`
      result.x = ${o};
      if (++${r[this.rank-1]} < ${e[this.rank-1]}) {
        ++${s[this.rank-1]};
        result.y = ${o};
        --${s[this.rank-1]};
      }
    `,u=this.rank===1?"":`
      --${r[this.rank-1]};
      if (++${r[this.rank-2]} < ${e[this.rank-2]}) {
        ++${s[this.rank-2]};
        result.z = ${o};
        if (++${r[this.rank-1]} < ${e[this.rank-1]}) {
          ++${s[this.rank-1]};
          result.w = ${o};
        }
      }
    `,l=this.rank<=4?`sourceLoc = coords +
            ${t}(${e.map((c,h)=>`start[${h}]`).join()});`:e.map((c,h)=>`${s[h]} = ${r[h]} + start[${h}];`).join(`
`);this.userCode=`
      void main() {
        ${t} coords = getOutputCoords();
        ${t} sourceLoc;
        ${l}
        vec4 result = vec4(0.);
        ${a}
        ${u}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _F(n,e,t,r){const s=r.texData.get(n.dataId),i=r.makeTensorInfo(t,n.dtype),o=r.texData.get(i.dataId);Object.assign(o,s),o.refCount=1,o.shape=t,o.dtype=n.dtype;let a=qh(e,ze(n.shape));s.slice&&(a+=s.slice.flatOffset),o.slice={flatOffset:a,origDataId:s.slice&&s.slice.origDataId||n.dataId};const u=r.dataRefCount.get(o.slice.origDataId)||1;return r.dataRefCount.set(o.slice.origDataId,u+1),i}function ms(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{begin:i,size:o}=r,[a,u]=Yg(s,i,o);if(Vg(s,a,u),q(u)===0)return t.makeTensorInfo(u,s.dtype,[]);if(t.shouldExecuteOnCPU([s])||s.dtype==="string"){const h=t.texData.get(s.dataId),d=SO(h.values,a,u,s.shape,s.dtype);return t.makeTensorInfo(u,s.dtype,d)}const{isPacked:l}=t.texData.get(s.dataId),c=jh(s.shape,a,u);if(l||!c){const h=B().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new kF(u):new NF(u),d=[a];return t.runWebGLProgram(h,[s],s.dtype,d)}return t.uploadToGPU(s.dataId),_F(s,a,u,t)}const RF={kernelName:Xc,backendName:"webgl",kernelFunc:ms};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AF=n=>{const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{blockShape:i,crops:o}=r;N(s.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");const a=i.reduce(($,C)=>$*C),u=Vd(s.shape,i,a),l=Ud(u.length,i.length),c=zd(s.shape,i,a),h=Ix(o,i.length),d=kx(c,o,i.length),p=[],m=Z({inputs:{x:s},backend:t,attrs:{shape:u}}),y=lt({inputs:{x:m},backend:t,attrs:{perm:l}}),g=Z({inputs:{x:y},backend:t,attrs:{shape:c}}),x=ms({inputs:{x:g},backend:t,attrs:{begin:h,size:d}});return p.push(m),p.push(y),p.push(g),p.forEach($=>t.disposeIntermediateTensorInfo($)),x},OF={kernelName:rl,backendName:"webgl",kernelFunc:AF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DF(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,weights:i}=e,{size:o}=r,a=t.readSync(s.dataId),u=t.readSync(i.dataId),l=M1(a,u,i.dtype,i.shape,o);return t.makeTensorInfo([o],i.dtype,l)}const FF={kernelName:sl,backendName:"webgl",kernelFunc:DF};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PF(n){const{inputs:e,backend:t}=n,{s0:r,s1:s}=e,i=t.readSync(r.dataId),o=t.readSync(s.dataId),a=fe(Array.from(i),Array.from(o));return t.makeTensorInfo([a.length],"int32",Int32Array.from(a))}const LF={kernelName:il,backendName:"webgl",kernelFunc:PF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BF="return float(a != b);",J1=qe({opSnippet:BF,cpuKernelImpl:fO,dtype:"bool"}),MF={kernelName:wc,backendName:"webgl",kernelFunc:J1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yi(n){const{inputs:e,backend:t}=n,{input:r}=e,s=t.texData.get(r.dataId);return St({inputs:{x:s.complexTensorInfos.real},backend:t})}const VF={kernelName:Fc,backendName:"webgl",kernelFunc:yi};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UF="return float(int(x));";function zF(n,e){const t=new pn(n.shape,UF),r=e.runWebGLProgram(t,[n],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Au(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{dtype:i}=r;if(i==="complex64"){if(s.dtype==="complex64")return St({inputs:{x:s},backend:t});const o=Kn(s.shape),a=Au({inputs:{x:s},backend:t,attrs:{dtype:"float32"}}),u=nr({inputs:{real:a,imag:o},backend:t});return o.dispose(),t.disposeIntermediateTensorInfo(a),u}if(s.dtype==="complex64"){const o=yi({inputs:{input:s},backend:t}),a=Au({inputs:{x:o},backend:t,attrs:{dtype:i}});return t.disposeIntermediateTensorInfo(o),a}if(!Hm(s.dtype,i)){const o=St({inputs:{x:s},backend:t});return{dataId:o.dataId,shape:o.shape,dtype:i}}if(t.shouldExecuteOnCPU([s])){const o=t.texData.get(s.dataId).values,[a,u,l]=KA(o,s.shape,s.dtype,i);return t.makeTensorInfo(a,u,l)}if(i==="int32")return zF(s,t);if(i==="bool"){const o=t.makeTensorInfo([],"bool",yn("bool",1)),u=J1({inputs:{a:s,b:o},backend:t});return t.disposeIntermediateTensorInfo(o),u}throw new Error(`Error in Cast: failed to cast ${s.dtype} to ${i}`)}const WF={kernelName:No,backendName:"webgl",kernelFunc:Au};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const am="return ceil(x);",GF=me({opSnippet:am,packedOpSnippet:am,cpuKernelImpl:XA}),HF={kernelName:ol,backendName:"webgl",kernelFunc:GF};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class jF{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`

      void main() {
        float value = getAAtOutCoords();
        if (isnan(value)) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, minVal, maxVal));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class qF{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`
      void main() {
        vec4 value = getAAtOutCoords();

        if (any(isnan(value))) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KF(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{clipValueMin:i,clipValueMax:o}=r;let a;B().getBool("WEBGL_PACK_CLIP")?a=new qF(s.shape):a=new jF(s.shape);const u=[[i],[o]];return t.runWebGLProgram(a,[s],s.dtype,u)}const XF={kernelName:al,backendName:"webgl",kernelFunc:KF};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class YF{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode=`
      void main() {
        float re = abs(getRealAtOutCoords());
        float im = abs(getImagAtOutCoords());
        float mx = max(re, im);

        // sadly the length function in glsl is not underflow-safe
        // (at least not on Intel GPUs). So the safe solution is
        // to ensure underflow-safety in all cases.
        setOutput(
          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))
        );
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function um(n,e){return{dataId:e.dataId,dtype:e.dtype,shape:n.shape}}function QF(n){const{inputs:e,backend:t}=n,{x:r}=e,s=t.texData.get(r.dataId),i=new YF(r.shape),o=[um(r,s.complexTensorInfos.real),um(r,s.complexTensorInfos.imag)];return t.runWebGLProgram(i,o,o[0].dtype)}const ZF={kernelName:ll,backendName:"webgl",kernelFunc:QF};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class JF{constructor(e){this.outputShape=[],this.outputShape=Nr(e,1),this.variableNames=e.map((o,a)=>`T${a}`);const t=new Array(e.length-1);t[0]=e[0][1];for(let o=1;o<t.length;o++)t[o]=t[o-1]+e[o][1];const r=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let o=1;o<t.length;o++){const a=t[o-1];r.push(`else if (yC < ${t[o]}) setOutput(getT${o}(yR, yC-${a}));`)}const s=t.length,i=t[t.length-1];r.push(`else setOutput(getT${s}(yR, yC-${i}));`),this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int yR = coords.x;
        int yC = coords.y;

        ${r.join(`
        `)}
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class eP{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=Nr(e,t);const r=this.outputShape,s=r.length,i=Ee(s),o=at("coords",s),a=["x","y","z","w","u","v"].slice(0,s);this.variableNames=e.map((y,g)=>`T${g}`);const u=new Array(e.length-1);u[0]=e[0][t];for(let y=1;y<u.length;y++)u[y]=u[y-1]+e[y][t];const l=a[t],c=a.slice(-2),h=a.join();let d=`if (${l} < ${u[0]}) {
        return getChannel(
            getT0(${h}), vec2(${c.join()}));
        }`;for(let y=1;y<u.length;y++){const g=u[y-1];d+=`
        if (${l} < ${u[y]}  && ${l} >= ${u[y-1]}) {
          return getChannel(
            getT${y}(${ji(a,l,g)}),
            vec2(${ji(c,l,g)}));
        }`}const p=u.length,m=u[u.length-1];d+=`
        return getChannel(
          getT${p}(${ji(a,l,m)}),
          vec2(${ji(c,l,m)}));`,this.userCode=`
      float getValue(${a.map(y=>"int "+y)}) {
        ${d}
      }

      void main() {
        ${i} coords = getOutputCoords();
        vec4 result = vec4(getValue(${o}), 0., 0., 0.);

        ${o[s-1]} = ${o[s-1]} + 1;
        if (${o[s-1]} < ${r[s-1]}) {
          result.g = getValue(${o});
        }

        ${o[s-2]} = ${o[s-2]} + 1;
        if (${o[s-2]} < ${r[s-2]}) {
          result.a = getValue(${o});
        }

        ${o[s-1]} = ${o[s-1]} - 1;
        if (${o[s-2]} < ${r[s-2]} &&
            ${o[s-1]} < ${r[s-1]}) {
          result.b = getValue(${o});
        }
        setOutput(result);
      }
    `}}function ji(n,e,t){const r=n.indexOf(e);return n.map((i,o)=>o===r?`${i} - ${t}`:i).join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sa(n){const{inputs:e,backend:t}=n,{input:r}=e,s=t.texData.get(r.dataId);return St({inputs:{x:s.complexTensorInfos.imag},backend:t})}const tP={kernelName:ql,backendName:"webgl",kernelFunc:sa};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ds(n,e,t){const r=n[0].dtype;if(r==="complex64"){const p=n.map($=>yi({inputs:{input:$},backend:t})),m=n.map($=>sa({inputs:{input:$},backend:t})),y=Ds(p,e,t),g=Ds(m,e,t),x=nr({inputs:{real:y,imag:g},backend:t});return p.forEach($=>t.disposeIntermediateTensorInfo($)),m.forEach($=>t.disposeIntermediateTensorInfo($)),t.disposeIntermediateTensorInfo(y),t.disposeIntermediateTensorInfo(g),x}let s=t.shouldExecuteOnCPU(n);if(r==="string"&&(s=!0),s){const p=n.map(S=>{const I=q(S.shape.slice(e));return Z({inputs:{x:S},backend:t,attrs:{shape:[-1,I]}})}),m=p.map(S=>({vals:t.readSync(S.dataId),shape:S.shape})),y=Nr(p.map(S=>S.shape),1),g=p[0].shape[0]===1,x=YA(m,y,r,g),$=Nr(n.map(S=>S.shape),e),C=t.makeTensorInfo($,r,x);return p.forEach(S=>t.disposeIntermediateTensorInfo(S)),C}const i=n.filter(p=>q(p.shape)>0),o=B().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&i[0].shape.length>1;if(i.length===1){const p=o?new pn(n[0].shape,Vn):new Gn(n[0].shape,Vn);return t.runWebGLProgram(p,n,r)}const a=B().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(i.length>a){const p=[];for(let y=0;y<i.length;y+=a){const g=i.slice(y,y+a);p.push(Ds(g,e,t))}const m=Ds(p,e,t);for(const y of p)t.disposeIntermediateTensorInfo(y);return m}if(o){const p=new eP(i.map(m=>m.shape),e);return t.runWebGLProgram(p,i,r)}const{tensors2D:u,outShape:l}=nP(i,e,t),c=new JF(u.map(p=>p.shape)),h=t.runWebGLProgram(c,u,r);u.forEach(p=>t.disposeIntermediateTensorInfo(p));const d=Z({inputs:{x:h},attrs:{shape:l},backend:t});return t.disposeIntermediateTensorInfo(h),d}function nP(n,e,t){const r=Nr(n.map(i=>i.shape),e);return{tensors2D:n.map(i=>Z({inputs:{x:i},attrs:{shape:[-1,q(i.shape.slice(e))]},backend:t})),outShape:r}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eb(n){const{inputs:e,backend:t,attrs:r}=n,{axis:s}=r,i=Ve(s,e[0].shape)[0],o=e.map(l=>l.shape);$x(o,i);const a=Nr(e.map(l=>l.shape),i);if(q(a)===0)return t.makeTensorInfo(a,e[0].dtype,[]);const u=e.filter(l=>q(l.shape)>0);return u.length===1?St({inputs:{x:u[0]},backend:t}):Ds(u,i,t)}const rP={kernelName:cl,backendName:"webgl",kernelFunc:eb};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class tb{constructor(e,t=!1,r=null,s=!1,i=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const o=e.padInfo.top,a=e.padInfo.left,u=e.strideHeight,l=e.strideWidth,c=e.dilationHeight,h=e.dilationWidth,d=e.filterHeight,p=e.filterWidth,m=Math.floor(e.inChannels/4)*4,y=e.inChannels%4,g=e.dataFormat==="channelsLast",x=g?1:2,$=g?2:3,C=g?3:1;let S="",I="";r&&(s?S=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${r}
        }`:i?S=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${r}
        }`:S=`
          float activation(float x) {
            ${r}
          }
        `,I="result = activation(result);");const A=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),i&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${S}

      const ivec2 strides = ivec2(${u}, ${l});
      const ivec2 pads = ivec2(${o}, ${a});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d2 = coords[${C}];

        ivec2 xRCCorner =
            ivec2(coords[${x}], coords[${$}]) * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${d}; wR++) {
          int xR = xRCorner + wR * ${c};

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${p}; wC++) {
            int xC = xCCorner + wC * ${h};

            if (xC < 0 || xC >= ${e.inWidth}) {
              continue;
            }

            for (int d1 = 0; d1 < ${m}; d1 += 4) {
              vec4 wValues = vec4(
                getW(wR, wC, d1, d2),
                getW(wR, wC, d1 + 1, d2),
                getW(wR, wC, d1 + 2, d2),
                getW(wR, wC, d1 + 3, d2)
              );

              if (${g}) {
                vec4 xValues = vec4(
                  getX(batch, xR, xC, d1),
                  getX(batch, xR, xC, d1 + 1),
                  getX(batch, xR, xC, d1 + 2),
                  getX(batch, xR, xC, d1 + 3)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec4 xValues = vec4(
                  getX(batch, d1, xR, xC),
                  getX(batch, d1 + 1, xR, xC),
                  getX(batch, d1 + 2, xR, xC),
                  getX(batch, d1 + 3, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }
            }

            if (${y===1}) {

              if (${g}) {
                dotProd +=
                    getX(batch, xR, xC, ${m}) *
                    getW(wR, wC, ${m}, d2);
              } else {
                dotProd +=
                    getX(batch, ${m}, xR, xC) *
                    getW(wR, wC, ${m}, d2);
              }

            } else if (${y===2}) {
              vec2 wValues = vec2(
                getW(wR, wC, ${m}, d2),
                getW(wR, wC, ${m} + 1, d2)
              );

              if (${g}) {
                vec2 xValues = vec2(
                  getX(batch, xR, xC, ${m}),
                  getX(batch, xR, xC, ${m} + 1)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec2 xValues = vec2(
                  getX(batch, ${m}, xR, xC),
                  getX(batch, ${m} + 1, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            } else if (${y===3}) {
              vec3 wValues = vec3(
                getW(wR, wC, ${m}, d2),
                getW(wR, wC, ${m} + 1, d2),
                getW(wR, wC, ${m} + 2, d2)
              );

              if (${g}) {
                vec3 xValues = vec3(
                  getX(batch, xR, xC, ${m}),
                  getX(batch, xR, xC, ${m} + 1),
                  getX(batch, xR, xC, ${m} + 2)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec3 xValues = vec3(
                  getX(batch, ${m}, xR, xC),
                  getX(batch, ${m} + 1, xR, xC),
                  getX(batch, ${m} + 2, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            }
          }
        }

        float result = dotProd;
        ${A}
        ${I}
        setOutput(result);
      }
    `}}class sP{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,r=e.padInfo.top,s=e.padInfo.left,i=e.strideDepth,o=e.strideHeight,a=e.strideWidth,u=e.dilationDepth,l=e.dilationHeight,c=e.dilationWidth,h=e.filterDepth,d=e.filterHeight,p=e.filterWidth,m=Math.floor(e.inChannels/4)*4,y=e.inChannels%4;this.userCode=`
      const ivec3 strides = ivec3(${i}, ${o}, ${a});
      const ivec3 pads = ivec3(${t}, ${r}, ${s});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d2 = coords.u;

        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xFCorner = xFRCCorner.x;
        int xRCorner = xFRCCorner.y;
        int xCCorner = xFRCCorner.z;

        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get
        // y(yF, yR, yC, d2). ? = to be determined. : = across all
        // values in that axis.
        float dotProd = 0.0;
        for (int wF = 0; wF < ${h}; wF++) {
          int xF = xFCorner + wF * ${u};

          if (xF < 0 || xF >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${d}; wR++) {
            int xR = xRCorner + wR * ${l};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${p}; wC++) {
              int xC = xCCorner + wC * ${c};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              for (int d1 = 0; d1 < ${m}; d1 += 4) {
                vec4 xValues = vec4(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                vec4 wValues = vec4(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (${y===1}) {
                dotProd +=
                  getX(batch, xF, xR, xC, ${m}) *
                  getW(wF, wR, wC, ${m}, d2);
              } else if (${y===2}) {
                vec2 xValues = vec2(
                  getX(batch, xF, xR, xC, ${m}),
                  getX(batch, xF, xR, xC, ${m} + 1)
                );
                vec2 wValues = vec2(
                  getW(wF, wR, wC, ${m}, d2),
                  getW(wF, wR, wC, ${m} + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (${y===3}) {
                vec3 xValues = vec3(
                  getX(batch, xF, xR, xC, ${m}),
                  getX(batch, xF, xR, xC, ${m} + 1),
                  getX(batch, xF, xR, xC, ${m} + 2)
                );
                vec3 wValues = vec3(
                  getW(wF, wR, wC, ${m}, d2),
                  getW(wF, wR, wC, ${m} + 1, d2),
                  getW(wF, wR, wC, ${m} + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class nb{constructor(e,t=!1,r=null,s=!1,i=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=ht(this.outputShape.length);const o=e.padInfo.left,a=e.strideWidth,u=e.dilationWidth,l=e.filterHeight,c=e.filterWidth,h=c;let d=`
       int xR; int xC; int xCOffset;
       vec4 wTexel; vec4 previous; vec4 final;`;for(let g=0;g<c;g++)d+=`
           vec4 xTexelC${g*2};
           int xTexelC${g*2}Ready;
           vec4 xTexelC${g*2+1};
           int xTexelC${g*2+1}Ready;
           vec4 xC${g};`;d+=`
     for (int r = 0; r < ${l}; r++) {
      for (int d1 = 0; d1 < ${e.inChannels}; d1 += 2) {
       `;for(let g=0;g<c;g++)d+=`
           xTexelC${g*2} = vec4(0.0);
           xTexelC${g*2}Ready = 0;
           xTexelC${g*2+1} = vec4(0.0);
           xTexelC${g*2+1}Ready = 0;
           xC${g} = vec4(0.0);`;d+=`
         xR = xRCorner + r * dilations[0];
         if (xR >=0 && xR < inDims[0]) {
       `;for(let g=0;g<(h+1)/2;g++){const x=g*2;if(d+=`
           xC = xCCorner + ${x*u};
           `,a===1){if(x<c&&(o%2===1?(d+=`
                 xCOffset = xC + 1;
                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x}Ready == 0) {
                   xTexelC${x} = getX(batch, xR, xCOffset, d1);

                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${x}.zw = vec2(0.0);
                   }
                   xTexelC${x}Ready = 1;
                 }
               `,u===1&&x>0?d+=`
                 xC${x} = vec4(xTexelC${x-2}.zw, xTexelC${x}.xy);
                 `:d+=`
                   xCOffset = xC + 1 - 2;

                   if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       previous.zw = vec2(0.0);
                     }

                     xC${x} = vec4(previous.zw, xTexelC${x}.xy);
                   } else {
                     xC${x} = vec4(0.0, 0.0, xTexelC${x}.xy);
                   }
                   `):d+=`
                 if (xC >= 0 && xC < inDims[1] && xTexelC${x}Ready == 0) {
                   xTexelC${x} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${x}.zw = vec2(0.0);
                   }
                   xTexelC${x}Ready = 1;
                 }

                 xC${x} = xTexelC${x};
                 `,x+1<c)){const $=o%2===0?To(u):u;u%2===0&&o%2===1||u%2!==0&&o%2!==1?(d+=`
                   xCOffset = xC + imod(pads[1], 2) + ${$};

                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x+1}Ready == 0) {
                     xTexelC${x+1} = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       xTexelC${x+1}.zw = vec2(0.0);
                     }
                     xTexelC${x+1}Ready = 1;
                   }
                   `,u>1?d+=`
                     xCOffset -= 2;
                     if (xCOffset >= 0 && xCOffset < inDims[1]) {
                      previous = getX(batch, xR, xCOffset, d1);
                      xC${x+1} = vec4(previous.zw, xTexelC${x+1}.xy);
                     } else {
                      xC${x+1} = vec4(0.0, 0.0, xTexelC${x+1}.xy);
                     }
                     `:d+=`
                     xC${x+1} = vec4(xTexelC${x}.zw, xTexelC${x+1}.xy);
                     `):$===1?d+=`
                     xC${x+1} = xTexelC${x};
                     `:d+=`
                     xCOffset = xC + ${$};

                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x+1}Ready == 0) {
                       xTexelC${x+1} = getX(batch, xR, xCOffset, d1);
                       if (xCOffset + 1 >= inDims[1]) {
                         xTexelC${x+1}.zw = vec2(0.0);
                       }
                       xTexelC${x+1}Ready = 1;
                     }

                     xC${x+1} = xTexelC${x+1};
                     `}}else x<c&&(o%2===1?(d+=`
                 xCOffset = xC + 1 - strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x}Ready == 0) {
                   xTexelC${x} = getX(batch, xR, xCOffset, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${x}.zw = vec2(0.0);
                   }
                   xTexelC${x}Ready = 1;
                 }

                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${x+1}Ready == 0) {
                   xTexelC${x+1} = getX(batch, xR, xC + 1, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xC + 2 >= inDims[1]) {
                     xTexelC${x+1}.zw = vec2(0.0);
                   }
                   xTexelC${x+1}Ready = 1;
                 }

                 xC${x} = vec4(xTexelC${x}.zw, xTexelC${x+1}.zw);
               `,x+1<c&&(d+=`
                   final = vec4(0.0);
                   xCOffset = xC + 1 + strides[1];
                   if(xCOffset >= 0 && xCOffset < inDims[1]) {
                     final = getX(batch, xR, xCOffset, d1);
                   }
                   xC${x+1} = vec4(xTexelC${x+1}.xy, final.xy);
                 `)):(d+=`
                 if(xC >= 0 && xC < inDims[1] && xTexelC${x}Ready == 0) {
                   xTexelC${x} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${x}.zw = vec2(0.0);
                   }
                   xTexelC${x}Ready = 1;
                 }

                 xCOffset = xC + strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x+1}Ready == 0) {
                   xTexelC${x+1} = getX(batch, xR, xCOffset, d1);
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${x+1}.zw = vec2(0.);
                   }
                   xTexelC${x+1}Ready = 1;
                 }

                 xC${x} = vec4(
                   xTexelC${x}.xy, xTexelC${x+1}.xy);
               `,x+1<c&&(d+=`
                   xC${x+1} = vec4(xTexelC${x}.zw, xTexelC${x+1}.zw);
                 `)));x<c&&(d+=`
             wTexel = getW(r, ${x}, d1, d2);
             dotProd += xC${x}.xxzz * vec4(wTexel.xy, wTexel.xy);
             if(d1 + 1 < ${e.inChannels}) {
               dotProd += xC${x}.yyww * vec4(wTexel.zw, wTexel.zw);
             }
           `,x+1<c&&(d+=`
               wTexel = getW(r, ${x+1}, d1, d2);
               dotProd += xC${x+1}.xxzz * vec4(wTexel.xy, wTexel.xy);
               if(d1 + 1 < ${e.inChannels}) {
                 dotProd += xC${x+1}.yyww * vec4(wTexel.zw, wTexel.zw);
               }
             `))}d+=`
     }
   `,d+=`
     }
   `,d+=`
     }
   `;let p="",m="";r&&(s?p=`vec4 activation(vec4 a) {
           vec4 b = getPreluActivationWeightsAtOutCoords();
           ${r}
         }`:i?p=`vec4 activation(vec4 a) {
           vec4 b = getLeakyreluAlphaAtOutCoords();
           ${r}
         }`:p=`vec4 activation(vec4 x) {
           ${r}
         }`,m="result = activation(result);");const y=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),i&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
       ${p}

       void main() {
         ivec4 coords = getOutputCoords();
         int batch = coords.x;
         ivec2 xRCCorner = coords.yz * strides - pads;
         int d2 = coords.w;
         int xRCorner = xRCCorner.x;
         int xCCorner = xRCCorner.y;

         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
         vec4 dotProd = vec4(0.000000000000001);

         ${d}

         vec4 result = dotProd - vec4(0.000000000000001);
         ${y}
         ${m}
         setOutput(result);
       }
     `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class iP{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=ht(this.outputShape.length);const{dataFormat:r}=t,s=ct(),i=r==="channelsLast",o=i?1:2,a=i?2:3,u=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${e[2]} && pos < ${e[1]}) {`;let l="";for(let c=0;c<=1;c++)for(let h=0;h<=1;h++)l+=`
          blockIndex = rc.z + ${h};
          pos = rc.y + ${c};

          ${u}
            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];
            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);

            if(d0 < inputShape[${o}] && d0 >= 0) {
              // Use custom imod instead mod. On Intel GPU, mod may generate
              // unexpected value.
              // https://github.com/tensorflow/tfjs/issues/5447
              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];
              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /
                  inChannels);

              if(d1 < inputShape[${a}] && d1 >= 0) {

                ch = imod(pos, inChannels);

                if (${i}) {
                  innerDims = vec2(d1, ch);
                  result[${c*2+h}] = getChannel(
                    getA(rc.x, d0, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                } else {
                  innerDims = vec2(d0, d1);
                  result[${c*2+h}] = getChannel(
                    getA(rc.x, ch, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                }
              }
            }
          }
        `;this.userCode=`
      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0);

        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
        vec2 innerDims;

        ${l}

        ${s.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wo(n,e){const t=n.length;return t>=3?e?[...n.slice(0,-3),n[t-3]*n[t-2],n[t-1]]:[...n.slice(0,-3),n[t-3],n[t-2]*n[t-1]]:!e&&t===1&&n[0]>1?[n[0],1]:null}function rb({x:n,filter:e,convInfo:t,backend:r,bias:s=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:a=null}){const u=n.shape,l=r.texData.get(n.dataId),c=t.inChannels,h=u[0]*u[1]*u[2],d=t.outChannels,p=t.dataFormat==="channelsLast",m=!1,y=!1;let g;const x=[];if(i!=null){const S=wo(i.shape,p);S!=null&&(i=Z({inputs:{x:i},backend:r,attrs:{shape:S}}),x.push(i))}if(s!=null){const S=wo(s.shape,p);S!=null&&(s=Z({inputs:{x:s},backend:r,attrs:{shape:S}}),x.push(s))}if(!((h===1||d===1)&&c>X1)&&l.isPacked&&p&&l.texture!=null&&u[2]%2!==0&&Oe(l.shape.slice(-3),u.slice(-3))){const S=u[0]*u[1]*(u[2]+1),I={dataId:n.dataId,shape:[1,S,t.inChannels],dtype:n.dtype},A=l.shape;l.shape=l.shape.slice(),l.shape[l.shape.length-2]++,N(yo(l.shape,I.shape),()=>`packed reshape ${l.shape} to ${I.shape} isn't free`);const L=Z({inputs:{x:e},backend:r,attrs:{shape:[1,t.inChannels,t.outChannels]}});x.push(L);const P=bo({a:I,b:L,backend:r,transposeA:m,transposeB:y,bias:s,activation:a,preluActivationWeights:i,leakyreluAlpha:o}),M=r.texData.get(P.dataId);N(M.isPacked,()=>"batchMatMul result is expected to be packed"),l.shape=A,M.shape=t.outShape,g=St({inputs:{x:P},backend:r}),g.shape=t.outShape,x.push(P)}else{const S=t.outHeight*t.outWidth,I=Z({inputs:{x:n},backend:r,attrs:{shape:p?[t.batchSize,S,t.inChannels]:[t.batchSize,t.inChannels,S]}}),A=Z({inputs:{x:e},backend:r,attrs:{shape:[1,t.inChannels,t.outChannels]}}),L=bo({a:p?I:A,b:p?A:I,transposeA:!p,transposeB:y,backend:r,bias:s,activation:a,preluActivationWeights:i,leakyreluAlpha:o});g=Z({inputs:{x:L},backend:r,attrs:{shape:t.outShape}}),x.push(I),x.push(A),x.push(L)}for(const S of x)r.disposeIntermediateTensorInfo(S);return g}function sb({x:n,filter:e,convInfo:t,backend:r,bias:s=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:a=null}){const{filterWidth:u,filterHeight:l,inChannels:c,outWidth:h,outHeight:d,dataFormat:p}=t,m=p==="channelsLast",y=u*l*c,g=d*h,x=[t.batchSize,y,g],$=!0,C=!1,S=[];if(i!=null){const de=wo(i.shape,m);de!=null&&(i=Z({inputs:{x:i},backend:r,attrs:{shape:de}}),S.push(i))}if(s!=null){const de=wo(s.shape,m);de!=null&&(s=Z({inputs:{x:s},backend:r,attrs:{shape:de}}),S.push(s))}const I=Z({inputs:{x:e},backend:r,attrs:{shape:[1,y,q(e.shape)/y]}});S.push(I);const A=new iP(x,t),L=[n.shape,[t.padInfo.top,t.padInfo.left],[t.strideHeight,t.strideWidth],[t.dilationHeight,t.dilationWidth],[t.inChannels],[t.filterWidth*t.inChannels],[t.outWidth]],P=r.runWebGLProgram(A,[n],"float32",L),M=Z({inputs:{x:P},backend:r,attrs:{shape:x}});S.push(P),S.push(M);const U=s!=null,V=i!=null,j=a==="leakyrelu",K=a?Ys(a,!0):null,H=new K1(m?M.shape:I.shape,m?I.shape:M.shape,m?[t.batchSize,g,t.outChannels]:[t.batchSize,t.outChannels,g],$,C,U,K,V,j),ne=m?[M,I]:[I,M];if(s&&ne.push(s),V&&ne.push(i),j){const de=r.makeTensorInfo([],"float32",Rr(o,"float32"));ne.push(de),S.push(de)}const le=r.runWebGLProgram(H,ne,"float32"),pe=Z({inputs:{x:le},backend:r,attrs:{shape:t.outShape}});S.push(le);for(const de of S)r.disposeIntermediateTensorInfo(de);return pe}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oP(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,filter:i}=e,{strides:o,pad:a,dataFormat:u,dilations:l,dimRoundingMode:c}=r,h=is(u),d=kt(s.shape,i.shape,o,l,a,c,!1,h);let p;if(d.filterHeight===1&&d.filterWidth===1&&d.dilationHeight===1&&d.dilationWidth===1&&d.strideHeight===1&&d.strideWidth===1&&(d.padInfo.type==="SAME"||d.padInfo.type==="VALID"))p=rb({x:s,filter:i,convInfo:d,backend:t});else if(d.strideWidth<=2&&h==="channelsLast"&&B().getBool("WEBGL_EXP_CONV")){const y=new nb(d),g=[[d.padInfo.top,d.padInfo.left],[d.strideHeight,d.strideWidth],[d.dilationHeight,d.dilationWidth],[d.inHeight,d.inWidth]];p=t.runWebGLProgram(y,[s,i],"float32",g)}else if(B().getBool("WEBGL_CONV_IM2COL"))p=sb({x:s,filter:i,convInfo:d,backend:t});else{const y=new tb(d);p=t.runWebGLProgram(y,[s,i],"float32")}const m=Z({inputs:{x:p},backend:t,attrs:{shape:d.outShape}});return t.disposeIntermediateTensorInfo(p),m}const aP={kernelName:hl,backendName:"webgl",kernelFunc:oP};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class uP{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,r=e.strideWidth,s=e.padInfo.top,i=e.padInfo.left,o=e.dataFormat==="channelsLast";this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int d2 = coords.w;

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${s};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${r} - ${i};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              if (${o}) {
                float dyValue = getDy(b, yR, yC, d2);
                float xValue = getX(b, xR, xC, d1);
                dotProd += (xValue * dyValue);
              } else {
                float dyValue = getDy(b, d2, yR, yC);
                float xValue = getX(b, d1, xR, xC);
                dotProd += (xValue * dyValue);
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}}class lP{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,r=e.filterWidth,s=e.strideHeight,i=e.strideWidth,o=e.dataFormat==="channelsLast",a=t-1-e.padInfo.top,u=r-1-e.padInfo.left,l=o?1:2,c=o?2:3,h=o?3:1;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${u});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[${h}];

        ivec2 dyCorner = ivec2(coords[${l}], coords[${c}]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${s}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${r}; wC++) {
            float dyC = float(dyCCorner + wC) / ${i}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${r} - 1 - wC;

            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {

              if (${o}) {
                float xValue = getDy(batch, idyR, idyC, d2);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              } else {
                float xValue = getDy(batch, d2, idyR, idyC);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}}class cP{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,r=e.strideHeight,s=e.strideWidth,i=e.padInfo.front,o=e.padInfo.top,a=e.padInfo.left;this.userCode=`
      void main() {
        ivec5 coords = getOutputCoords();
        int wF = coords.x;
        int wR = coords.y;
        int wC = coords.z;
        int d1 = coords.w;
        int d2 = coords.u;

        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yF = 0; yF < ${e.outDepth}; yF++) {
            int xF = wF + yF * ${t} - ${i};

            if (xF < 0 || xF >= ${e.inDepth}) {
              continue;
            }

            for (int yR = 0; yR < ${e.outHeight}; yR++) {
              int xR = wR + yR * ${r} - ${o};

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int yC = 0; yC < ${e.outWidth}; yC++) {
                int xC = wC + yC * ${s} - ${a};

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float dyValue = getDy(b, yF, yR, yC, d2);
                float xValue = getX(b, xF, xR, xC, d1);
                dotProd += (xValue * dyValue);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class hP{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,r=e.filterHeight,s=e.filterWidth,i=e.strideDepth,o=e.strideHeight,a=e.strideWidth,u=t-1-e.padInfo.front,l=r-1-e.padInfo.top,c=s-1-e.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${u}, ${l}, ${c});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.u;


        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyFCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        float dotProd = 0.0;
        for (int wF = 0; wF < ${t}; wF++) {
          float dyF = float(dyFCorner + wF) / ${i}.0;

          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {
            continue;
          }
          int idyF = int(dyF);

          int wFPerm = ${t} - 1 - wF;

          for (int wR = 0; wR < ${r}; wR++) {
            float dyR = float(dyRCorner + wR) / ${o}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
              fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            int wRPerm = ${r} - 1 - wR;

            for (int wC = 0; wC < ${s}; wC++) {
              float dyC = float(dyCCorner + wC) / ${a}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              int wCPerm = ${s} - 1 - wC;

              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {
                float xValue = getDy(batch, idyF, idyR, idyC, d2);
                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dP(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,dy:i}=e,{strides:o,pad:a,dataFormat:u,dimRoundingMode:l,filterShape:c}=r,h=is(u),d=kt(s.shape,c,o,1,a,l,!1,h),p=new uP(d);return t.runWebGLProgram(p,[s,i],"float32")}const pP={kernelName:dl,backendName:"webgl",kernelFunc:dP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fP(n){const{inputs:e,backend:t,attrs:r}=n,{dy:s,filter:i}=e,{inputShape:o,strides:a,pad:u,dataFormat:l,dimRoundingMode:c}=r,h=is(l),d=kt(o,i.shape,a,1,u,c,!1,h),p=new lP(d);return t.runWebGLProgram(p,[s,i],"float32")}const mP={kernelName:pl,backendName:"webgl",kernelFunc:fP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gP(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,filter:i}=e,{strides:o,pad:a,dilations:u}=r,l=ii(s.shape,i.shape,o,u,a),c=new sP(l);return t.runWebGLProgram(c,[s,i],"float32")}const yP={kernelName:fl,backendName:"webgl",kernelFunc:gP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xP(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,dy:i}=e,{strides:o,pad:a,filterShape:u}=r,l=ii(s.shape,u,o,1,a),c=new cP(l);return t.runWebGLProgram(c,[s,i],"float32")}const bP={kernelName:eg,backendName:"webgl",kernelFunc:xP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wP(n){const{inputs:e,backend:t,attrs:r}=n,{dy:s,filter:i}=e,{pad:o,strides:a,inputShape:u}=r,l=ii(u,i.shape,a,1,o),c=new hP(l);return t.runWebGLProgram(c,[s,i],"float32")}const vP={kernelName:ml,backendName:"webgl",kernelFunc:wP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $P=fs+`
  return cos(x);
`,SP=me({opSnippet:$P}),TP={kernelName:gl,backendName:"webgl",kernelFunc:SP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CP=`
  float e2x = exp(-x);
  return (e2x + 1.0 / e2x) / 2.0;
`,EP=me({opSnippet:CP}),NP={kernelName:yl,backendName:"webgl",kernelFunc:EP};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class IP{constructor(e,t,r,s,i){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[o,a,u,l]=e,[c]=t,[h,d]=r;this.outputShape=[c,h,d,l];const p=s==="bilinear"?1:0,[m,y]=[`${a-1}.0`,`${u-1}.0`],[g,x,$]=h>1?[`${(a-1)/(h-1)}`,"(y2-y1) * height_ratio",`y1*${m} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${m}`],[C,S,I]=d>1?[`${(u-1)/(d-1)}`,"(x2-x1) * width_ratio",`x1*${y} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${y}`];this.userCode=`
      const float height_ratio = float(${g});
      const float width_ratio = float(${C});
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int y = coords[1];
        int x = coords[2];
        int d = coords[3];

        // get box vals
        float y1 = getBoxes(b,0);
        float x1 = getBoxes(b,1);
        float y2 = getBoxes(b,2);
        float x2 = getBoxes(b,3);

        // get image in batch index
        int bInd = round(getBoxInd(b));
        if(bInd < 0 || bInd >= ${o}) {
          return;
        }

        float height_scale = ${x};
        float width_scale = ${S};

        float in_y = ${$};
        if( in_y < 0.0 || in_y > ${m} ) {
          setOutput(float(${i}));
          return;
        }
        float in_x = ${I};
        if( in_x < 0.0 || in_x > ${y} ) {
          setOutput(float(${i}));
          return;
        }

        vec2 sourceFracIndexCR = vec2(in_x,in_y);
        if(${p} == 1) {
          // Compute the four integer indices.
          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);
          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));

          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);
          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);
          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);
          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);

          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);

          float top = topLeft + (topRight - topLeft) * fracCR.x;
          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          float newValue = top + (bottom - top) * fracCR.y;
          setOutput(newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          ivec2 sourceNearestCR = ivec2(floor(
            sourceFracIndexCR + vec2(0.5,0.5)));
          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutput(newValue);
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kP=n=>{const{inputs:e,backend:t,attrs:r}=n,{image:s,boxes:i,boxInd:o}=e,{cropSize:a,method:u,extrapolationValue:l}=r,c=new IP(s.shape,i.shape,a,u,l);return t.runWebGLProgram(c,[s,i,o],"float32")},_P={kernelName:wl,backendName:"webgl",kernelFunc:kP};var Zs;(function(n){n.Prod="*",n.Sum="+"})(Zs||(Zs={}));class lm{constructor(e,t,r,s){this.op=e,this.outputShape=t,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const i=this.outputShape.length,o=this.op===Zs.Prod?"1.0":"0.0",a=r?o:`getX(${cm(i,"coords",this.op)})`,u=this.outputShape[this.outputShape.length-1];let l="",c="";r?(l=s?`end != ${u-1}`:"end != 0",c=s?"end + 1":"end - 1"):(l=s?`end + pow2 < ${u}`:"end >= pow2",c=s?"end + pow2":"end - pow2"),this.userCode=`
      void main() {
        ${Ee(i)} coords = getOutputCoords();
        int end = ${hm(i,"coords",this.op)};
        float val = ${a};
        int pow2 = int(pow(2.0, index));
        if (${l}) {
          int idx = ${c};
          ${hm(i,"coords",this.op)} = idx;
          val ${this.op}= getX(${cm(i,"coords",this.op)});
        }
        setOutput(val);
      }
    `}}function cm(n,e,t){if(n===1)return`${e}`;if(n===2)return`${e}.x, ${e}.y`;if(n===3)return`${e}.x, ${e}.y, ${e}.z`;if(n===4)return`${e}.x, ${e}.y, ${e}.z, ${e}.w`;throw new Error(`Cumulative ${t} for rank ${n} is not yet supported`)}function hm(n,e,t){if(n===1)return`${e}`;if(n===2)return`${e}.y`;if(n===3)return`${e}.z`;if(n===4)return`${e}.w`;throw new Error(`Cumulative ${t} for rank ${n} is not yet supported`)}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ib(n,e,t,r,s,i){const o=e.shape.length,a=qt([r],o);let u=e;a!=null&&(u=lt({inputs:{x:e},backend:t,attrs:{perm:a}}));const l=Kt(1,o)[0];if(l!==o-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${e.shape.length-1} but got axis=${r}`);const c=u.shape[l];let h=St({inputs:{x:u},backend:t});for(let d=0;d<=Math.ceil(Math.log2(c))-1;d++){const p=new lm(n,u.shape,!1,i),m=[[d]],y=h;h=t.runWebGLProgram(p,[h],h.dtype,m),t.disposeIntermediateTensorInfo(y)}if(s){const d=new lm(n,u.shape,s,i),p=h;h=t.runWebGLProgram(d,[h],h.dtype),t.disposeIntermediateTensorInfo(p)}if(a!=null){const d=sd(a),p=lt({inputs:{x:h},backend:t,attrs:{perm:d}});return t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(u),p}return h}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RP(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{axis:i,exclusive:o,reverse:a}=r;return ib(Zs.Prod,s,t,i,o,a)}const AP={kernelName:xl,backendName:"webgl",kernelFunc:RP};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OP(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{axis:i,exclusive:o,reverse:a}=r;return ib(Zs.Sum,s,t,i,o,a)}const DP={kernelName:bl,backendName:"webgl",kernelFunc:OP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FP(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,weights:i}=e,{size:o,binaryOutput:a}=r;if(s.shape.length===1){const u=t.readSync(s.dataId),l=t.readSync(i.dataId),c=M1(u,l,i.dtype,i.shape,o);return t.makeTensorInfo([o],i.dtype,c)}else if(s.shape.length===2){const u=t.bufferSync(s),l=t.bufferSync(i),c=qA(u,l,o,a);return t.makeTensorInfo(c.shape,i.dtype,c.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${s.shape.length}.`)}const PP={kernelName:vl,backendName:"webgl",kernelFunc:FP};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class LP{constructor(e,t,r){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=r,this.userCode=`
    void main() {
      ivec4 coords = getOutputCoords();
      int b = coords[0];
      int h = ${this.getHeightCoordString()};
      int w = ${this.getWidthCoordString()};
      int d = ${this.getDepthCoordString()};

      int in_h = h / ${t};
      int offset_h = imod(h, ${t});
      int in_w = w / ${t};
      int offset_w = imod(w, ${t});
      int offset_d = (offset_h * ${t} + offset_w) *
        ${this.getOutputDepthSize()};
      int in_d = d + offset_d;

      float result = ${this.getInputSamplingString()};
      setOutput(result);
    }
  `}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BP(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{blockSize:i,dataFormat:o}=r,a=s.shape[0],u=o==="NHWC"?s.shape[1]:s.shape[2],l=o==="NHWC"?s.shape[2]:s.shape[3],c=o==="NHWC"?s.shape[3]:s.shape[1],h=u*i,d=l*i,p=c/(i*i),m=o==="NHWC"?[a,h,d,p]:[a,p,h,d],y=new LP(m,i,o);return t.runWebGLProgram(y,[s],s.dtype)}const MP={kernelName:$l,backendName:"webgl",kernelFunc:BP};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ob{constructor(e,t=!1,r=null,s=!1,i=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=ht(this.outputShape.length);const o=e.filterHeight,a=e.filterWidth,u=e.outChannels/e.inChannels;let l="",c="";r&&(s?l=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${r}
        }`:i?l=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${r}
        }`:l=`
          float activation(float x) {
            ${r}
          }
        `,c="result = activation(result);");const h=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),i&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${l}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${u};
        int q = d2 - d1 * ${u};

        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.
        for (int wR = 0; wR < ${o}; wR++) {
          int xR = xRCorner + wR * dilations[0];

          if (xR < 0 || xR >= inDims[0]) {
            continue;
          }

          for (int wC = 0; wC < ${a}; wC++) {
            int xC = xCCorner + wC * dilations[1];

            if (xC < 0 || xC >= inDims[1]) {
              continue;
            }

            float xVal = getX(batch, xR, xC, d1);
            float wVal = getW(wR, wC, d1, q);
            dotProd += xVal * wVal;
          }
        }

        float result = dotProd;
        ${h}
        ${c}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ab{constructor(e,t=!1,r=null,s=!1,i=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=ht(this.outputShape.length);const o=e.outChannels/e.inChannels,a=e.padInfo.left,u=e.strideWidth,l=e.dilationWidth,c=e.filterHeight,h=e.filterWidth,d=h;let p=`
      int xR; int xC; int xCOffset;
      vec4 wTexel; vec4 previous; vec4 final;`;for(let x=0;x<h;x++)p+=`
          vec4 xTexelC${x*2};
          int xTexelC${x*2}Ready;
          vec4 xTexelC${x*2+1};
          int xTexelC${x*2+1}Ready;
          vec4 xC${x};`;p+=`
    for (int r = 0; r < ${c}; r++) {
      `;for(let x=0;x<h;x++)p+=`
          xTexelC${x*2} = vec4(0.0);
          xTexelC${x*2}Ready = 0;
          xTexelC${x*2+1} = vec4(0.0);
          xTexelC${x*2+1}Ready = 0;
          xC${x} = vec4(0.0);`;p+=`
        xR = xRCorner + r * dilations[0];
        if (xR >=0 && xR < inDims[0]) {
      `;for(let x=0;x<(d+1)/2;x++){const $=x*2;if(p+=`
          xC = xCCorner + ${$*l};
          `,u===1){if($<h&&(a%2===1?(p+=`
                xCOffset = xC + 1;
                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${$}Ready == 0) {
                  xTexelC${$} = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${$}.zw = vec2(0.0);
                  }
                  xTexelC${$}Ready = 1;
                }
              `,l===1&&$>0?p+=`
                xC${$} = vec4(xTexelC${$-2}.zw, xTexelC${$}.xy);
                `:p+=`
                  xCOffset = xC + 1 - 2;

                  if (xCOffset >= 0 && xCOffset < inDims[1]) {
                    previous = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      previous.zw = vec2(0.0);
                    }

                    xC${$} = vec4(previous.zw, xTexelC${$}.xy);
                  } else {
                    xC${$} = vec4(0.0, 0.0, xTexelC${$}.xy);
                  }
                  `):p+=`
                if (xC >= 0 && xC < inDims[1] && xTexelC${$}Ready == 0) {
                  xTexelC${$} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${$}.zw = vec2(0.0);
                  }
                  xTexelC${$}Ready = 1;
                }

                xC${$} = xTexelC${$};
                `,$+1<h)){const C=a%2===0?To(l):l;l%2===0&&a%2===1||l%2!==0&&a%2!==1?(p+=`
                  xCOffset = xC + imod(pads[1], 2) + ${C};

                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${$+1}Ready == 0) {
                    xTexelC${$+1} = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      xTexelC${$+1}.zw = vec2(0.0);
                    }
                    xTexelC${$+1}Ready = 1;
                  }
                  `,l>1?p+=`
                    xCOffset -= 2;
                    if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);
                     xC${$+1} = vec4(previous.zw, xTexelC${$+1}.xy);
                    } else {
                     xC${$+1} = vec4(0.0, 0.0, xTexelC${$+1}.xy);
                    }
                    `:p+=`
                    xC${$+1} = vec4(xTexelC${$}.zw, xTexelC${$+1}.xy);
                    `):C===1?p+=`
                    xC${$+1} = xTexelC${$};
                    `:p+=`
                    xCOffset = xC + ${C};

                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${$+1}Ready == 0) {
                      xTexelC${$+1} = getX(batch, xR, xCOffset, d1);
                      if (xCOffset + 1 >= inDims[1]) {
                        xTexelC${$+1}.zw = vec2(0.0);
                      }
                      xTexelC${$+1}Ready = 1;
                    }

                    xC${$+1} = xTexelC${$+1};
                    `}}else $<h&&(a%2===1?(p+=`
                xCOffset = xC + 1 - strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${$}Ready == 0) {
                  xTexelC${$} = getX(batch, xR, xCOffset, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${$}.zw = vec2(0.0);
                  }
                  xTexelC${$}Ready = 1;
                }

                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${$+1}Ready == 0) {
                  xTexelC${$+1} = getX(batch, xR, xC + 1, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xC + 2 >= inDims[1]) {
                    xTexelC${$+1}.zw = vec2(0.0);
                  }
                  xTexelC${$+1}Ready = 1;
                }

                xC${$} = vec4(xTexelC${$}.zw, xTexelC${$+1}.zw);
              `,$+1<h&&(p+=`
                  final = vec4(0.0);
                  xCOffset = xC + 1 + strides[1];
                  if(xCOffset >= 0 && xCOffset < inDims[1]) {
                    final = getX(batch, xR, xCOffset, d1);
                  }
                  xC${$+1} = vec4(xTexelC${$+1}.xy, final.xy);
                `)):(p+=`
                if(xC >= 0 && xC < inDims[1] && xTexelC${$}Ready == 0) {
                  xTexelC${$} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${$}.zw = vec2(0.0);
                  }
                  xTexelC${$}Ready = 1;
                }

                xCOffset = xC + strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${$+1}Ready == 0) {
                  xTexelC${$+1} = getX(batch, xR, xCOffset, d1);
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${$+1}.zw = vec2(0.);
                  }
                  xTexelC${$+1}Ready = 1;
                }

                xC${$} = vec4(
                  xTexelC${$}.xy, xTexelC${$+1}.xy);
              `,$+1<h&&(p+=`
                  xC${$+1} = vec4(xTexelC${$}.zw, xTexelC${$+1}.zw);
                `)));$<h&&(p+=`
            wTexel = getW(r, ${$}, d1, q);
            dotProd += xC${$} * vec4(wTexel.xz, wTexel.xz);
          `,$+1<h&&(p+=`
              wTexel = getW(r, ${$+1}, d1, q);
              dotProd += xC${$+1} * vec4(wTexel.xz, wTexel.xz);
            `))}p+=`
    }
  `,p+=`
      }
    `;let m="",y="";r&&(s?m=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${r}
        }`:i?m=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${r}
        }`:m=`vec4 activation(vec4 x) {
          ${r}
        }`,y="result = activation(result);");const g=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),i&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${m}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${o};
        int q = d2 - d1 * ${o};
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
        vec4 dotProd = vec4(0.000000000000001);

        ${p}

        vec4 result = dotProd - vec4(0.000000000000001);
        ${g}
        ${y}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VP(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,filter:i}=e,{strides:o,pad:a,dilations:u,dimRoundingMode:l}=r;let c=u;c==null&&(c=[1,1]),N(Et(o,c),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${o} and dilations '${c}'`);const h=kt(s.shape,i.shape,o,c,a,l,!0);let d;B().getBool("WEBGL_PACK_DEPTHWISECONV")&&h.strideWidth<=2&&h.outChannels/h.inChannels===1?d=new ab(h):d=new ob(h);const p=[[h.padInfo.top,h.padInfo.left],[h.strideHeight,h.strideWidth],[h.dilationHeight,h.dilationWidth],[h.inHeight,h.inWidth]];return t.runWebGLProgram(d,[s,i],"float32",p)}const UP={kernelName:Sl,backendName:"webgl",kernelFunc:VP};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class zP{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,r=e.strideWidth,s=e.padInfo.top,i=e.padInfo.left,o=e.outChannels/e.inChannels;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int dm = coords.w;
        int d2 = d1 * ${o} + dm;

        float dotProd = 0.0;

        // TO DO: Vec4 over the batch size
        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${s};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${r} - ${i};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class WP{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,r=e.filterWidth,s=e.strideHeight,i=e.strideWidth,o=t-1-e.padInfo.top,a=r-1-e.padInfo.left,u=e.outChannels/e.inChannels;this.userCode=`
      const ivec2 pads = ivec2(${o}, ${a});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];
        ivec2 dyCorner = coords.yz - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        float dotProd = 0.0;

        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${s}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${r}; wC++) {
            float dyC = float(dyCCorner + wC) / ${i}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${r} - 1 - wC;

            // TO DO: Vec4 over the channelMul
            for (int dm = 0; dm < ${u}; dm++) {
              int d2 = d1 * ${u} + dm;
              float xValue = getDy(batch, idyR, idyC, d2);
              float wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GP(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,dy:i}=e,{strides:o,dilations:a,pad:u,dimRoundingMode:l,filterShape:c}=r,h=kt(s.shape,c,o,a,u,l,!0),d=new zP(h);return t.runWebGLProgram(d,[s,i],"float32")}const HP={kernelName:Tl,backendName:"webgl",kernelFunc:GP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jP(n){const{inputs:e,backend:t,attrs:r}=n,{dy:s,filter:i}=e,{strides:o,dilations:a,pad:u,dimRoundingMode:l,inputShape:c}=r,h=kt(c,i.shape,o,a,u,l,!0),d=new WP(h);return t.runWebGLProgram(d,[s,i],"float32")}const qP={kernelName:Cl,backendName:"webgl",kernelFunc:jP};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class KP{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode=`
      void main() {
          ivec2 coords = getOutputCoords();
          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;
          setOutput(val);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XP(n){const{inputs:e,backend:t}=n,{x:r}=e,s=[...r.shape,...r.shape],i=q(r.shape),o=Z({inputs:{x:r},backend:t,attrs:{shape:[i]}}),a=new KP(i),u=t.runWebGLProgram(a,[o],o.dtype),l=Z({inputs:{x:u},backend:t,attrs:{shape:s}});return t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(u),l}const YP={kernelName:El,backendName:"webgl",kernelFunc:XP};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class QP{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:r,padInfo:s,strideHeight:i,strideWidth:o,filterHeight:a,filterWidth:u,dilationHeight:l,dilationWidth:c}=e,{top:h,left:d}=s;this.userCode=`
      const ivec2 strides = ivec2(${i}, ${o});
      const ivec2 pads = ivec2(${h}, ${d});
      const float neg_infinity = -3.4e38;

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.w;
        ivec2 outTopLeftCorner =
            coords.yz * strides - pads;
        int hBeg = outTopLeftCorner.x;
        int wBeg = outTopLeftCorner.y;

        float curVal = neg_infinity;
        for (int h = 0; h < ${a}; h++) {
          int hIn = hBeg + h * ${l};

          if (hIn >= 0 && hIn < ${t}) {
            for (int w = 0; w < ${u}; w++) {
              int wIn = wBeg + w * ${c};

              if (wIn >= 0 && wIn < ${r}) {
                float xVal = getX(batch, hIn, wIn, d1);
                float wVal = getW(h, w, d1);

                float val = xVal + wVal;
                if (val > curVal) {
                  curVal = val;
                }
              }
            }
          }
        }

        float result = curVal;
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZP(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,filter:i}=e,{strides:o,pad:a,dilations:u}=r,l=py(s.shape,i.shape,o,a,"NHWC",u);let c;const h=new QP(l);c=t.runWebGLProgram(h,[s,i],"float32");const d=Z({inputs:{x:c},backend:t,attrs:{shape:l.outShape}});return t.disposeIntermediateTensorInfo(c),d}const JP={kernelName:Nl,backendName:"webgl",kernelFunc:ZP};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function e3(n){const{inputs:e,backend:t,attrs:r}=n,{equation:s}=r,i=e,{allDims:o,summedDims:a,idDims:u}=Bx(s,i.length);Vx(o.length,u,i);const{path:l,steps:c}=Ux(a,u),h=c.length;let d=null,p=o.length;const m=[];for(let y=0;y<h;++y){for(const g of c[y]){const{permutationIndices:x,expandDims:$}=Mx(p,u[g]);let C;zx(x)?C=i[g]:(C=lt({inputs:{x:i[g]},backend:t,attrs:{perm:x}}),m.push(C));const S=C.shape.slice();for(let I=0;I<$.length;++I)S.splice($[I],0,1);Oe(C.shape,S)||(C=Z({inputs:{x:C},backend:t,attrs:{shape:S}}),m.push(C)),d===null?d=C:(d=Jd({inputs:{a:C,b:d},backend:t}),m.push(d))}y<h-1&&(l[y]>=0&&(d=ra({inputs:{x:d},backend:t,attrs:{axis:l[y]-(o.length-p),keepDims:!1}}),m.push(d)),p--)}for(const y of m)y!==d&&t.disposeIntermediateTensorInfo(y);return d}const t3={kernelName:kl,backendName:"webgl",kernelFunc:e3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const n3="return (x >= 0.0) ? x : (exp(x) - 1.0);",r3=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,s3=me({opSnippet:n3,packedOpSnippet:r3}),i3={kernelName:_l,backendName:"webgl",kernelFunc:s3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const o3="return (b >= 1.0) ? a : a * (b + 1.0);",a3=`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,u3=n=>{const{inputs:e,backend:t}=n,{dy:r,y:s}=e,i=B().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new gi(a3,r.shape,s.shape):new ss(o3,r.shape,s.shape);return t.runWebGLProgram(i,[r,s],r.dtype)},l3={kernelName:tg,backendName:"webgl",kernelFunc:u3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const c3=`
  return vec4(equal(a, b));
`,h3="return float(a == b);",d3=qe({opSnippet:h3,packedOpSnippet:c3,dtype:"bool",cpuKernelImpl:QA}),p3={kernelName:Al,backendName:"webgl",kernelFunc:d3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const f3=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  float p = ${Ax};
  float a1 = ${Ox};
  float a2 = ${Dx};
  float a3 = ${Fx};
  float a4 = ${Px};
  float a5 = ${Lx};

  float sign = sign(x);
  x = abs(x);
  float t = 1.0 / (1.0 + p * x);
  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));
`,m3=me({opSnippet:f3}),g3={kernelName:Rl,backendName:"webgl",kernelFunc:m3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const y3=fs+`
  return exp(x);
`,x3=`
  vec4 result = exp(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,ub=me({opSnippet:y3,packedOpSnippet:x3,cpuKernelImpl:ZA,dtype:"float32"}),b3={kernelName:Ol,backendName:"webgl",kernelFunc:ub};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ou(n){const{inputs:e,attrs:t,backend:r}=n,{dim:s}=t,{input:i}=e,o=i.shape.length,a=i.shape.slice();let u=s;return s<0&&(N(-(o+1)<=s,()=>`Axis must be in the interval [${-(o+1)}, ${o}]`),u=o+s+1),a.splice(u,0,1),Z({inputs:{x:i},backend:r,attrs:{shape:a}})}const w3={kernelName:Dl,backendName:"webgl",kernelFunc:Ou};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dm="return exp(x) - 1.0;",v3=me({opSnippet:dm,packedOpSnippet:dm,cpuKernelImpl:JA}),$3={kernelName:Fl,backendName:"webgl",kernelFunc:v3};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class pm{constructor(e,t,r){this.variableNames=["real","imag"];const s=t[1];this.outputShape=t;const i=r?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,o=r?`${s}.0`:"1.0";let a;if(e==="real")a="return real * expR - imag * expI;";else if(e==="imag")a="return real * expI + imag * expR;";else throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);this.userCode=`
      const float exponentMultiplier = ${i};

      float unaryOpComplex(float real, float expR, float imag, float expI) {
        ${a}
      }

      float mulMatDFT(int batch, int index) {
        float indexRatio = float(index) / float(${s});
        float exponentMultiplierTimesIndexRatio =
            exponentMultiplier * indexRatio;

        float result = 0.0;

        for (int i = 0; i < ${s}; i++) {
          // x = (-2|2 * PI / N) * index * i;
          float x = exponentMultiplierTimesIndexRatio * float(i);
          float expR = cos(x);
          float expI = sin(x);
          float real = getReal(batch, i);
          float imag = getImag(batch, i);

          result +=
              unaryOpComplex(real, expR, imag, expI) / ${o};
        }

        return result;
      }

      void main() {
        ivec2 coords = getOutputCoords();
        setOutput(mulMatDFT(coords[0], coords[1]));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lb(n,e,t){const r=t.texData.get(n.dataId),s=q(n.shape),i=n.shape[n.shape.length-1],o=s/i,a=Z({inputs:{x:n},backend:t,attrs:{shape:[o,i]}}),u=a.shape,l=new pm("real",u,e),c=new pm("imag",u,e),h=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:u},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:u}],d=t.runWebGLProgram(l,h,"float32"),p=t.runWebGLProgram(c,h,"float32"),m=nr({inputs:{real:d,imag:p},backend:t});t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(p);const y=Z({inputs:{x:m},backend:t,attrs:{shape:n.shape}});return t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(m),y}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function S3(n){const{inputs:e,backend:t}=n,{input:r}=e;return lb(r,!1,t)}const T3={kernelName:Pl,backendName:"webgl",kernelFunc:S3};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class C3{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode=`
      void main() {
        // Input can be obtained from uniform value.
        setOutput(value);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xi(n){const{backend:e,attrs:t}=n,{shape:r,value:s}=t;let{dtype:i}=t;if(i=i||Js(s),i==="string"){const o=He(i,q(r));return o.fill(s),e.makeTensorInfo(r,i,o)}else{const o=new C3(r,s),a=[[s]];return e.runWebGLProgram(o,[],i,a)}}const E3={kernelName:Ll,backendName:"webgl",kernelFunc:xi};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class N3{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];

          int coordX = ${t} - x - 1;
          float outputValue;
          if(coordX >= 0 && coordX < ${t}) {
            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);
          } else {
            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);
          }
          setOutput(outputValue);
        }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const I3={kernelName:Bl,backendName:"webgl",kernelFunc:({inputs:n,backend:e})=>{const{image:t}=n,r=e,s=new N3(t.shape);return r.runWebGLProgram(s,[t],t.dtype)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fm="return floor(x);",k3=me({opSnippet:fm,packedOpSnippet:fm,cpuKernelImpl:eO}),_3={kernelName:Ml,backendName:"webgl",kernelFunc:k3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const R3=`
  float s = sign(a) * sign(b);
  int ia = round(a);
  int ib = round(b);
  if (ib != 0) {
    // Windows (D3D) wants guaranteed non-zero int division at compile-time.
    return float(idiv(ia, ib, s));
  } else {
    return NAN;
  }
`,A3=`
  ivec4 ia = round(a);
  ivec4 ib = round(b);
  bvec4 cond = notEqual(ib, ivec4(0));
  ivec4 result = ivec4(0);
  vec4 s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    result[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    result[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    result[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    result[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4(result);
`,O3=qe({opSnippet:R3,packedOpSnippet:A3,dtype:"int32"}),D3={kernelName:Vl,backendName:"webgl",kernelFunc:O3};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class F3{constructor(e){this.variableNames=["A"];const t=ct(),[r,s]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${s}.0, ${r}.0);

        vec4 values = ${t.texture2D}(A, uv);
        float value;
        if (depth == 0) {
          value = values.r;
        } else if (depth == 1) {
          value = values.g;
        } else if (depth == 2) {
          value = values.b;
        } else if (depth == 3) {
          value = values.a;
        }

        setOutput(floor(value * 255.0 + 0.5));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class P3{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=ct(),[r,s]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];

        vec4 result = vec4(0.);

        for(int row=0; row<=1; row++) {
          for(int col=0; col<=1; col++) {
            texC = coords[1] + row;
            depth = coords[2] + col;

            vec2 uv = (vec2(texC, texR) + halfCR) /
                       vec2(${s}.0, ${r}.0);
            vec4 values = ${t.texture2D}(A, uv);
            float value;
            if (depth == 0) {
              value = values.r;
            } else if (depth == 1) {
              value = values.g;
            } else if (depth == 2) {
              value = values.b;
            } else if (depth == 3) {
              value = values.a;
            }

            result[row * 2 + col] = floor(value * 255.0 + 0.5);
          }
        }

        ${t.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const L3={kernelName:to,backendName:"webgl",kernelFunc:B3};let Vr,Ha=B().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");function B3(n){const{inputs:e,backend:t,attrs:r}=n;let{pixels:s}=e;const{numChannels:i}=r,o=typeof HTMLVideoElement<"u"&&s instanceof HTMLVideoElement,a=typeof HTMLImageElement<"u"&&s instanceof HTMLImageElement,[u,l]=o?[s.videoWidth,s.videoHeight]:[s.width,s.height],c=[l,u],h=[l,u,i];if(a||o){const y=B().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(Vr==null||y!==Ha)&&(Ha=y,Vr=document.createElement("canvas").getContext("2d",{willReadFrequently:Ha})),Vr.canvas.width=u,Vr.canvas.height=l,Vr.drawImage(s,0,0,u,l),s=Vr.canvas}const d=t.makeTensorInfo(c,"int32");t.texData.get(d.dataId).usage=Nt.PIXELS,t.gpgpu.uploadPixelDataToTexture(t.getTexture(d.dataId),s);const p=B().getBool("WEBGL_PACK")?new P3(h):new F3(h),m=t.runWebGLProgram(p,[d],"int32");return t.disposeData(d.dataId),m}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function M3(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,filter:i,bias:o,preluActivationWeights:a}=e,{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:m}=r,y=is(c),g=kt(s.shape,i.shape,u,h,l,d,!1,y);let x;const $=[],C=o!=null,S=a!=null,I=p==="leakyrelu",A=()=>{const P=[s,i],M=(U,V)=>{if(V==="NCHW"&&U.shape.length===1&&U.shape[0]!==1){const j=Z({inputs:{x:U},backend:t,attrs:{shape:[U.shape[0],1,1]}});return $.push(j),j}return U};if(C&&P.push(M(o,c)),S&&P.push(M(a,c)),I){const U=t.makeTensorInfo([],"float32",Rr(m,"float32"));P.push(U),$.push(U)}return P};if(g.filterHeight===1&&g.filterWidth===1&&g.dilationHeight===1&&g.dilationWidth===1&&g.strideHeight===1&&g.strideWidth===1&&(g.padInfo.type==="SAME"||g.padInfo.type==="VALID"))x=rb({x:s,filter:i,convInfo:g,backend:t,bias:o,activation:p,preluActivationWeights:a,leakyreluAlpha:m});else if(g.strideWidth<=2&&y==="channelsLast"&&B().getBool("WEBGL_EXP_CONV")){const P=p?Ys(p,!0):null,M=new nb(g,C,P,S,I),U=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],V=A();x=t.runWebGLProgram(M,V,"float32",U)}else if(B().getBool("WEBGL_CONV_IM2COL"))x=sb({x:s,filter:i,convInfo:g,backend:t,bias:o,activation:p,preluActivationWeights:a,leakyreluAlpha:m});else{const P=p?Ys(p,!1):null,M=new tb(g,C,P,S,I),U=A();x=t.runWebGLProgram(M,U,"float32")}const L=Z({inputs:{x},backend:t,attrs:{shape:g.outShape}});return $.push(x),$.forEach(P=>t.disposeIntermediateTensorInfo(P)),L}const V3={kernelName:ro,backendName:"webgl",kernelFunc:M3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function U3(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,filter:i,bias:o,preluActivationWeights:a}=e,{strides:u,pad:l,dilations:c,dimRoundingMode:h,activation:d,leakyreluAlpha:p}=r,m=[];let y=c;y==null&&(y=[1,1]),N(Et(u,y),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${u} and dilations '${y}'`);const g=kt(s.shape,i.shape,u,y,l,h,!0),x=B().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels===1,$=d?Ys(d,x):null,C=[s,i],S=o!=null,I=a!=null,A=d==="leakyrelu";if(S&&C.push(o),I&&C.push(a),A){const U=t.makeTensorInfo([],"float32",Rr(p,"float32"));C.push(U),m.push(U)}let L;x?L=new ab(g,S,$,I,A):L=new ob(g,S,$,I,A);const P=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],M=t.runWebGLProgram(L,C,"float32",P);return m.forEach(U=>t.disposeIntermediateTensorInfo(U)),M}const z3={kernelName:so,backendName:"webgl",kernelFunc:U3};class W3{constructor(e,t,r,s){this.sliceDim=e,this.strides=t,this.paramsShape=s,this.variableNames=["x","indices"],this.outputShape=r;const i=Ee(r.length);let o=`
    int index;`;for(let a=0;a<this.sliceDim;a++)o+=`
          index = round(getIndices(coords[0], ${a}));
          out_of_bounds = out_of_bounds || index < 0;
          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[a]};
          flattenIndex += index * ${this.strides[a]};`;this.userCode=`
         void main() {
          ${i} coords = getOutputCoords();
          int flattenIndex = 0;
          bool out_of_bounds = false;

          ${o}

          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));
        }
      `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function G3(n){const{inputs:e,backend:t}=n,{params:r,indices:s}=e,i=s.shape,o=i[i.length-1],a=q(r.shape),[u,l,c,h]=Wh(r,s),d=Z({inputs:{x:s},backend:t,attrs:{shape:[l,o]}}),p=Z({inputs:{x:r},backend:t,attrs:{shape:[q(r.shape)/c,c]}});if(t.shouldExecuteOnCPU([r,s])||r.dtype==="string"){const x=t.readSync(s.dataId),$=t.bufferSync(r),C=tO(x,$,r.dtype,l,o,c,h,r.shape,a);return t.makeTensorInfo(u,r.dtype,C.values)}const m=new W3(o,h,[l,c],r.shape),y=t.runWebGLProgram(m,[p,d],p.dtype),g=Z({inputs:{x:y},backend:t,attrs:{shape:u}});return t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(y),g}const H3={kernelName:Wl,backendName:"webgl",kernelFunc:G3};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class j3{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const r=Ee(this.rank),s=q3(e);this.userCode=`
      void main() {
        ${r} resRC = getOutputCoords();
        int index = int(getIndices(resRC.x, resRC.z));
        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;
        setOutput(inBounds * getA(${s}));
      }
    `}}function q3(n,e){const t=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[];for(let s=0;s<n.length;s++)s===2?r.push("index"):r.push(`${t[s]}`);return r.join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cb(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,indices:i}=e,{axis:o,batchDims:a}=r,u=Ve(o,s.shape)[0];if(B().get("DEBUG")){const $=t.readSync(i.dataId),C=s.shape[u];for(let S=0;S<$.length;++S){const I=$[S];N(I<=C-1&&I>=0,()=>`GatherV2: the index value ${I} is not in [0, ${C-1}]`)}}const l=r1(s,i,u,a),c=q(i.shape),h=[],d=Z({inputs:{x:s},backend:t,attrs:{shape:[l.batchSize,l.outerSize,l.dimSize,l.sliceSize]}}),p=Z({inputs:{x:i},backend:t,attrs:{shape:[l.batchSize,c/l.batchSize]}});h.push(d),h.push(p);const m=[l.batchSize,l.outerSize,c/l.batchSize,l.sliceSize];if(t.shouldExecuteOnCPU([s,i])||s.dtype==="string"){const $=t.bufferSync(p),C=t.bufferSync(d),S=nO(C,$,m);return h.forEach(I=>t.disposeIntermediateTensorInfo(I)),t.makeTensorInfo(l.outputShape,S.dtype,S.values)}const y=new j3(d.shape,m),g=t.runWebGLProgram(y,[d,p],d.dtype);h.push(g);const x=Z({inputs:{x:g},backend:t,attrs:{shape:l.outputShape}});return h.forEach($=>t.disposeIntermediateTensorInfo($)),x}const K3={kernelName:zl,backendName:"webgl",kernelFunc:cb};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const X3="return float(a > b);",Y3=`
  return vec4(greaterThan(a, b));
`,Q3=qe({opSnippet:X3,packedOpSnippet:Y3,cpuKernelImpl:rO,dtype:"bool"}),Z3={kernelName:Gl,backendName:"webgl",kernelFunc:Q3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const J3="return float(a >= b);",eL=`
  return vec4(greaterThanEqual(a, b));
`,tL=qe({opSnippet:J3,packedOpSnippet:eL,dtype:"bool",cpuKernelImpl:sO}),nL={kernelName:Hl,backendName:"webgl",kernelFunc:tL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rL(n){const{inputs:e,backend:t}=n,{input:r}=e;return lb(r,!0,t)}const sL={kernelName:jl,backendName:"webgl",kernelFunc:rL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iL="return float(!isnan(x) && !isinf(x));",oL=me({opSnippet:iL,dtype:"bool"}),aL={kernelName:Kl,backendName:"webgl",kernelFunc:oL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uL="return float(isinf(x));",lL=me({opSnippet:uL,dtype:"bool"}),cL={kernelName:Xl,backendName:"webgl",kernelFunc:lL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hL="return float(isnan(x));",dL=me({opSnippet:hL,dtype:"bool"}),pL={kernelName:Yl,backendName:"webgl",kernelFunc:dL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fL="return float(a < b);",mL=`
  return vec4(lessThan(a, b));
`,gL=qe({opSnippet:fL,packedOpSnippet:mL,cpuKernelImpl:iO,dtype:"bool"}),yL={kernelName:Zl,backendName:"webgl",kernelFunc:gL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xL="return float(a <= b);",bL=`
  return vec4(lessThanEqual(a, b));
`,wL=qe({opSnippet:xL,packedOpSnippet:bL,cpuKernelImpl:oO,dtype:"bool"}),vL={kernelName:Jl,backendName:"webgl",kernelFunc:wL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $L(n){const{backend:e,attrs:t}=n,{start:r,stop:s,num:i}=t,o=aO(r,s,i);return e.makeTensorInfo([o.length],"float32",o)}const SL={kernelName:ec,backendName:"webgl",kernelFunc:$L};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TL=fs+`
  return x < 0.0 ? 0./0. : log(x);
`,CL=`
  vec4 result = log(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);
  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);
  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);
  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);
  return result;
`,EL=me({opSnippet:TL,packedOpSnippet:CL,cpuKernelImpl:uO}),NL={kernelName:tc,backendName:"webgl",kernelFunc:EL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IL=fs+`
  return log(1.0 + x);
`,kL=me({opSnippet:IL}),_L={kernelName:nc,backendName:"webgl",kernelFunc:kL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RL="return float(a >= 1.0 && b >= 1.0);",AL=`
  return vec4(
    vec4(greaterThanEqual(a, vec4(1.0))) *
    vec4(greaterThanEqual(b, vec4(1.0))));
`,OL=qe({opSnippet:RL,packedOpSnippet:AL,dtype:"bool"}),DL={kernelName:rc,backendName:"webgl",kernelFunc:OL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FL="return float(!(x >= 1.0));",PL=me({opSnippet:FL}),LL={kernelName:sc,backendName:"webgl",kernelFunc:PL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BL="return float(a >= 1.0 || b >= 1.0);",ML=`
  return min(
    vec4(greaterThanEqual(a, vec4(1.0))) +
    vec4(greaterThanEqual(b, vec4(1.0))),
    vec4(1.0));
`,VL=qe({opSnippet:BL,packedOpSnippet:ML,dtype:"bool"}),UL={kernelName:ic,backendName:"webgl",kernelFunc:VL};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class zL{constructor(e,t,r,s,i){this.variableNames=["x"],this.outputShape=[];const o=t,a=e[3]-1;this.outputShape=e;let u;const l=`float(${r}) + float(${s}) * sum`;i===.5?u=`inversesqrt(${l})`:i===1?u=`1.0/(${l})`:u=`exp(log(${l}) * float(-${i}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];
        int d = coords[3];
        float x = getX(b, r, c, d);
        float sum = 0.0;
        for (int j = -${o}; j <= ${o}; j++) {
          int idx = d + j;
          if (idx >= 0 && idx <=  ${a}) {
            float z = getX(b, r, c, idx);
            sum += z * z;
          }
        }
        float val = x * ${u};
        setOutput(val);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class WL{constructor(e,t,r,s,i){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const o=t,a=e[3]-1;this.outputShape=e;let u;const l=`float(${r}) + float(${s}) * sum`;i===.5?u=`inversesqrt(${l})`:i===1?u=`1.0/(${l})`:u=`exp(log(${l}) * float(-${i}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords.x;
        int r = coords.y;
        int c = coords.z;
        int d = coords.w;

        bool hasNextCol = d < ${this.outputShape[3]};
        bool hasNextRow = c < ${this.outputShape[2]};

        vec4 sum = vec4(0.);
        vec4 xFragAtOutputCoords = getX(b, r, c, d);

        vec4 xAtOutputCoords = vec4(
          getChannel(xFragAtOutputCoords, vec2(c, d)),
          hasNextCol ?
            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,
          hasNextRow ?
            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,
          (hasNextRow && hasNextCol) ?
            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0
        );

        int firstChannel = d - ${o};
        vec2 cache = vec2(0.);
        if(firstChannel >= 0){
          vec4 firstChannelFrag = getX(b, r, c, firstChannel);
          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));
            if(hasNextRow){
              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));
            }
        }

        ivec2 depth = ivec2(d, d + 1);
        for (int j = - ${o}; j <= ${o}; j++) {
          ivec2 idx = depth + j;
          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));
          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${a}));

          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;
          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;

          if(depthInRange || depthPlusOneInRange){
            vec4 z = vec4(0.);
            vec4 xFragAtCurrentDepth;
            z.xz = cache.xy;
            if(depthPlusOneInRange && hasNextCol){
              xFragAtCurrentDepth = idx.y != d ?
                getX(b, r, c, idx.y) : xFragAtOutputCoords;
              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));
              if(hasNextRow){
                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));
              }
            }
            cache.xy = z.yw;
            sum += z * z;
          }
        }
        vec4 result = xAtOutputCoords * ${u};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GL=n=>{const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{depthRadius:i,bias:o,alpha:a,beta:u}=r,l=B().getBool("WEBGL_PACK_NORMALIZATION")?new WL(s.shape,i,o,a,u):new zL(s.shape,i,o,a,u);return t.runWebGLProgram(l,[s],s.dtype)},HL={kernelName:oc,backendName:"webgl",kernelFunc:GL};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class jL{constructor(e,t,r,s,i){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=r,this.alpha=s,this.beta=i,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];

        float result = 0.0;
        for (int d = 0; d < ${this.depth}; ++d) {
          int depthBegin = int(max(0.0, float(d - ${t})));
          int depthEnd = int(min(float(${this.depth}),
              float(d + ${t} + 1)));

          const int MIN_DEPTH_BEGIN = 0;
          const int MAX_DEPTH_END = ${this.depth};

          float norm = 0.0;
          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            }
            else {
              break;
            }
          }

          norm = float(${s}) * norm + float(${r});

          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd){
              float dyi = -2.0 * float(${s})
                * float(${i})
                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)
                / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * ${i});
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            }
            else {
              break;
            }
          }
      }
      setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qL=n=>{const{inputs:e,backend:t,attrs:r}=n,{x:s,y:i,dy:o}=e,{depthRadius:a,bias:u,alpha:l,beta:c}=r,h=new jL(s.shape,a,u,l,c);return t.runWebGLProgram(h,[s,i,o],s.dtype)},KL={kernelName:ng,backendName:"webgl",kernelFunc:qL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XL(n,e,t,r){const s=q(e),o=q(n.shape)/s,a=Z({inputs:{x:n},attrs:{shape:[o,s]},backend:r}),u=Lr(a,n.dtype,"max",r),l=Z({inputs:{x:u},attrs:{shape:t},backend:r});return r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(u),l}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hb(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{reductionIndices:i,keepDims:o}=r,a=s.shape.length,u=Ve(i,s.shape);let l=u;const c=qt(l,a),h=c!=null,d=t.shouldExecuteOnCPU([s]);let p=s;if(h){if(d){const C=t.texData.get(p.dataId).values,S=new Array(a);for(let L=0;L<S.length;L++)S[L]=s.shape[c[L]];const I=Qd(C,s.shape,s.dtype,c,S);p=t.makeTensorInfo(S,s.dtype);const A=t.texData.get(p.dataId);A.values=I}else p=na(s,c,t);l=Kt(l.length,a)}un("max",l,a);const[m,y]=$n(p.shape,l);let g=m;o&&(g=_t(m,u));let x;if(d){const C=t.texData.get(p.dataId).values,S=lO(C,q(y),g,s.dtype);x=t.makeTensorInfo(g,s.dtype);const I=t.texData.get(x.dataId);I.values=S}else x=XL(p,y,g,t);return h&&t.disposeIntermediateTensorInfo(p),x}const YL={kernelName:ac,backendName:"webgl",kernelFunc:hb};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QL=Zd+`
  return max(a, b);
`,ZL=`
  vec4 result = vec4(max(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+mi+`
  return result;
`,JL=qe({opSnippet:QL,packedOpSnippet:ZL,cpuKernelImpl:cO}),eB={kernelName:uc,backendName:"webgl",kernelFunc:JL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tB(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e;pi(s,"maxPool");const{filterSize:i,strides:o,pad:a,dimRoundingMode:u}=r,l=1;N(Et(o,l),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${l}'`);const c=Ar(s.shape,i,o,l,a,u);if(c.filterWidth===1&&c.filterHeight===1&&Oe(c.inShape,c.outShape))return St({inputs:{x:s},backend:t});const h=new Qs(c,"max",!1);return t.runWebGLProgram(h,[s],s.dtype)}const nB={kernelName:lc,backendName:"webgl",kernelFunc:tB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rB(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{filterSize:i,strides:o,pad:a,dataFormat:u,dimRoundingMode:l}=r,c=[1,1,1],h=si(s.shape,i,o,c,a,l,u),d=new ep(h,"max",!1);return t.runWebGLProgram(d,[s],s.dtype)}const sB={kernelName:cc,backendName:"webgl",kernelFunc:rB};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class iB{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,r=e.strideWidth,s=e.dilationHeight,i=e.effectiveFilterHeight,o=e.effectiveFilterWidth,a=i-1-e.padInfo.top,u=o-1-e.padInfo.left,l=i*o-1;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${u});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${i};
          wR += ${s}) {
          float dyR = float(dyRCorner + wR) / ${t}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${o}; wC++) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);
            int maxPosValue = ${l} - int(getMaxPos(b, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            int curPosValue = wR * ${o} + wC;
            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

            dotProd += dyValue * mask;
          }
        }
        setOutput(dotProd);
      }
    `}}class oB{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,r=e.strideHeight,s=e.strideWidth,i=e.dilationDepth,o=e.dilationHeight,a=e.dilationWidth,u=e.effectiveFilterDepth,l=e.effectiveFilterHeight,c=e.effectiveFilterWidth,h=u-1-e.padInfo.front,d=l-1-e.padInfo.top,p=c-1-e.padInfo.left,m=u*l*c-1;this.userCode=`
      const ivec3 pads = ivec3(${h}, ${d}, ${p});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${u};
           wD += ${i}) {
          float dyD = float(dyDCorner + wD) / ${t}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${l};
              wR += ${o}) {
            float dyR = float(dyRCorner + wR) / ${r}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${c};
                wC += ${a}) {
              float dyC = float(dyCCorner + wC) / ${s}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);
              int maxPosValue = ${m} -
                  int(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              int curPosValue =
                  wD * ${l} * ${c} +
                  wR * ${c} + wC;
              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

              dotProd += dyValue * mask;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aB(n){const{inputs:e,backend:t,attrs:r}=n,{dy:s,input:i}=e,o=i,{filterSize:a,strides:u,pad:l,dimRoundingMode:c}=r,h=[1,1,1],d=si(o.shape,a,u,h,l,c),p=new ep(d,"max",!0),m=t.runWebGLProgram(p,[o],o.dtype),y=new oB(d),g=t.runWebGLProgram(y,[s,m],o.dtype);return t.disposeIntermediateTensorInfo(m),g}const uB={kernelName:sg,backendName:"webgl",kernelFunc:aB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lB(n){const{inputs:e,backend:t,attrs:r}=n,{dy:s,input:i,output:o}=e,a=i;pi([i,o],"maxPoolGrad");const{filterSize:u,strides:l,pad:c,dimRoundingMode:h}=r,d=Ar(a.shape,u,l,1,c,h),p=!0,m=new Qs(d,"max",p),y=t.runWebGLProgram(m,[a],a.dtype),g=new iB(d),x=t.runWebGLProgram(g,[s,y],a.dtype);return t.disposeIntermediateTensorInfo(y),x}const cB={kernelName:rg,backendName:"webgl",kernelFunc:lB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hB(n,e,t,r){let s=new Qs(t,"max",!1);const i=r.runWebGLProgram(s,[n],"float32");s=new Qs(t,"max",!0,!0,e);const o=r.runWebGLProgram(s,[n],"float32");return[i,o]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dB={kernelName:hc,backendName:"webgl",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{x:r}=n,{filterSize:s,strides:i,pad:o,includeBatchInIndex:a}=e,u=t;N(r.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`);const l=[1,1];N(Et(i,l),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${l}'`);const c=Ar(r.shape,s,i,l,o),[h,d]=hB(r,a,c,u);return[h,d]}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pB(n,e,t,r){const s=q(e),o=q(n.shape)/s,a=Z({inputs:{x:n},attrs:{shape:[o,s]},backend:r}),u=Lr(a,"float32","mean",r),l=Z({inputs:{x:u},attrs:{shape:t},backend:r});return r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(u),l}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fB={kernelName:dc,backendName:"webgl",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{x:r}=n,{keepDims:s,axis:i}=e,o=t,a=r.shape.length,u=Ve(i,r.shape);let l=u;const c=qt(l,a),h=c!=null,d=o.shouldExecuteOnCPU([r]),p=[];let m=r;if(h){if(d){const S=o.texData.get(m.dataId).values,I=new Array(a);for(let P=0;P<I.length;P++)I[P]=r.shape[c[P]];const A=Qd(S,r.shape,r.dtype,c,I);m=o.makeTensorInfo(I,r.dtype);const L=o.texData.get(m.dataId);L.values=A}else m=na(r,c,o);p.push(m),l=Kt(l.length,a)}un("sum",l,a);const[y,g]=$n(m.shape,l);let x=y;s&&(x=_t(y,u));const $=pB(m,g,x,o);for(const C of p)o.disposeIntermediateTensorInfo(C);return $}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mB(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{axis:i,keepDims:o}=r,a=s.shape.length,u=Ve(i,s.shape);let l=u;const c=qt(l,a);let h=s;c!=null&&(h=lt({inputs:{x:s},backend:t,attrs:{perm:c}}),l=Kt(l.length,s.shape.length)),un("min",l,a);const[d,p]=$n(h.shape,l),m=q(p),y=Z({inputs:{x:h},backend:t,attrs:{shape:[-1,m]}}),g=Lr(y,y.dtype,"min",t);let x;if(o){const $=_t(d,u);x=Z({inputs:{x:g},backend:t,attrs:{shape:$}})}else x=Z({inputs:{x:g},backend:t,attrs:{shape:d}});return t.disposeIntermediateTensorInfo(y),t.disposeIntermediateTensorInfo(g),c!=null&&t.disposeIntermediateTensorInfo(h),x}const gB={kernelName:pc,backendName:"webgl",kernelFunc:mB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yB=Zd+`
  return min(a, b);
`,xB=`
  vec4 result = vec4(min(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+mi+`
  return result;
`,bB=qe({opSnippet:yB,packedOpSnippet:xB,cpuKernelImpl:hO}),wB={kernelName:fc,backendName:"webgl",kernelFunc:bB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class vB{constructor(e,t,r){this.variableNames=["x"],this.outputShape=t.map((c,h)=>c[0]+e[h]+c[1]);const s=e.length,i=Ee(s),o=t.map(c=>c[0]).join(","),a=t.map((c,h)=>c[0]+e[h]).join(","),u=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,s),l=r==="reflect"?0:1;if(s===1){this.userCode=`
        int start = ${o};
        int end = ${a};

        void main() {
          int outC = getOutputCoords();
          if (outC < start) {
            outC = start * 2 - outC - ${l};
          } else if(outC >= end) {
            outC = (end - 1) * 2 - outC + ${l};
          }
          setOutput(getX(outC - start));
        }
      `;return}this.userCode=`
      ${i} start = ${i}(${o});
      ${i} end = ${i}(${a});

      void main() {
        ${i} outC = getOutputCoords();
        for (int i = 0; i < ${s}; i++) {
          if (outC[i] < start[i]) {
            outC[i] = start[i] * 2 - outC[i] - ${l};
          } else if(outC[i] >= end[i]) {
            outC[i] = (end[i] - 1) * 2 - outC[i] + ${l};
          }
        }
        ${i} coords = outC - start;
        setOutput(getX(${u}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class $B{constructor(e,t,r){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map((m,y)=>m[0]+e[y]+m[1]);const s=e.length,i=Ee(s),o=t.map(m=>m[0]).join(","),a=t.map((m,y)=>m[0]+e[y]).join(","),u=at("rc",s),l=at("source",s),c=`${u[s-1]} < ${this.outputShape[s-1]}`,h=s===1?"source":`vec2(${l.slice(-2).join()})`,d=r==="reflect"?0:1;let p="";if(s===1){const m=`
        ${i} source = rc;
        if (source < start) {
          source = start * 2 - source - ${d};
        } else if (source >= end) {
          source = (end - 1) * 2 - source + ${d};
        }
        source -= start;
      `;p=`
        ${i} rc = outputLoc;
        ${m}
        result[0] = getChannel(getX(${l.join()}), ${h});
        ${u[s-1]} += 1;
        if(${c}) {
          ${m}
          result[1] = getChannel(getX(${l.join()}), ${h});
        }
      `}else{const m=`
        ${i} source = rc;
        ${i} lt = ${i}(lessThan(source, start));
        ${i} gte = ${i}(greaterThanEqual(source, end));
        ${i} orig = 1 - (lt + gte);
        source = orig * source +
                lt * (start * 2 - source - ${d}) +
                gte * ((end - 1) * 2 - source + ${d});
        source -= start;
      `;p=`
        ${i} rc = outputLoc;
        ${m}
        result[0] = getChannel(getX(${l.join()}), ${h});
        ${u[s-1]} += 1;
        if(${c}) {
          ${m}
          result[1] = getChannel(getX(${l.join()}), ${h});
        }
        rc = outputLoc;
        ${u[s-2]} += 1;
        if(${u[s-2]} < ${this.outputShape[s-2]}) {
          ${m}
          result[2] = getChannel(getX(${l.join()}), ${h});
          ${u[s-1]} += 1;
          if(${c}) {
            ${m}
            result[3] = getChannel(getX(${l.join()}), ${h});
          }
        }
      `}this.userCode=`
      const ${i} start = ${i}(${o});
      const ${i} end = ${i}(${a});

      void main() {
        ${i} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${p}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SB=({inputs:n,backend:e,attrs:t})=>{const{x:r}=n,{paddings:s,mode:i}=t,o=B().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new $B(r.shape,s,i):new vB(r.shape,s,i);return e.runWebGLProgram(o,[r],r.dtype)},TB={kernelName:mc,backendName:"webgl",kernelFunc:SB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CB=`if (b == 0.0) return NAN;
  return mod(a, b);`,EB=`
  vec4 result = mod(a, b);
  bvec4 isNaN = equal(b, vec4(0.0));
  `+mi+`
  return result;
`,NB=qe({opSnippet:CB,packedOpSnippet:EB}),IB={kernelName:gc,backendName:"webgl",kernelFunc:NB};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class kB{constructor(e,t,r){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,r],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];

        float r = random(seed);
        float cdf = 0.0;

        for (int i = 0; i < ${t-1}; i++) {
          cdf += getProbs(batch, i);

          if (r < cdf) {
            setOutput(float(i));
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutput(float(${t-1}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _B=`
if (a == b) {
  return 1.0;
};
return a / b;`,RB=`
  // vec4 one = vec4(equal(a, b));
  // return one + (vec4(1.0) - one) * a / b;
  vec4 result = a / b;
  if(a.x == b.x) {
    result.x = 1.;
  }
  if(a.y == b.y) {
    result.y = 1.;
  }
  if(a.z == b.z) {
    result.z = 1.;
  }
  if(a.w == b.w) {
    result.w = 1.;
  }

  return result;
`,db=qe({opSnippet:_B,packedOpSnippet:RB,checkOutOfBounds:!0}),AB={kernelName:Il,backendName:"webgl",kernelFunc:db};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mm="return a - b;",pb=qe({opSnippet:mm,packedOpSnippet:mm,supportsComplex:!0,cpuKernelImpl:RO}),OB={kernelName:gh,backendName:"webgl",kernelFunc:pb};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fb(n){const{inputs:e,backend:t,attrs:r}=n,{logits:s}=e,{dim:i}=r,o=Ve([i],s.shape),a=hb({inputs:{x:s},backend:t,attrs:{reductionIndices:o,keepDims:!1}}),u=_t(a.shape,o),l=Z({inputs:{x:a},backend:t,attrs:{shape:u}}),c=pb({inputs:{a:s,b:l},backend:t}),h=ub({inputs:{x:c},backend:t}),d=ra({inputs:{x:h},backend:t,attrs:{axis:o,keepDims:!1}}),p=Z({inputs:{x:d},backend:t,attrs:{shape:u}}),m=db({inputs:{a:h,b:p},backend:t});return t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(l),t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(p),m}const DB={kernelName:ih,backendName:"webgl",kernelFunc:fb};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FB(n){const{inputs:e,backend:t,attrs:r}=n,{logits:s}=e,{numSamples:i,seed:o,normalized:a}=r,u=a?s:fb({inputs:{logits:s},backend:t,attrs:{dim:s.shape.length-1}}),l=u.shape[0],c=u.shape[1],h=new kB(l,c,i),d=[[o]],p=t.runWebGLProgram(h,[u],"int32",d);return a||t.disposeIntermediateTensorInfo(u),p}const PB={kernelName:yc,backendName:"webgl",kernelFunc:FB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LB=Xt+`
  return -x;
`,BB=`
  vec4 result = -x;
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`;function MB(n){const{inputs:e,backend:t}=n,{x:r}=e;if(t.shouldExecuteOnCPU([r])){const i=t.texData.get(r.dataId),[o,a]=pO(i.values,r.shape,r.dtype);return t.makeTensorInfo(a,r.dtype,o)}let s;return B().getBool("WEBGL_PACK_UNARY_OPERATIONS")?s=new Gn(r.shape,BB):s=new pn(r.shape,LB),t.runWebGLProgram(s,[r],r.dtype)}const VB={kernelName:bc,backendName:"webgl",kernelFunc:MB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UB=Fd;function zB(n){Lt("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:t,attrs:r}=n,{boxes:s,scores:i}=e,{maxOutputSize:o,iouThreshold:a,scoreThreshold:u}=r,l=t.readSync(s.dataId),c=t.readSync(i.dataId),{selectedIndices:h}=UB(l,c,o,a,u);return t.makeTensorInfo([h.length],"int32",new Int32Array(h))}const WB={kernelName:vc,backendName:"webgl",kernelFunc:zB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GB=Pd;function HB(n){Lt("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:t,attrs:r}=n,{boxes:s,scores:i}=e,{maxOutputSize:o,iouThreshold:a,scoreThreshold:u,padToMaxOutputSize:l}=r,c=t.readSync(s.dataId),h=t.readSync(i.dataId),{selectedIndices:d,validOutputs:p}=GB(c,h,o,a,u,l);return[t.makeTensorInfo([d.length],"int32",new Int32Array(d)),t.makeTensorInfo([],"int32",new Int32Array([p]))]}const jB={kernelName:$c,backendName:"webgl",kernelFunc:HB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qB=Ld;function KB(n){Lt("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:t,attrs:r}=n,{boxes:s,scores:i}=e,{maxOutputSize:o,iouThreshold:a,scoreThreshold:u,softNmsSigma:l}=r,c=t.readSync(s.dataId),h=t.readSync(i.dataId),d=o,p=a,m=u,y=l,{selectedIndices:g,selectedScores:x}=qB(c,h,d,p,m,y);return[t.makeTensorInfo([g.length],"int32",new Int32Array(g)),t.makeTensorInfo([x.length],"float32",new Float32Array(x))]}const XB={kernelName:Sc,backendName:"webgl",kernelFunc:KB};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class YB{constructor(e,t,r,s){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int index = round(getIndices(coords.x));
        setOutput(mix(float(${s}), float(${r}),
                      float(index == coords.y)));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QB=n=>{const{inputs:e,backend:t,attrs:r}=n,{indices:s}=e,{dtype:i,depth:o,onValue:a,offValue:u}=r,l=q(s.shape),c=new YB(l,o,a,u),h=Z({inputs:{x:s},backend:t,attrs:{shape:[l]}}),d=t.runWebGLProgram(c,[h],i);t.disposeIntermediateTensorInfo(h);const p=[...s.shape,o],m=Z({inputs:{x:d},backend:t,attrs:{shape:p}});return t.disposeIntermediateTensorInfo(d),m},ZB={kernelName:Cc,backendName:"webgl",kernelFunc:QB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vo(n){const{inputs:e,backend:t}=n,{x:r}=e;if(r.dtype==="complex64"){const s=yi({inputs:{input:r},backend:t}),i=vo({inputs:{x:s},backend:t}),o=sa({inputs:{input:r},backend:t}),a=vo({inputs:{x:o},backend:t}),u=nr({inputs:{real:i,imag:a},backend:t});return t.disposeIntermediateTensorInfo(s),t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(a),u}else return xi({attrs:{shape:r.shape,dtype:r.dtype,value:r.dtype==="string"?"":0},backend:t})}const JB={kernelName:Th,backendName:"webgl",kernelFunc:vo};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mb(n){const{inputs:e,backend:t}=n,{x:r}=e;if(r.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(r.dtype==="complex64"){const s=yi({inputs:{input:r},backend:t}),i=mb({inputs:{x:s},backend:t}),o=sa({inputs:{input:r},backend:t}),a=vo({inputs:{x:o},backend:t}),u=nr({inputs:{real:i,imag:a},backend:t});return t.disposeIntermediateTensorInfo(s),t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(a),u}else return xi({attrs:{shape:r.shape,dtype:r.dtype,value:1},backend:t})}const e4={kernelName:Tc,backendName:"webgl",kernelFunc:mb};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function t4(n){const{inputs:e,backend:t,attrs:r}=n,{axis:s}=r;if(e.length===1)return Ou({inputs:{input:e[0]},backend:t,attrs:{dim:s}});const i=e[0].shape,o=e[0].dtype;e.forEach(c=>{Je(i,c.shape,"All tensors passed to stack must have matching shapes"),N(o===c.dtype,()=>"All tensors passed to stack must have matching dtypes")});const a=[],u=e.map(c=>{const h=Ou({inputs:{input:c},backend:t,attrs:{dim:s}});return a.push(h),h}),l=eb({inputs:u,backend:t,attrs:{axis:s}});return a.forEach(c=>t.disposeIntermediateTensorInfo(c)),l}const n4={kernelName:Ec,backendName:"webgl",kernelFunc:t4};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class r4{constructor(e,t,r){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((l,c)=>l[0]+e[c]+l[1]);const s=e.length,i=Ee(s),o=t.map(l=>l[0]).join(","),a=t.map((l,c)=>l[0]+e[c]).join(","),u=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,s);if(s===1){this.userCode=`
        int start = ${o};
        int end = ${a};

        void main() {
          int outC = getOutputCoords();
          if (outC < start || outC >= end) {
            setOutput(value);
          } else {
            setOutput(getX(outC - start));
          }
        }
      `;return}this.userCode=`
      ${i} start = ${i}(${o});
      ${i} end = ${i}(${a});

      void main() {
        ${i} outC = getOutputCoords();
        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {
          setOutput(value);
        } else {
          ${i} coords = outC - start;
          setOutput(getX(${u}));
        }
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class s4{constructor(e,t,r){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((y,g)=>y[0]+e[g]+y[1]);const s=e.length,i=Ee(s),o=t.map(y=>y[0]).join(","),a=t.map((y,g)=>y[0]+e[g]).join(","),u=at("rc",s),l=at("source",s),c=`${u[s-1]} < ${this.outputShape[s-1]}`,h=s===1?"source":`vec2(${l.slice(-2).join()})`,d=[`${i} rc = outputLoc;`,`${u[s-1]} += 1;
       if(${c}) {
      `,s===1?"":`}
       rc = outputLoc;
       ${u[s-2]} += 1;
       if(${u[s-2]} < ${this.outputShape[s-2]}) {`,s===1?"":`  ${u[s-1]} += 1;
         if(${c}) {`],p=s===1?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let m="";for(let y=0,g=s===1?2:4;y<g;y++)m+=`
        ${d[y]}
        if (${p}) {
          result[${y}] = float(value);
        } else {
          ${i} source = rc - start;
          result[${y}] = getChannel(getX(${l.join()}), ${h});
        }
      `;m+=s===1?"} ":"}}",this.userCode=`
      const ${i} start = ${i}(${o});
      const ${i} end = ${i}(${a});

      void main() {
        ${i} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${m}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gb=n=>{const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{paddings:i,constantValue:o}=r;if(q(s.shape)===0){const l=i.map((c,h)=>c[0]+s.shape[h]+c[1]);return xi({backend:t,attrs:{shape:l,value:o,dtype:s.dtype}})}const a=B().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new s4(s.shape,i,o):new r4(s.shape,i,o),u=[[o]];return t.runWebGLProgram(a,[s],s.dtype,u)},i4={kernelName:Nc,backendName:"webgl",kernelFunc:gb};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const o4=`
  if(a < 0.0 && floor(b) < b){
    return NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  return (round(mod(b, 2.0)) != 1) ?
      pow(abs(a), b) : sign(a) * pow(abs(a), b);
`,a4=`
  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.
  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));
  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);
  vec4 result = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  bvec4 isExpZero = equal(b, vec4(0.0));
  result.r = isExpZero.r ? 1.0 : result.r;
  result.g = isExpZero.g ? 1.0 : result.g;
  result.b = isExpZero.b ? 1.0 : result.b;
  result.a = isExpZero.a ? 1.0 : result.a;

  bvec4 isNaN1 = lessThan(a, vec4(0.0));
  bvec4 isNaN2 = lessThan(floor(b), b);
  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);
  `+mi+`
  return result;
`,u4=qe({opSnippet:o4,packedOpSnippet:a4}),l4={kernelName:Ic,backendName:"webgl",kernelFunc:u4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function c4(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{axis:i,keepDims:o}=r,a=s.shape.length,u=[],l=Ve(i,s.shape);let c=l;const h=qt(c,a);let d=s;h!=null&&(d=lt({inputs:{x:s},backend:t,attrs:{perm:h}}),c=Kt(c.length,a),u.push(d)),un("prod",c,a);let p;if(t.shouldExecuteOnCPU([d])){const m=t.texData.get(d.dataId).values,{outVals:y,outShape:g,outDtype:x}=mO(d.shape,d.dtype,m,c);p=t.makeTensorInfo(g,x,y)}else{const[m,y]=$n(d.shape,c),g=q(y),x=Z({inputs:{x:d},backend:t,attrs:{shape:[-1,g]}}),$=_o(s.dtype),C=Lr(x,$,"prod",t);p=Z({inputs:{x:C},backend:t,attrs:{shape:m}}),u.push(x),u.push(C)}if(o){u.push(p);const m=_t(p.shape,l);p=Z({inputs:{x:p},backend:t,attrs:{shape:m}})}return u.forEach(m=>t.disposeIntermediateTensorInfo(m)),p}const h4={kernelName:_c,backendName:"webgl",kernelFunc:c4};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function d4(n){const{inputs:e,backend:t,attrs:r}=n,{paramsNestedSplits:s,paramsDenseValues:i,indices:o}=e,{outputRaggedRank:a}=r,u=s.map(x=>t.readSync(x.dataId)),l=s.map(x=>x.shape),c=t.readSync(i.dataId),h=t.readSync(o.dataId),[d,p,m]=gO(u,l,c,i.shape,i.dtype,h,o.shape,a),y=d.map(x=>t.makeTensorInfo([x.length],"int32",x)),g=t.makeTensorInfo(m,i.dtype,p);return y.concat([g])}const p4={kernelName:Rc,backendName:"webgl",kernelFunc:d4};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function f4(n){const{inputs:e,backend:t}=n,{starts:r,limits:s,deltas:i}=e,o=t.readSync(r.dataId),a=t.readSync(s.dataId),u=t.readSync(i.dataId),[l,c]=yO(o,r.shape,r.dtype,a,s.shape,u,i.shape),h=t.makeTensorInfo([l.length],"int32",l),d=t.makeTensorInfo([c.length],r.dtype,c);return[h,d]}const m4={kernelName:Ac,backendName:"webgl",kernelFunc:f4};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function g4(n){const{inputs:e,backend:t,attrs:r}=n,{shape:s,values:i,defaultValue:o,rowPartitionTensors:a}=e,{rowPartitionTypes:u}=r,l=t.readSync(s.dataId),c=t.readSync(i.dataId),h=t.readSync(o.dataId),d=a.map(g=>t.readSync(g.dataId)),p=a.map(g=>g.shape),[m,y]=xO(l,s.shape,c,i.shape,i.dtype,h,o.shape,d,p,u);return t.makeTensorInfo(m,i.dtype,y)}const y4={kernelName:Oc,backendName:"webgl",kernelFunc:g4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yb=n=>{const{backend:e,attrs:t}=n,{start:r,stop:s,step:i,dtype:o}=t,a=bO(r,s,i,o);return e.makeTensorInfo([a.length],o,a)},x4={kernelName:Dc,backendName:"webgl",kernelFunc:yb};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const b4="return 1.0 / x;",w4=me({opSnippet:b4}),v4={kernelName:Pc,backendName:"webgl",kernelFunc:w4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $4=Xt+`
  return (x < 0.0) ? 0.0 : x;
`,S4=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,T4=me({opSnippet:$4,packedOpSnippet:S4}),C4={kernelName:Lc,backendName:"webgl",kernelFunc:T4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const E4=Xt+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,N4=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,I4=me({opSnippet:E4,packedOpSnippet:N4}),k4={kernelName:Uc,backendName:"webgl",kernelFunc:I4};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class _4{constructor(e,t,r,s,i){this.variableNames=["A"],this.outputShape=[];const[o,a,u,l]=e;this.outputShape=[o,t,r,l];const c=[s&&t>1?a-1:a,s&&r>1?u-1:u],h=[s&&t>1?t-1:t,s&&r>1?r-1:r];let d;i?d="(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":d="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${c[0]/h[0]},
          ${c[1]/h[1]});
      const vec2 inputShapeRC = vec2(${a}.0, ${u}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${d};

        // Compute the four integer indices.
        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));
        ivec2 sourceCeilRC = ivec2(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);
        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);
        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);
        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);

        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);

        float top = topLeft + (topRight - topLeft) * fracRC.y;
        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
        float newValue = top + (bottom - top) * fracRC.x;

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class R4{constructor(e,t,r,s,i){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[o,a,u,l]=e;this.outputShape=[o,t,r,l];const c=[s&&t>1?a-1:a,s&&r>1?u-1:u],h=[s&&t>1?t-1:t,s&&r>1?r-1:r];let d;i?d="(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":d="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${c[0]/h[0]},
          ${c[1]/h[1]},
          ${c[1]/h[1]});
      const vec3 inputShapeRC = vec3(${a}.0, ${u}.0,
                                     ${u}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${d};

        // Compute the four integer indices.
        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));
        ivec3 sourceCeilRC = ivec3(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${l-1};
        bool hasNextRow = coords.z < ${r-1};

        // In parallel, construct four corners for all four components in
        // packed 2x2 cell.
        vec4 topLeft = vec4(
          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 bottomLeft = vec4(
          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 topRight = vec4(
          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec4 bottomRight = vec4(
          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);

        vec4 top = mix(topLeft, topRight, fracRC.yyzz);
        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);
        vec4 newValue = mix(top, bottom, fracRC.x);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function A4(n){const{inputs:e,backend:t,attrs:r}=n,{images:s}=e,{alignCorners:i,halfPixelCenters:o,size:a}=r,[u,l]=a,c=B().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new R4(s.shape,u,l,i,o):new _4(s.shape,u,l,i,o);return t.runWebGLProgram(c,[s],"float32")}const O4={kernelName:Vc,backendName:"webgl",kernelFunc:A4};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class D4{constructor(e,t,r){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,s,i]=t,[,o,a]=e,u=[r&&o>1?s-1:s,r&&a>1?i-1:i],l=[r&&o>1?o-1:o,r&&a>1?a-1:a],c=u[0]/l[0],h=u[1]/l[1],d=1/c,p=1/h,m=Math.ceil(d)*2+2,y=Math.ceil(p)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${c});
        const float widthScale = float(${h});

        const float invHeightScale = float(${d});
        const float invWidthScale = float(${p});

        const int winHeight = int(${m});
        const int winWidth = int(${y});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(startRLerp - float(winHeight / 2));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(startCLerp - float(winWidth / 2));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${o}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${a}) {
              continue;
            }

            float dxR = float(dyR) * heightScale;
            int topDxRIndex = int(floor(dxR));
            int bottomDxRIndex = int(min(ceil(dxR), ${s-1}.0));
            float dxRLerp = dxR - float(topDxRIndex);
            float inverseDxRLerp = 1.0 - dxRLerp;

            float dxC = float(dyC) * widthScale;
            int leftDxCIndex = int(floor(dxC));
            int rightDxCIndex = int(min(ceil(dxC), ${i-1}.0));
            float dxCLerp = dxC - float(leftDxCIndex);
            float inverseDxCLerp = 1.0 - dxCLerp;

            if (r == topDxRIndex && c == leftDxCIndex) {
              // topLeft
              accumulator +=
                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
            }

            if (r == topDxRIndex && c == rightDxCIndex) {
              // topRight
              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
            }

            if (r == bottomDxRIndex && c == leftDxCIndex) {
              // bottomLeft
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
            }

            if (r == bottomDxRIndex && c == rightDxCIndex) {
              // bottomRight
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function F4(n){const{inputs:e,backend:t,attrs:r}=n,{images:s,dy:i}=e,{alignCorners:o}=r,a=new D4(i.shape,s.shape,o);return t.runWebGLProgram(a,[i],i.dtype)}const P4={kernelName:og,backendName:"webgl",kernelFunc:F4};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class L4{constructor(e,t,r,s,i){this.variableNames=["A"],this.outputShape=[];const[o,a,u,l]=e;this.outputShape=[o,t,r,l];const c=[s&&t>1?a-1:a,s&&r>1?u-1:u],h=[s&&t>1?t-1:t,s&&r>1?r-1:r],d=s?"0.5":"0.0";let p;i?p="max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":p="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${c[0]/h[0]},
          ${c[1]/h[1]});
      const vec2 inputShapeRC = vec2(${a}.0, ${u}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${p};

        // Compute the coordinators of nearest neighbor point.
        ivec2 sourceNearestRC = ivec2(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));
        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class B4{constructor(e,t,r,s,i){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[o,a,u,l]=e;this.outputShape=[o,t,r,l];const c=[s&&t>1?a-1:a,s&&r>1?u-1:u],h=[s&&t>1?t-1:t,s&&r>1?r-1:r],d=s?"0.5":"0.0";let p;i?p="max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":p="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${c[0]/h[0]},
          ${c[1]/h[1]},
          ${c[1]/h[1]});
      const vec3 inputShapeRC = vec3(${a}.0, ${u}.0,
                                     ${u}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${p};

        // Compute the coordinators of nearest neighbor point.
        ivec3 sourceNearestRC = ivec3(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${l-1};
        bool hasNextRow = coords.z < ${r-1};

        vec4 newValue = vec4(
          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),
          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function M4(n){const{inputs:e,backend:t,attrs:r}=n,{images:s}=e,{alignCorners:i,halfPixelCenters:o,size:a}=r,[u,l]=a,c=B().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new B4(s.shape,u,l,i,o):new L4(s.shape,u,l,i,o);return t.runWebGLProgram(c,[s],s.dtype)}const V4={kernelName:Mc,backendName:"webgl",kernelFunc:M4};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class U4{constructor(e,t,r){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,s,i]=t,[,o,a]=e,u=[r&&o>1?s-1:s,r&&a>1?i-1:i],l=[r&&o>1?o-1:o,r&&a>1?a-1:a],c=u[0]/l[0],h=u[1]/l[1],d=1/c,p=1/h,m=Math.ceil(d)*2+2,y=Math.ceil(p)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${c});
        const float widthScale = float(${h});

        const float invHeightScale = float(${d});
        const float invWidthScale = float(${p});

        const int winHeight = int(${m});
        const int winWidth = int(${y});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(floor(startRLerp - float(winHeight / 2)));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(floor(startCLerp - float(winWidth / 2)));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${o}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${a}) {
              continue;
            }

            float sourceFracRow =
              float(${u[0]}) *
                (float(dyR) / float(${l[0]}));

            float sourceFracCol =
                float(${u[1]}) *
                  (float(dyC) / float(${l[1]}));

            int sourceNearestRow = int(min(
                float(int(${s}) - 1),
                ${r} ? float(round(sourceFracRow)) :
                                  float(floor(sourceFracRow))));

            int sourceNearestCol = int(min(
                float(int(${i}) - 1),
                ${r} ? float(round(sourceFracCol)) :
                                  float(floor(sourceFracCol))));

            if (r == sourceNearestRow && c == sourceNearestCol) {
              accumulator += getDy(b, dyR, dyC, d);
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function z4(n){const{inputs:e,backend:t,attrs:r}=n,{images:s,dy:i}=e,{alignCorners:o}=r,a=new U4(i.shape,s.shape,o);return t.runWebGLProgram(a,[i],i.dtype)}const W4={kernelName:ig,backendName:"webgl",kernelFunc:z4};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class G4{constructor(e,t){this.variableNames=["x"];const r=e.length;if(r>4)throw new Error(`WebGL backend: Reverse of rank-${r} tensor is not yet supported`);if(this.outputShape=e,r===1){this.userCode=`
        void main() {
          int coord = getOutputCoords();
          setOutput(getX(${e[0]} - coord - 1));
        }
      `;return}const s=a=>t.indexOf(a)!==-1&&e[a]!==1?`${e[a]} - coords[${a}] - 1`:`coords[${a}]`,i=e.map((a,u)=>s(u)).join(","),o=Ee(r);this.userCode=`
      void main() {
        ${o} coords = getOutputCoords();
        setOutput(getX(${i}));
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class H4{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const r=e.length;if(r>4)throw new Error(`WebGL backend: Reverse of rank-${r} tensor is not yet supported`);this.outputShape=e;const s=at("rc",r),i=`${s[r-1]} + 1 < ${this.outputShape[r-1]}`,o=`${s[r-2]} + 1 < ${this.outputShape[r-2]}`,a=Ee(r);r===1?this.userCode=`
        void main(){
          int rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = getChannel(getX(${e[0]} - rc - 1),
            ${e[0]} - rc - 1);
          if(${i}){
              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),
                ${e[0]} - (rc  + 1) - 1);
          }
          setOutput(result);
        }
      `:this.userCode=`
        void main() {
          ${a} rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = ${u(s.slice())};
          if(${i}){
            result.g = ${l(s.slice())};
          }
          if(${o}) {
            result.b = ${c(s.slice())};
            if(${i}) {
              result.a = ${h(s.slice())};
            }
          }
          setOutput(result);
        }
    `;function u(m){return d(m)}function l(m){return m[r-1]="("+m[r-1]+" + 1)",d(m)}function c(m){return m[r-2]="("+m[r-2]+" + 1)",d(m)}function h(m){return m[r-1]="("+m[r-1]+" + 1)",m[r-2]="("+m[r-2]+" + 1)",d(m)}function d(m){const y=e.map(($,C)=>p(C,m)),g=y.join(","),x=y.slice(-2).join(",");return`getChannel(getX(${g}), vec2(${x}))`}function p(m,y){return t.indexOf(m)!==-1&&e[m]!==1?`${e[m]} - ${y[m]} - 1`:`${y[m]}`}}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function j4(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{dims:i}=r,o=s.shape.length,a=Ve(i,s.shape);if(o===0)return St({inputs:{x:s},backend:t});const u=B().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new H4(s.shape,a):new G4(s.shape,a);return t.runWebGLProgram(u,[s],s.dtype)}const q4={kernelName:zc,backendName:"webgl",kernelFunc:j4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class K4{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const r=e[1],s=e[2];this.outputShape=e;let i="";typeof t=="number"?i=`float outputValue = ${t.toFixed(2)};`:i=`
        vec3 fill = vec3(${t.join(",")});
        float outputValue = fill[coords[3]];`,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];
          int y = coords[1];
          float coordXFloat = (float(x) - params[0]) * params[3] -
            (float(y) - params[1]) * params[2];
          float coordYFloat = (float(x) - params[0]) * params[2] +
            (float(y) - params[1]) * params[3];
          int coordX = int(round(coordXFloat + params[0]));
          int coordY = int(round(coordYFloat + params[1]));
          ${i}
          if(coordX >= 0 && coordX < ${s} && coordY >= 0 && coordY < ${r}) {
            outputValue = getImage(coords[0], coordY, coordX, coords[3]);
          }
          setOutput(outputValue);
        }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const X4={kernelName:Eh,backendName:"webgl",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{image:r}=n,{radians:s,fillValue:i,center:o}=e,a=t,u=new K4(r.shape,i),[l,c]=Nx(o,r.shape[1],r.shape[2]),h=[[l,c,Math.sin(s),Math.cos(s)]];return a.runWebGLProgram(u,[r],r.dtype,h)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Y4=`
  // OpenGL ES does not support round function.
  // The algorithm is based on banker's rounding.
  float base = floor(x);
  if ((x - base) < 0.5) {
    return floor(x);
  } else if ((x - base) > 0.5) {
    return ceil(x);
  } else {
    if (mod(base, 2.0) == 0.0) {
      return base;
    } else {
      return base + 1.0;
    }
  }
`,Q4=me({opSnippet:Y4}),Z4={kernelName:Wc,backendName:"webgl",kernelFunc:Q4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const J4="return inversesqrt(x);",eM=me({opSnippet:J4,cpuKernelImpl:wO}),tM={kernelName:Gc,backendName:"webgl",kernelFunc:eM};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class xb{constructor(e,t,r,s,i,o,a=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=o;const u=Ee(i.length),l=Ee(o.length);let c="";r===1?c="i":r===2&&(c="i, j");const h=`getIndices(${c})`;let d="";s===1?d="i":s===2&&(d="i, coords[1]");const p=`getUpdates(${d})`,m=t>1?"strides[j]":"strides";this.userCode=`
        ${u} strides = ${u}(${i});

        void main() {
          ${l} coords = getOutputCoords();
          float sum = 0.0;
          bool found = false;
          for (int i = 0; i < ${e}; i++) {
            int flattenedIndex = 0;
            for (int j = 0; j < ${t}; j++) {
              int index = round(${h});
              flattenedIndex += index * ${m};
            }
            if (flattenedIndex == coords[0]) {
              sum += ${p};
              found = true;
            }
          }
          setOutput(mix(getDefaultValue(), sum, float(found)));
        }
      `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nM(n){const{inputs:e,backend:t,attrs:r}=n,{indices:s,updates:i}=e,{shape:o}=r,{sliceRank:a,numUpdates:u,sliceSize:l,strides:c,outputSize:h}=Oo(i,s,o),d=[h/l,l];if(h===0)return t.makeTensorInfo(o,s.dtype);const p=Z({inputs:{x:s},backend:t,attrs:{shape:[u,a]}}),m=Z({inputs:{x:i},backend:t,attrs:{shape:[u,l]}}),y=t.makeTensorInfo([],"float32",new Float32Array([0])),g=new xb(u,a,p.shape.length,m.shape.length,c,d),x=t.runWebGLProgram(g,[m,p,y],m.dtype),$=Z({inputs:{x},backend:t,attrs:{shape:o}});return t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(x),t.disposeIntermediateTensorInfo(y),$}const rM={kernelName:Hc,backendName:"webgl",kernelFunc:nM};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class sM{constructor(e,t,r,s){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,r];const i="while (left < right) {",o=`for (int i = 0; i < ${Math.ceil(Math.log2(t+1))}; ++i) { if (left >= right) break;`,a=B().getNumber("WEBGL_VERSION")===2?i:o,u=s==="left"?"<":"<=";this.userCode=`
       int findBound(int batch, float value) {
         int left = 0;
         int right = numInputs;
         int mid;
         ${a}
           mid = (left + right) / 2;
           if (getSortedSequence(batch, mid) ${u} value) {
             left = mid + 1;
           } else {
             right = mid;
           }
         }
         return right;
       }

       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int valueIndex = coords[1];

         float value = getValues(batch, valueIndex);

         setOutput(float(findBound(batch, value)));
       }
     `}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iM(n){const{inputs:e,backend:t,attrs:r}=n,{sortedSequence:s,values:i}=e,{side:o}=r,a=new sM(s.shape[0],s.shape[1],i.shape[1],o),u=[[s.shape[1]]];return t.runWebGLProgram(a,[s,i],"int32",u)}const oM={kernelName:jc,backendName:"webgl",kernelFunc:iM};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class aM{constructor(e,t,r){this.variableNames=["c","a","b"],this.outputShape=t;let s,i;if(r>4)throw Error(`Where for rank ${r} is not yet supported`);if(r===1)i="resRC",s="resRC";else{const a=["resRC.x","resRC.y","resRC.z","resRC.w"],u=[],l=[];for(let c=0;c<t.length;c++)l.push(`${a[c]}`),c<e&&u.push(`${a[c]}`);s=u.join(),i=l.join()}const o=Ee(r);this.userCode=`
      void main() {
        ${o} resRC = getOutputCoords();
        float cVal = getC(${s});
        if (cVal >= 1.0) {
          setOutput(getA(${i}));
        } else {
          setOutput(getB(${i}));
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uM(n){const{inputs:e,backend:t}=n,{condition:r,t:s,e:i}=e,o=new aM(r.shape.length,s.shape,s.shape.length);return t.runWebGLProgram(o,[r,s,i],sn(s.dtype,i.dtype))}const lM={kernelName:qc,backendName:"webgl",kernelFunc:uM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cM=`
  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.
  // see: https://arxiv.org/abs/1706.02515
  float scaleAlpha = ${_x};
  float scale = ${Rx};
  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);
`,hM=me({opSnippet:cM}),dM={kernelName:Kc,backendName:"webgl",kernelFunc:hM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pM=fs+`
  return 1.0 / (1.0 + exp(-1.0 * x));
`,fM=`
  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,mM=me({opSnippet:pM,packedOpSnippet:fM,cpuKernelImpl:$O}),gM={kernelName:Jc,backendName:"webgl",kernelFunc:mM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yM=`
  if (isnan(x)) { return 0.0; }
  return sign(x);
`,xM=me({opSnippet:yM}),bM={kernelName:Zc,backendName:"webgl",kernelFunc:xM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wM=fs+`
  return sin(x);
`,vM=me({opSnippet:wM}),$M={kernelName:Yc,backendName:"webgl",kernelFunc:vM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SM=`
  float e2x = exp(x);
  return (e2x - 1.0 / e2x) / 2.0;
`,TM=me({opSnippet:SM}),CM={kernelName:Qc,backendName:"webgl",kernelFunc:TM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EM=`
  float epsilon = 1.1920928955078125e-7;
  float threshold = log(epsilon) + 2.0;

  bool too_large = x > -threshold;
  bool too_small = x < threshold;

  float result;
  float exp_x = exp(x);

  if (too_large){
    result = x;
  }
  else if (too_small){
    result = exp_x;
  }
  else{
    result = log(exp_x + 1.0);
  }
  return result;
`,NM=me({opSnippet:EM}),IM={kernelName:eh,backendName:"webgl",kernelFunc:NM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kM=n=>{const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{blockShape:i,paddings:o}=r;N(s.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");const a=i.reduce((x,$)=>x*$),u=[[0,0]];u.push(...o);for(let x=1+i.length;x<s.shape.length;++x)u.push([0,0]);const l=[],c=gb({inputs:{x:s},backend:t,attrs:{paddings:u,constantValue:0}}),h=Vd(c.shape,i,a,!1),d=Ud(h.length,i.length,!1),p=zd(c.shape,i,a,!1),m=Z({inputs:{x:c},backend:t,attrs:{shape:h}}),y=lt({inputs:{x:m},backend:t,attrs:{perm:d}}),g=Z({inputs:{x:y},backend:t,attrs:{shape:p}});return l.push(c),l.push(m),l.push(y),l.forEach(x=>t.disposeIntermediateTensorInfo(x)),g},_M={kernelName:rh,backendName:"webgl",kernelFunc:kM};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RM(n){const{inputs:e,backend:t}=n,{indices:r,values:s,denseShape:i,defaultValue:o}=e;if(i.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
         ${i.shape}`);if(r.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
         ${r.shape}`);if(s.shape.length!==1)throw new Error(`Values must be a vector, saw:
         ${s.shape}`);if(o.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${o.shape}`);const a=t.readSync(r.dataId),u=t.readSync(s.dataId),l=t.readSync(i.dataId),c=t.readSync(o.dataId)[0],[h,d,p,m,y]=TO(a,r.shape,r.dtype,u,s.dtype,l,c);return[t.makeTensorInfo(d,r.dtype,h),t.makeTensorInfo([d[0]],s.dtype,p),t.makeTensorInfo([m.length],"bool",new Uint8Array(m.map(g=>Number(g)))),t.makeTensorInfo([y.length],r.dtype,new Int32Array(y))]}const AM={kernelName:oh,backendName:"webgl",kernelFunc:RM};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OM(n){const{inputs:e,backend:t}=n,{inputIndices:r,inputShape:s,newShape:i}=e;if(r.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape ${r.shape}`);if(s.shape.length!==1)throw new Error(`Input shape should be a vector but received shape ${s.shape}`);if(i.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${i.shape}`);const o=Array.from(t.readSync(s.dataId)),a=t.readSync(r.dataId),u=Array.from(t.readSync(i.dataId)),[l,c,h]=CO(a,r.shape,r.dtype,o,u);return[t.makeTensorInfo(c,r.dtype,l),t.makeTensorInfo([h.length],i.dtype,new Int32Array(h))]}const DM={kernelName:ah,backendName:"webgl",kernelFunc:OM};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FM(n){const{inputs:e,backend:t}=n,{data:r,indices:s,segmentIds:i}=e;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(s.shape.length!==1)throw new Error(`Indices should be a vector but received shape
              ${s.shape}`);if(i.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
              ${i.shape}`);const o=t.readSync(r.dataId),a=t.readSync(s.dataId),u=t.readSync(i.dataId),[l,c]=U1(o,r.shape,r.dtype,a,u,!0);return t.makeTensorInfo(c,r.dtype,l)}const PM={kernelName:uh,backendName:"webgl",kernelFunc:FM};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LM(n){const{inputs:e,backend:t}=n,{data:r,indices:s,segmentIds:i}=e;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(s.shape.length!==1)throw new Error(`Indices should be a vector but received shape
             ${s.shape}`);if(i.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
             ${i.shape}`);const o=t.readSync(r.dataId),a=t.readSync(s.dataId),u=t.readSync(i.dataId),[l,c]=U1(o,r.shape,r.dtype,a,u);return t.makeTensorInfo(c,r.dtype,l)}const BM={kernelName:lh,backendName:"webgl",kernelFunc:LM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MM(n){const{inputs:e,backend:t,attrs:r}=n,{sparseIndices:s,sparseValues:i,defaultValue:o}=e,{outputShape:a}=r,{sliceRank:u,numUpdates:l,sliceSize:c,strides:h,outputSize:d}=Oo(i,s,a),p=!1;if(i.dtype==="string"){const x=t.bufferSync(s),$=t.bufferSync(i),C=vr(t.readSync(o.dataId)[0]),S=vO(x,$,a,d,c,l,u,h,C,p);return t.makeTensorInfo(a,S.dtype,S.values)}const m=new xb(l,u,s.shape.length,i.shape.length,h,[d,1],p),y=t.runWebGLProgram(m,[i,s,o],i.dtype),g=Z({inputs:{x:y},backend:t,attrs:{shape:a}});return t.disposeIntermediateTensorInfo(y),g}const VM={kernelName:ch,backendName:"webgl",kernelFunc:MM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UM(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{numOrSizeSplits:i,axis:o}=r,a=Ve(o,s.shape)[0],u=Wx(s,i,a),l=s.shape.length,c=new Array(l).fill(0),h=s.shape.slice();return u.map(d=>{const p=[...h];p[a]=d;const m=ms({inputs:{x:s},backend:t,attrs:{begin:c,size:p}});return c[a]+=d,m})}const zM={kernelName:sh,backendName:"webgl",kernelFunc:UM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gm="return sqrt(x);",WM=me({opSnippet:gm,packedOpSnippet:gm,cpuKernelImpl:EO}),GM={kernelName:th,backendName:"webgl",kernelFunc:WM};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HM="return x * x;",jM=me({opSnippet:HM}),qM={kernelName:ag,backendName:"webgl",kernelFunc:jM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ym="return (a - b) * (a - b);",KM=qe({opSnippet:ym,packedOpSnippet:ym}),XM={kernelName:hh,backendName:"webgl",kernelFunc:KM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YM({inputs:n,attrs:e,backend:t}){const{x:r}=n,s=Xt+`
    return x > 0.0 ? 1.0 : float(${e.alpha});
  `,i=new pn(r.shape,s);return t.runWebGLProgram(i,[r],r.dtype)}const QM={kernelName:Ch,backendName:"webgl",kernelFunc:YM};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ZM{constructor(e,t,r){this.variableNames=["x"],this.outputShape=r;const s=r.length,i=Ee(r.length),o=Ee(r.length);let a="";if(s===1)a="coords * strides + begin";else{let u=0;a=r.map((l,c)=>(u++,r.length===1?`coords * strides[${c}] + begin[${c}]`:`coords[${u-1}] * strides[${c}] + begin[${c}]`)).join(",")}this.userCode=`
      ${i} begin = ${i}(${e});
      ${i} strides = ${i}(${t});

      void main() {
        ${o} coords = getOutputCoords();
        setOutput(getX(${a}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JM(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{begin:i,end:o,strides:a,beginMask:u,endMask:l,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:d}=r,{finalShapeSparse:p,finalShape:m,isIdentity:y,sliceDim0:g,isSimpleSlice:x,begin:$,end:C,strides:S}=Qg(s.shape,i,o,a,u,l,c,h,d);let I;if(y)I=Z({inputs:{x:s},backend:t,attrs:{shape:m}});else if(g||x){N(s.shape.length>=1,()=>`Input must have rank at least 1, got: ${s.shape.length}`);const L=Ug($,C,S),P=ms({inputs:{x:s},backend:t,attrs:{begin:$,size:L}});I=Z({inputs:{x:P},backend:t,attrs:{shape:m}}),t.disposeIntermediateTensorInfo(P)}else if(t.shouldExecuteOnCPU([s])){const P=t.readSync(s.dataId),M=De(s.shape,s.dtype,P),U=NO(p,M,S,$);I=t.makeTensorInfo(m,s.dtype,U.values)}else{const P=new ZM($,S,p);I=t.runWebGLProgram(P,[s],s.dtype)}const A=Z({inputs:{x:I},backend:t,attrs:{shape:m}});return t.disposeIntermediateTensorInfo(I),A}const eV={kernelName:dh,backendName:"webgl",kernelFunc:JM};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tV(n){const{inputs:e,backend:t,attrs:r}=n,{separator:s,nGramWidths:i,leftPad:o,rightPad:a,padWidth:u,preserveShortSequences:l}=r,{data:c,dataSplits:h}=e,d=t.readSync(c.dataId),p=t.readSync(h.dataId),[m,y]=IO(d,p,s,i,o,a,u,l);return[t.makeTensorInfo([m.length],"string",m),t.makeTensorInfo(h.shape,"int32",y)]}const nV={kernelName:ph,backendName:"webgl",kernelFunc:tV};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rV(n){const{inputs:e,backend:t,attrs:r}=n,{skipEmpty:s}=r,{input:i,delimiter:o}=e;if(i.dtype!=="string")throw new Error("Input must be of datatype string");if(i.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${i.shape}`);if(o.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${o.shape}`);const a=t.readSync(i.dataId),u=t.readSync(o.dataId)[0],[l,c,h]=kO(a,u,s),d=c.length;return[t.makeTensorInfo([d,2],"int32",l),t.makeTensorInfo([d],"string",c),t.makeTensorInfo([2],"int32",new Int32Array(h))]}const sV={kernelName:fh,backendName:"webgl",kernelFunc:rV};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iV(n){const{inputs:e,backend:t,attrs:r}=n,{numBuckets:s}=r,{input:i}=e;if(i.dtype!=="string")throw new Error("Input must be of datatype string");if(s<=0)throw new Error("Number of buckets must be at least 1");const o=t.readSync(i.dataId),a=_O(o,s);return t.makeTensorInfo(i.shape,"int32",a)}const oV={kernelName:mh,backendName:"webgl",kernelFunc:iV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aV="return tan(x);",uV=me({opSnippet:aV}),lV={kernelName:yh,backendName:"webgl",kernelFunc:uV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cV=`
  float e2x = exp(-2.0 * abs(x));
  return sign(x) * (1.0 - e2x) / (1.0 + e2x);
`,hV=me({opSnippet:cV}),dV={kernelName:xh,backendName:"webgl",kernelFunc:hV};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class pV{constructor(e,t){this.variableNames=["A"];const r=new Array(e.length);for(let o=0;o<r.length;o++)r[o]=e[o]*t[o];this.outputShape=r,this.rank=r.length;const s=Ee(this.rank),i=fV(e);this.userCode=`
      void main() {
        ${s} resRC = getOutputCoords();
        setOutput(getA(${i}));
      }
    `}}function fV(n){const e=n.length;if(e>5)throw Error(`Tile for rank ${e} is not yet supported`);if(e===1)return`imod(resRC, ${n[0]})`;const t=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let s=0;s<n.length;s++)r.push(`imod(${t[s]}, ${n[s]})`);return r.join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bb(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{reps:i}=r;if(s.dtype==="string"||s.shape.length>5){const u=t.readSync(s.dataId),l=s.dtype==="string"?u.map(d=>vr(d)):u,c=De(s.shape,s.dtype,l),h=AO(c,i);return t.makeTensorInfo(h.shape,h.dtype,h.values)}const o=new pV(s.shape,i);return t.runWebGLProgram(o,[s],s.dtype)}const mV={kernelName:ko,backendName:"webgl",kernelFunc:bb};class gV{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode=`
       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // We compare elements pair-wise within a group of size 2 * inc.
         // The comparing rule for each group alternates between ascending
         // and descending. Within each group, we compare each pair at
         // positions i and i+inc. To decide whether an element at position i
         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
         // inc, it is in the first half of the group, we denote it as x0,
         // otherwise we denote it as x1.
         // For example, as shown in the Bitonic top K paper referenced above,
         // Figure5(a) shows that element[1] is in the
         // second half of the group when group size is 2, but it is in the
         // first half of the group when group size is 4.

         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;
         int i = isFirstInPair ? elemIdx : elemIdx - inc;

         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));
         float x0 = i0 < n ? getX(batch, i0) : negativeInf;
         float x1 = i1 < n ? getX(batch, i1) : negativeInf;

         // Denotes which direction indices are in (ascending or descending).
         bool reverse = imod(elemIdx, 2 * dir) >= dir;
         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
         if (reverse == isGreater) { // Elements in opposite order of direction
           int iTemp = i0;
           i0 = i1;
           i1 = iTemp;
         }
         if (isFirstInPair) {
            setOutput(float(i0));
         } else {
            setOutput(float(i1));
         }
       }
     `}}class yV{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode=`
    void main() {
         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // The output size is half of the previous size.
         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),
         // we only need to output the indices at positions |, the indices at
         // positions _ can be thrown away, see Figure5(b) After Phase 2
         // (Merge phase) in the Bitonic Top K paper referenced above.
         // For example, the paper shows we only need to output the orange bars.
         // The output sequence should look like this | | | | | | | |.
         // Because the sequence is halved, to map the output index back
         // to the previous sequence to find the corresponding value,
         // we need to double the index. When we double the index,
         // we basically interpolate a position, so 2i looks like
         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position
         // of each 2k positions by - elemIdx % k. E.g. for output at
         // index 4,5,6,7, we want to get the corresponding element at
         // original index 8,9,10,11, for output at index 8,9,10,11,
         // we want to get the corresponding element at original index
         // 16,17,18,19, so on and so forth.

         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));
         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));

         float x0 = getX(batch, i0);
         float x1 = i1 < n ? getX(batch, i1) : x0;

         setOutput(x0 >= x1 ? float(i0) : float(i1));
       }
     `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ur(n,e){e!==null&&n.disposeIntermediateTensorInfo(e)}function xm(n){let e=1;for(;e<n;)e*=2;return e}function xV(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{k:i,sorted:o}=r,a=B().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),u=B().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),l=s.shape,c=l[l.length-1];if(t.shouldExecuteOnCPU([s])||c<a||i>u){const U=t.readSync(s.dataId),[V,j]=OO(U,l,s.dtype,i,o);return[t.makeTensorInfo(V.shape,V.dtype,V.values),t.makeTensorInfo(j.shape,j.dtype,j.values)]}if(i===0)return l[l.length-1]=0,[t.makeTensorInfo(l,s.dtype,[]),t.makeTensorInfo(l,"int32",[])];if(c===1)return[s,xi({attrs:{shape:l,dtype:"int32",value:0},backend:t})];const h=t.texData.get(s.dataId),d=h!==null&&h.isPacked,p=d?t.unpackTensor(s):s,y=q(l)/c,g=Z({inputs:{x:p},attrs:{shape:[y,c]},backend:t});d&&ur(t,p);const x=xm(i),$=xm(c);let C=null;const S=()=>C===null?[g,g]:[g,C],I=(U,V,j)=>{const K=S(),H=new gV(j),le=[[c],[C===null?1:0],[Number.NEGATIVE_INFINITY],[U],[V]],pe=C;C=t.runWebGLProgram(H,K,"int32",le),ur(t,pe)};for(let U=1;U<x;U*=2){const V=U*2;for(let j=U;j>=1;j/=2)I(V,j,[y,$])}for(let U=$;U>x;U/=2){const V=S(),j=new yV([y,U/2]),H=[[c],[C===null?1:0],[x]],ne=C;C=t.runWebGLProgram(j,V,"int32",H),ur(t,ne);const le=x/2,pe=le*2;for(let de=le;de>=1;de/=2)I(pe,de,C.shape)}let A=C;C=ms({inputs:{x:C},backend:t,attrs:{begin:0,size:[y,i]}}),ur(t,A);let L=cb({inputs:{x:g,indices:C},backend:t,attrs:{axis:1,batchDims:1}});ur(t,g);const P=l.slice(0,-1);P.push(i),A=C,C=Z({inputs:{x:C},attrs:{shape:P},backend:t}),ur(t,A);const M=L;return L=Z({inputs:{x:L},attrs:{shape:P},backend:t}),ur(t,M),[L,C]}const bV={kernelName:bh,backendName:"webgl",kernelFunc:xV};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class wV{constructor(e,t,r,s,i,o){this.variableNames=["Image","Transforms"],this.outputShape=o;const a=r==="nearest"?1:2;let u;switch(s){case"constant":u=1;break;case"reflect":u=2;break;case"wrap":u=3;break;case"nearest":u=4;break;default:u=1;break}this.userCode=`
            float mapCoord(float outCoord, float len) {
              float inCoord = outCoord;
              if(${u} == 2) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    if (inCoord < sz2) {
                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +
                      inCoord;
                    }
                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    inCoord -= sz2 * float(int(float(inCoord / sz2)));
                    if (inCoord >= len) {
                      inCoord = sz2 - inCoord - 1.0;
                    }
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${u} == 3) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord -= len * float(int(float(inCoord / sz)));
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${u} == 4) {
                return clamp(outCoord, 0.0, len - 1.0);
              } else {
                return outCoord;
              }
            }

            float readWithFillValue(int batch, int coordY, int coordX,
              int channel) {
              float outputValue;
              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {
                  outputValue = getImage(batch, coordY, coordX, channel);
              } else {
                outputValue = float(${i});
              }
              return outputValue;
            }

            void main() {
              ivec4 coords = getOutputCoords();
              float outputValue;
              int batch = coords[0];
              int x = coords[2];
              int y = coords[1];
              int channel = coords[3];
              float xf = float(x);
              float yf = float(y);
              float a1 = getTransforms(batch, 0);
              float a2 = getTransforms(batch, 1);
              float a3 = getTransforms(batch, 2);
              float b1 = getTransforms(batch, 3);
              float b2 = getTransforms(batch, 4);
              float b3 = getTransforms(batch, 5);
              float c1 = getTransforms(batch, 6);
              float c2 = getTransforms(batch, 7);
              float projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = float(${i});
              } else {
                float inX = (a1 * xf + a2 * yf + a3) / projection;
                float inY = (b1 * xf + b2 * yf + b3) / projection;
                float mapX = mapCoord(inX, float(${t}));
                float mapY = mapCoord(inY, float(${e}));

                if (${a} == 1) {
                  int coordY = int(round(mapY));
                  int coordX = int(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  float yFloor = floor(mapY);
                  float xFloor = floor(mapX);
                  float yCeil = yFloor + 1.0;
                  float xCeil = xFloor + 1.0;
                  float valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);
                  float valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutput(outputValue);
            }
        `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vV(n){const{inputs:e,backend:t,attrs:r}=n,{image:s,transforms:i}=e,{interpolation:o,fillMode:a,fillValue:u,outputShape:l}=r,[c,h,d,p]=s.shape,[m,y]=l!=null?l:[h,d],g=[c,m,y,p],x=new wV(h,d,o,a,u,g);return t.runWebGLProgram(x,[s,i],"float32")}const $V={kernelName:wh,backendName:"webgl",kernelFunc:vV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SV(n){const{inputs:e,attrs:t,backend:r}=n,{axis:s}=t,{x:i}=e;pi(i,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const o=r.readSync(i.dataId),{outputValues:a,outputShape:u,indices:l}=DO(o,s,i.shape,i.dtype);return[r.makeTensorInfo(u,i.dtype,a),r.makeTensorInfo([l.length],"int32",l)]}const TV={kernelName:vh,backendName:"webgl",kernelFunc:SV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CV(n){const{inputs:e,backend:t,attrs:r}=n,{value:s}=e;let{axis:i}=r;i<0&&(i+=s.shape.length);const o=s,a=o.shape.length,u=s.shape[i],l=new Array(a-1);let c=0;for(let y=0;y<a;y++)y!==i&&(l[c++]=o.shape[y]);const h=[],d=new Array(a).fill(0),p=o.shape.slice();p[i]=1;const m=new Array(u);for(let y=0;y<m.length;y++){d[i]=y;const g=ms({inputs:{x:o},backend:t,attrs:{begin:d,size:p}}),x=Z({inputs:{x:g},backend:t,attrs:{shape:l}});m[y]=x,h.push(g)}return h.forEach(y=>t.disposeIntermediateTensorInfo(y)),m}const EV={kernelName:$h,backendName:"webgl",kernelFunc:CV};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class NV{constructor(e,t){this.variableNames=["x","segmentIds"];const r=e.windowSize,s=e.batchSize,i=e.inSize,o=e.numSegments,a=o*Math.ceil(i/r);this.outputShape=[s,a];const u="0.0",l="sumValue",c=Math.floor(r/4)*4,h=r%4,d=`
        sumValue += dot(values, segFilter);
    `;let p="";i%r>0&&(p=`
        if (inIdx < 0 || inIdx >= ${i}) {
          return initializationValue;
        }
      `);let m="";i%r>0&&(m=`
        if (inIdx < 0 || inIdx >= ${i}) {
          return -1.0;
        }
      `),this.userCode=`
      const float initializationValue = ${u};

      float getValue(int batch, int inIdx) {
        ${p}
        return getX(batch, inIdx);
      }

      float getSegmentIdAtIndex(int inIdx) {
        ${m}
        return getSegmentIds(inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = int(floor(float(outIdx) / float(
          ${o})) * float(${r}));
        int currentSeg = int(mod(float(outIdx), float(${o})));

        float sumValue = 0.0;

        for (int i = 0; i < ${c}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0
          );

          ${d}
        }

        int inIdx = inOffset + ${c};
        if (${h===1}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            0,
            0,
            0
          );

          ${d}
        } else if (${h===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
              0,
              0
          );

          ${d}
        } else if (${h===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            0
          );

          ${d}
        }
        setOutput(${l});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IV(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,segmentIds:i}=e,{numSegments:o}=r,a=s.shape.length,u=[];let l=0;const c=qt([l],a);let h=s;c!=null&&(h=lt({inputs:{x:s},backend:t,attrs:{perm:c}}),u.push(h),l=Kt(1,a)[0]);const d=n1(h.shape,l,o),p=q([h.shape[l]]),m=Z({inputs:{x:h},backend:t,attrs:{shape:[-1,p]}});u.push(m);const y=_o(s.dtype),g=(S,I,A,L,P)=>{const M=S.shape[0],U=S.shape[1],V=t1(U,P),j={windowSize:V,inSize:U,batchSize:M,numSegments:P},K=new NV(j,I),H=t.compileAndRun(K,[S,A],L);if(u.push(H),H.shape[1]===P)return H;const ne=yb({backend:t,attrs:{start:0,stop:P,step:1,dtype:"float32"}}),le=bb({inputs:{x:ne},backend:t,attrs:{reps:[U/V]}});return u.push(ne),u.push(le),g(H,I,le,L,P)},x=g(m,"unsortedSegmentSum",i,y,o),$=Z({inputs:{x},backend:t,attrs:{shape:d}});let C=$;if(c!=null){u.push($);const S=sd(c);C=lt({inputs:{x:C},backend:t,attrs:{perm:S}})}return u.forEach(S=>t.disposeIntermediateTensorInfo(S)),C}const kV={kernelName:Sh,backendName:"webgl",kernelFunc:IV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _V=[CD,ND,_D,OD,FD,BD,VD,zD,jD,KD,QD,eF,rF,aF,cF,dF,fF,xF,wF,$F,EF,OF,FF,LF,WF,HF,XF,uD,ZF,rP,aP,pP,mP,yP,bP,vP,TP,NP,_P,AP,DP,PP,MP,UP,HP,qP,YP,JP,t3,i3,l3,p3,g3,b3,w3,$3,T3,E3,I3,_3,D3,L3,V3,z3,H3,K3,Z3,nL,aD,sL,tP,aL,cL,pL,cD,yL,vL,SL,NL,_L,DL,LL,UL,HL,KL,YL,eB,nB,sB,uB,cB,dB,fB,gB,wB,TB,IB,PB,pD,VB,WB,jB,XB,MF,ZB,e4,n4,i4,l4,dD,h4,p4,m4,y4,x4,VF,AB,v4,C4,k4,mD,O4,P4,V4,W4,q4,X4,Z4,tM,rM,oM,lM,dM,gM,bM,$M,CM,RF,DB,IM,_M,AM,DM,PM,BM,VM,zM,GM,qM,XM,QM,eV,nV,sV,oV,OB,$D,lV,dV,mV,bV,$V,SD,TV,EV,kV,JB];for(const n of _V)Nh(n);var So,wb;class RV{constructor(){Kp(this,So);this.segmenter=null}async segmentPeople(e){return await this.segmenter.segmentPeople(e)}async getPeopleMask(e,t){const r=await this.segmentPeople(e);return await Jk(r,{r:0,g:0,b:0,a:0},{r:255,g:255,b:255,a:255},!1,.3)}async init(){this.segmenter=await Xp(this,So,wb).call(this)}}So=new WeakSet,wb=async function(){const e=Ks.MediaPipeSelfieSegmentation;return await Yk(e,{runtime:"tfjs",modelType:"general"})};function bm(n){let e=n[0],t=n[1],r=n[2];return Math.sqrt(e*e+t*t+r*r)}function Du(n,e){return n[0]=e[0],n[1]=e[1],n[2]=e[2],n}function AV(n,e,t,r){return n[0]=e,n[1]=t,n[2]=r,n}function wm(n,e,t){return n[0]=e[0]+t[0],n[1]=e[1]+t[1],n[2]=e[2]+t[2],n}function vm(n,e,t){return n[0]=e[0]-t[0],n[1]=e[1]-t[1],n[2]=e[2]-t[2],n}function OV(n,e,t){return n[0]=e[0]*t[0],n[1]=e[1]*t[1],n[2]=e[2]*t[2],n}function DV(n,e,t){return n[0]=e[0]/t[0],n[1]=e[1]/t[1],n[2]=e[2]/t[2],n}function ja(n,e,t){return n[0]=e[0]*t,n[1]=e[1]*t,n[2]=e[2]*t,n}function FV(n,e){let t=e[0]-n[0],r=e[1]-n[1],s=e[2]-n[2];return Math.sqrt(t*t+r*r+s*s)}function PV(n,e){let t=e[0]-n[0],r=e[1]-n[1],s=e[2]-n[2];return t*t+r*r+s*s}function $m(n){let e=n[0],t=n[1],r=n[2];return e*e+t*t+r*r}function LV(n,e){return n[0]=-e[0],n[1]=-e[1],n[2]=-e[2],n}function BV(n,e){return n[0]=1/e[0],n[1]=1/e[1],n[2]=1/e[2],n}function Fu(n,e){let t=e[0],r=e[1],s=e[2],i=t*t+r*r+s*s;return i>0&&(i=1/Math.sqrt(i)),n[0]=e[0]*i,n[1]=e[1]*i,n[2]=e[2]*i,n}function vb(n,e){return n[0]*e[0]+n[1]*e[1]+n[2]*e[2]}function Sm(n,e,t){let r=e[0],s=e[1],i=e[2],o=t[0],a=t[1],u=t[2];return n[0]=s*u-i*a,n[1]=i*o-r*u,n[2]=r*a-s*o,n}function MV(n,e,t,r){let s=e[0],i=e[1],o=e[2];return n[0]=s+r*(t[0]-s),n[1]=i+r*(t[1]-i),n[2]=o+r*(t[2]-o),n}function VV(n,e,t){let r=e[0],s=e[1],i=e[2],o=t[3]*r+t[7]*s+t[11]*i+t[15];return o=o||1,n[0]=(t[0]*r+t[4]*s+t[8]*i+t[12])/o,n[1]=(t[1]*r+t[5]*s+t[9]*i+t[13])/o,n[2]=(t[2]*r+t[6]*s+t[10]*i+t[14])/o,n}function UV(n,e,t){let r=e[0],s=e[1],i=e[2],o=t[3]*r+t[7]*s+t[11]*i+t[15];return o=o||1,n[0]=(t[0]*r+t[4]*s+t[8]*i)/o,n[1]=(t[1]*r+t[5]*s+t[9]*i)/o,n[2]=(t[2]*r+t[6]*s+t[10]*i)/o,n}function zV(n,e,t){let r=e[0],s=e[1],i=e[2];return n[0]=r*t[0]+s*t[3]+i*t[6],n[1]=r*t[1]+s*t[4]+i*t[7],n[2]=r*t[2]+s*t[5]+i*t[8],n}function WV(n,e,t){let r=e[0],s=e[1],i=e[2],o=t[0],a=t[1],u=t[2],l=t[3],c=a*i-u*s,h=u*r-o*i,d=o*s-a*r,p=a*d-u*h,m=u*c-o*d,y=o*h-a*c,g=l*2;return c*=g,h*=g,d*=g,p*=2,m*=2,y*=2,n[0]=r+c+p,n[1]=s+h+m,n[2]=i+d+y,n}const GV=function(){const n=[0,0,0],e=[0,0,0];return function(t,r){Du(n,t),Du(e,r),Fu(n,n),Fu(e,e);let s=vb(n,e);return s>1?0:s<-1?Math.PI:Math.acos(s)}}();function HV(n,e){return n[0]===e[0]&&n[1]===e[1]&&n[2]===e[2]}class rn extends Array{constructor(e=0,t=e,r=e){return super(e,t,r),this}get x(){return this[0]}get y(){return this[1]}get z(){return this[2]}set x(e){this[0]=e}set y(e){this[1]=e}set z(e){this[2]=e}set(e,t=e,r=e){return e.length?this.copy(e):(AV(this,e,t,r),this)}copy(e){return Du(this,e),this}add(e,t){return t?wm(this,e,t):wm(this,this,e),this}sub(e,t){return t?vm(this,e,t):vm(this,this,e),this}multiply(e){return e.length?OV(this,this,e):ja(this,this,e),this}divide(e){return e.length?DV(this,this,e):ja(this,this,1/e),this}inverse(e=this){return BV(this,e),this}len(){return bm(this)}distance(e){return e?FV(this,e):bm(this)}squaredLen(){return $m(this)}squaredDistance(e){return e?PV(this,e):$m(this)}negate(e=this){return LV(this,e),this}cross(e,t){return t?Sm(this,e,t):Sm(this,this,e),this}scale(e){return ja(this,this,e),this}normalize(){return Fu(this,this),this}dot(e){return vb(this,e)}equals(e){return HV(this,e)}applyMatrix3(e){return zV(this,this,e),this}applyMatrix4(e){return VV(this,this,e),this}scaleRotateMatrix4(e){return UV(this,this,e),this}applyQuaternion(e){return WV(this,this,e),this}angle(e){return GV(this,e)}lerp(e,t){return MV(this,this,e,t),this}clone(){return new rn(this[0],this[1],this[2])}fromArray(e,t=0){return this[0]=e[t],this[1]=e[t+1],this[2]=e[t+2],this}toArray(e=[],t=0){return e[t]=this[0],e[t+1]=this[1],e[t+2]=this[2],e}transformDirection(e){const t=this[0],r=this[1],s=this[2];return this[0]=e[0]*t+e[4]*r+e[8]*s,this[1]=e[1]*t+e[5]*r+e[9]*s,this[2]=e[2]*t+e[6]*r+e[10]*s,this.normalize()}}const Tm=new rn;let jV=1,qV=1,Cm=!1;class KV{constructor(e,t={}){e.canvas||console.error("gl not passed as first argument to Geometry"),this.gl=e,this.attributes=t,this.id=jV++,this.VAOs={},this.drawRange={start:0,count:0},this.instancedCount=0,this.gl.renderer.bindVertexArray(null),this.gl.renderer.currentGeometry=null,this.glState=this.gl.renderer.state;for(let r in t)this.addAttribute(r,t[r])}addAttribute(e,t){if(this.attributes[e]=t,t.id=qV++,t.size=t.size||1,t.type=t.type||(t.data.constructor===Float32Array?this.gl.FLOAT:t.data.constructor===Uint16Array?this.gl.UNSIGNED_SHORT:this.gl.UNSIGNED_INT),t.target=e==="index"?this.gl.ELEMENT_ARRAY_BUFFER:this.gl.ARRAY_BUFFER,t.normalized=t.normalized||!1,t.stride=t.stride||0,t.offset=t.offset||0,t.count=t.count||(t.stride?t.data.byteLength/t.stride:t.data.length/t.size),t.divisor=t.instanced||0,t.needsUpdate=!1,t.usage=t.usage||this.gl.STATIC_DRAW,t.buffer||this.updateAttribute(t),t.divisor){if(this.isInstanced=!0,this.instancedCount&&this.instancedCount!==t.count*t.divisor)return console.warn("geometry has multiple instanced buffers of different length"),this.instancedCount=Math.min(this.instancedCount,t.count*t.divisor);this.instancedCount=t.count*t.divisor}else e==="index"?this.drawRange.count=t.count:this.attributes.index||(this.drawRange.count=Math.max(this.drawRange.count,t.count))}updateAttribute(e){const t=!e.buffer;t&&(e.buffer=this.gl.createBuffer()),this.glState.boundBuffer!==e.buffer&&(this.gl.bindBuffer(e.target,e.buffer),this.glState.boundBuffer=e.buffer),t?this.gl.bufferData(e.target,e.data,e.usage):this.gl.bufferSubData(e.target,0,e.data),e.needsUpdate=!1}setIndex(e){this.addAttribute("index",e)}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}setInstancedCount(e){this.instancedCount=e}createVAO(e){this.VAOs[e.attributeOrder]=this.gl.renderer.createVertexArray(),this.gl.renderer.bindVertexArray(this.VAOs[e.attributeOrder]),this.bindAttributes(e)}bindAttributes(e){e.attributeLocations.forEach((t,{name:r,type:s})=>{if(!this.attributes[r]){console.warn(`active attribute ${r} not being supplied`);return}const i=this.attributes[r];this.gl.bindBuffer(i.target,i.buffer),this.glState.boundBuffer=i.buffer;let o=1;s===35674&&(o=2),s===35675&&(o=3),s===35676&&(o=4);const a=i.size/o,u=o===1?0:o*o*o,l=o===1?0:o*o;for(let c=0;c<o;c++)this.gl.vertexAttribPointer(t+c,a,i.type,i.normalized,i.stride+u,i.offset+c*l),this.gl.enableVertexAttribArray(t+c),this.gl.renderer.vertexAttribDivisor(t+c,i.divisor)}),this.attributes.index&&this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER,this.attributes.index.buffer)}draw({program:e,mode:t=this.gl.TRIANGLES}){this.gl.renderer.currentGeometry!==`${this.id}_${e.attributeOrder}`&&(this.VAOs[e.attributeOrder]||this.createVAO(e),this.gl.renderer.bindVertexArray(this.VAOs[e.attributeOrder]),this.gl.renderer.currentGeometry=`${this.id}_${e.attributeOrder}`),e.attributeLocations.forEach((r,{name:s})=>{const i=this.attributes[s];i.needsUpdate&&this.updateAttribute(i)}),this.isInstanced?this.attributes.index?this.gl.renderer.drawElementsInstanced(t,this.drawRange.count,this.attributes.index.type,this.attributes.index.offset+this.drawRange.start*2,this.instancedCount):this.gl.renderer.drawArraysInstanced(t,this.drawRange.start,this.drawRange.count,this.instancedCount):this.attributes.index?this.gl.drawElements(t,this.drawRange.count,this.attributes.index.type,this.attributes.index.offset+this.drawRange.start*2):this.gl.drawArrays(t,this.drawRange.start,this.drawRange.count)}getPosition(){const e=this.attributes.position;if(e.data)return e;if(!Cm)return console.warn("No position buffer data found to compute bounds"),Cm=!0}computeBoundingBox(e){e||(e=this.getPosition());const t=e.data,r=e.stride?e.stride/t.BYTES_PER_ELEMENT:e.size;this.bounds||(this.bounds={min:new rn,max:new rn,center:new rn,scale:new rn,radius:1/0});const s=this.bounds.min,i=this.bounds.max,o=this.bounds.center,a=this.bounds.scale;s.set(1/0),i.set(-1/0);for(let u=0,l=t.length;u<l;u+=r){const c=t[u],h=t[u+1],d=t[u+2];s.x=Math.min(c,s.x),s.y=Math.min(h,s.y),s.z=Math.min(d,s.z),i.x=Math.max(c,i.x),i.y=Math.max(h,i.y),i.z=Math.max(d,i.z)}a.sub(i,s),o.add(s,i).divide(2)}computeBoundingSphere(e){e||(e=this.getPosition());const t=e.data,r=e.stride?e.stride/t.BYTES_PER_ELEMENT:e.size;this.bounds||this.computeBoundingBox(e);let s=0;for(let i=0,o=t.length;i<o;i+=r)Tm.fromArray(t,i),s=Math.max(s,this.bounds.center.squaredDistance(Tm));this.bounds.radius=Math.sqrt(s)}remove(){for(let e in this.VAOs)this.gl.renderer.deleteVertexArray(this.VAOs[e]),delete this.VAOs[e];for(let e in this.attributes)this.gl.deleteBuffer(this.attributes[e].buffer),delete this.attributes[e]}}let XV=1;const Em={};class YV{constructor(e,{vertex:t,fragment:r,uniforms:s={},transparent:i=!1,cullFace:o=e.BACK,frontFace:a=e.CCW,depthTest:u=!0,depthWrite:l=!0,depthFunc:c=e.LESS}={}){e.canvas||console.error("gl not passed as first argument to Program"),this.gl=e,this.uniforms=s,this.id=XV++,t||console.warn("vertex shader not supplied"),r||console.warn("fragment shader not supplied"),this.transparent=i,this.cullFace=o,this.frontFace=a,this.depthTest=u,this.depthWrite=l,this.depthFunc=c,this.blendFunc={},this.blendEquation={},this.transparent&&!this.blendFunc.src&&(this.gl.renderer.premultipliedAlpha?this.setBlendFunc(this.gl.ONE,this.gl.ONE_MINUS_SRC_ALPHA):this.setBlendFunc(this.gl.SRC_ALPHA,this.gl.ONE_MINUS_SRC_ALPHA));const h=e.createShader(e.VERTEX_SHADER);e.shaderSource(h,t),e.compileShader(h),e.getShaderInfoLog(h)!==""&&console.warn(`${e.getShaderInfoLog(h)}
Vertex Shader
${Nm(t)}`);const d=e.createShader(e.FRAGMENT_SHADER);if(e.shaderSource(d,r),e.compileShader(d),e.getShaderInfoLog(d)!==""&&console.warn(`${e.getShaderInfoLog(d)}
Fragment Shader
${Nm(r)}`),this.program=e.createProgram(),e.attachShader(this.program,h),e.attachShader(this.program,d),e.linkProgram(this.program),!e.getProgramParameter(this.program,e.LINK_STATUS))return console.warn(e.getProgramInfoLog(this.program));e.deleteShader(h),e.deleteShader(d),this.uniformLocations=new Map;let p=e.getProgramParameter(this.program,e.ACTIVE_UNIFORMS);for(let g=0;g<p;g++){let x=e.getActiveUniform(this.program,g);this.uniformLocations.set(x,e.getUniformLocation(this.program,x.name));const $=x.name.match(/(\w+)/g);x.uniformName=$[0],$.length===3?(x.isStructArray=!0,x.structIndex=Number($[1]),x.structProperty=$[2]):$.length===2&&isNaN(Number($[1]))&&(x.isStruct=!0,x.structProperty=$[1])}this.attributeLocations=new Map;const m=[],y=e.getProgramParameter(this.program,e.ACTIVE_ATTRIBUTES);for(let g=0;g<y;g++){const x=e.getActiveAttrib(this.program,g),$=e.getAttribLocation(this.program,x.name);$!==-1&&(m[$]=x.name,this.attributeLocations.set(x,$))}this.attributeOrder=m.join("")}setBlendFunc(e,t,r,s){this.blendFunc.src=e,this.blendFunc.dst=t,this.blendFunc.srcAlpha=r,this.blendFunc.dstAlpha=s,e&&(this.transparent=!0)}setBlendEquation(e,t){this.blendEquation.modeRGB=e,this.blendEquation.modeAlpha=t}applyState(){this.depthTest?this.gl.renderer.enable(this.gl.DEPTH_TEST):this.gl.renderer.disable(this.gl.DEPTH_TEST),this.cullFace?this.gl.renderer.enable(this.gl.CULL_FACE):this.gl.renderer.disable(this.gl.CULL_FACE),this.blendFunc.src?this.gl.renderer.enable(this.gl.BLEND):this.gl.renderer.disable(this.gl.BLEND),this.cullFace&&this.gl.renderer.setCullFace(this.cullFace),this.gl.renderer.setFrontFace(this.frontFace),this.gl.renderer.setDepthMask(this.depthWrite),this.gl.renderer.setDepthFunc(this.depthFunc),this.blendFunc.src&&this.gl.renderer.setBlendFunc(this.blendFunc.src,this.blendFunc.dst,this.blendFunc.srcAlpha,this.blendFunc.dstAlpha),this.gl.renderer.setBlendEquation(this.blendEquation.modeRGB,this.blendEquation.modeAlpha)}use({flipFaces:e=!1}={}){let t=-1;this.gl.renderer.state.currentProgram===this.id||(this.gl.useProgram(this.program),this.gl.renderer.state.currentProgram=this.id),this.uniformLocations.forEach((s,i)=>{let o=i.uniformName,a=this.uniforms[o];if(i.isStruct&&(a=a[i.structProperty],o+=`.${i.structProperty}`),i.isStructArray&&(a=a[i.structIndex][i.structProperty],o+=`[${i.structIndex}].${i.structProperty}`),!a)return Im(`Active uniform ${o} has not been supplied`);if(a&&a.value===void 0)return Im(`${o} uniform is missing a value parameter`);if(a.value.texture)return t=t+1,a.value.update(t),qa(this.gl,i.type,s,t);if(a.value.length&&a.value[0].texture){const u=[];return a.value.forEach(l=>{t=t+1,l.update(t),u.push(t)}),qa(this.gl,i.type,s,u)}qa(this.gl,i.type,s,a.value)}),this.applyState(),e&&this.gl.renderer.setFrontFace(this.frontFace===this.gl.CCW?this.gl.CW:this.gl.CCW)}remove(){this.gl.deleteProgram(this.program)}}function qa(n,e,t,r){r=r.length?QV(r):r;const s=n.renderer.state.uniformLocations.get(t);if(r.length)if(s===void 0||s.length!==r.length)n.renderer.state.uniformLocations.set(t,r.slice(0));else{if(ZV(s,r))return;s.set?s.set(r):JV(s,r),n.renderer.state.uniformLocations.set(t,s)}else{if(s===r)return;n.renderer.state.uniformLocations.set(t,r)}switch(e){case 5126:return r.length?n.uniform1fv(t,r):n.uniform1f(t,r);case 35664:return n.uniform2fv(t,r);case 35665:return n.uniform3fv(t,r);case 35666:return n.uniform4fv(t,r);case 35670:case 5124:case 35678:case 35680:return r.length?n.uniform1iv(t,r):n.uniform1i(t,r);case 35671:case 35667:return n.uniform2iv(t,r);case 35672:case 35668:return n.uniform3iv(t,r);case 35673:case 35669:return n.uniform4iv(t,r);case 35674:return n.uniformMatrix2fv(t,!1,r);case 35675:return n.uniformMatrix3fv(t,!1,r);case 35676:return n.uniformMatrix4fv(t,!1,r)}}function Nm(n){let e=n.split(`
`);for(let t=0;t<e.length;t++)e[t]=t+1+": "+e[t];return e.join(`
`)}function QV(n){const e=n.length,t=n[0].length;if(t===void 0)return n;const r=e*t;let s=Em[r];s||(Em[r]=s=new Float32Array(r));for(let i=0;i<e;i++)s.set(n[i],i*t);return s}function ZV(n,e){if(n.length!==e.length)return!1;for(let t=0,r=n.length;t<r;t++)if(n[t]!==e[t])return!1;return!0}function JV(n,e){for(let t=0,r=n.length;t<r;t++)n[t]=e[t]}let Ka=0;function Im(n){Ka>100||(console.warn(n),Ka++,Ka>100&&console.warn("More than 100 program warnings - stopping logs."))}const Xa=new rn;let eU=1;class tU{constructor({canvas:e=document.createElement("canvas"),width:t=300,height:r=150,dpr:s=1,alpha:i=!1,depth:o=!0,stencil:a=!1,antialias:u=!1,premultipliedAlpha:l=!1,preserveDrawingBuffer:c=!1,powerPreference:h="default",autoClear:d=!0,webgl:p=2}={}){const m={alpha:i,depth:o,stencil:a,antialias:u,premultipliedAlpha:l,preserveDrawingBuffer:c,powerPreference:h};this.dpr=s,this.alpha=i,this.color=!0,this.depth=o,this.stencil=a,this.premultipliedAlpha=l,this.autoClear=d,this.id=eU++,p===2&&(this.gl=e.getContext("webgl2",m)),this.isWebgl2=!!this.gl,this.gl||(this.gl=e.getContext("webgl",m)),this.gl||console.error("unable to create webgl context"),this.gl.renderer=this,this.setSize(t,r),this.state={},this.state.blendFunc={src:this.gl.ONE,dst:this.gl.ZERO},this.state.blendEquation={modeRGB:this.gl.FUNC_ADD},this.state.cullFace=null,this.state.frontFace=this.gl.CCW,this.state.depthMask=!0,this.state.depthFunc=this.gl.LESS,this.state.premultiplyAlpha=!1,this.state.flipY=!1,this.state.unpackAlignment=4,this.state.framebuffer=null,this.state.viewport={x:0,y:0,width:null,height:null},this.state.textureUnits=[],this.state.activeTextureUnit=0,this.state.boundBuffer=null,this.state.uniformLocations=new Map,this.state.currentProgram=null,this.extensions={},this.isWebgl2?(this.getExtension("EXT_color_buffer_float"),this.getExtension("OES_texture_float_linear")):(this.getExtension("OES_texture_float"),this.getExtension("OES_texture_float_linear"),this.getExtension("OES_texture_half_float"),this.getExtension("OES_texture_half_float_linear"),this.getExtension("OES_element_index_uint"),this.getExtension("OES_standard_derivatives"),this.getExtension("EXT_sRGB"),this.getExtension("WEBGL_depth_texture"),this.getExtension("WEBGL_draw_buffers")),this.getExtension("WEBGL_compressed_texture_astc"),this.getExtension("EXT_texture_compression_bptc"),this.getExtension("WEBGL_compressed_texture_s3tc"),this.getExtension("WEBGL_compressed_texture_etc1"),this.getExtension("WEBGL_compressed_texture_pvrtc"),this.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc"),this.vertexAttribDivisor=this.getExtension("ANGLE_instanced_arrays","vertexAttribDivisor","vertexAttribDivisorANGLE"),this.drawArraysInstanced=this.getExtension("ANGLE_instanced_arrays","drawArraysInstanced","drawArraysInstancedANGLE"),this.drawElementsInstanced=this.getExtension("ANGLE_instanced_arrays","drawElementsInstanced","drawElementsInstancedANGLE"),this.createVertexArray=this.getExtension("OES_vertex_array_object","createVertexArray","createVertexArrayOES"),this.bindVertexArray=this.getExtension("OES_vertex_array_object","bindVertexArray","bindVertexArrayOES"),this.deleteVertexArray=this.getExtension("OES_vertex_array_object","deleteVertexArray","deleteVertexArrayOES"),this.drawBuffers=this.getExtension("WEBGL_draw_buffers","drawBuffers","drawBuffersWEBGL"),this.parameters={},this.parameters.maxTextureUnits=this.gl.getParameter(this.gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS),this.parameters.maxAnisotropy=this.getExtension("EXT_texture_filter_anisotropic")?this.gl.getParameter(this.getExtension("EXT_texture_filter_anisotropic").MAX_TEXTURE_MAX_ANISOTROPY_EXT):0}setSize(e,t){this.width=e,this.height=t,this.gl.canvas.width=e*this.dpr,this.gl.canvas.height=t*this.dpr,Object.assign(this.gl.canvas.style,{width:e+"px",height:t+"px"})}setViewport(e,t,r=0,s=0){this.state.viewport.width===e&&this.state.viewport.height===t||(this.state.viewport.width=e,this.state.viewport.height=t,this.state.viewport.x=r,this.state.viewport.y=s,this.gl.viewport(r,s,e,t))}setScissor(e,t,r=0,s=0){this.gl.scissor(r,s,e,t)}enable(e){this.state[e]!==!0&&(this.gl.enable(e),this.state[e]=!0)}disable(e){this.state[e]!==!1&&(this.gl.disable(e),this.state[e]=!1)}setBlendFunc(e,t,r,s){this.state.blendFunc.src===e&&this.state.blendFunc.dst===t&&this.state.blendFunc.srcAlpha===r&&this.state.blendFunc.dstAlpha===s||(this.state.blendFunc.src=e,this.state.blendFunc.dst=t,this.state.blendFunc.srcAlpha=r,this.state.blendFunc.dstAlpha=s,r!==void 0?this.gl.blendFuncSeparate(e,t,r,s):this.gl.blendFunc(e,t))}setBlendEquation(e,t){e=e||this.gl.FUNC_ADD,!(this.state.blendEquation.modeRGB===e&&this.state.blendEquation.modeAlpha===t)&&(this.state.blendEquation.modeRGB=e,this.state.blendEquation.modeAlpha=t,t!==void 0?this.gl.blendEquationSeparate(e,t):this.gl.blendEquation(e))}setCullFace(e){this.state.cullFace!==e&&(this.state.cullFace=e,this.gl.cullFace(e))}setFrontFace(e){this.state.frontFace!==e&&(this.state.frontFace=e,this.gl.frontFace(e))}setDepthMask(e){this.state.depthMask!==e&&(this.state.depthMask=e,this.gl.depthMask(e))}setDepthFunc(e){this.state.depthFunc!==e&&(this.state.depthFunc=e,this.gl.depthFunc(e))}activeTexture(e){this.state.activeTextureUnit!==e&&(this.state.activeTextureUnit=e,this.gl.activeTexture(this.gl.TEXTURE0+e))}bindFramebuffer({target:e=this.gl.FRAMEBUFFER,buffer:t=null}={}){this.state.framebuffer!==t&&(this.state.framebuffer=t,this.gl.bindFramebuffer(e,t))}getExtension(e,t,r){return t&&this.gl[t]?this.gl[t].bind(this.gl):(this.extensions[e]||(this.extensions[e]=this.gl.getExtension(e)),t?this.extensions[e]?this.extensions[e][r].bind(this.extensions[e]):null:this.extensions[e])}sortOpaque(e,t){return e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.program.id!==t.program.id?e.program.id-t.program.id:e.zDepth!==t.zDepth?e.zDepth-t.zDepth:t.id-e.id}sortTransparent(e,t){return e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.zDepth!==t.zDepth?t.zDepth-e.zDepth:t.id-e.id}sortUI(e,t){return e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.program.id!==t.program.id?e.program.id-t.program.id:t.id-e.id}getRenderList({scene:e,camera:t,frustumCull:r,sort:s}){let i=[];if(t&&r&&t.updateFrustum(),e.traverse(o=>{if(!o.visible)return!0;!o.draw||r&&o.frustumCulled&&t&&!t.frustumIntersectsMesh(o)||i.push(o)}),s){const o=[],a=[],u=[];i.forEach(l=>{l.program.transparent?l.program.depthTest?a.push(l):u.push(l):o.push(l),l.zDepth=0,!(l.renderOrder!==0||!l.program.depthTest||!t)&&(l.worldMatrix.getTranslation(Xa),Xa.applyMatrix4(t.projectionViewMatrix),l.zDepth=Xa.z)}),o.sort(this.sortOpaque),a.sort(this.sortTransparent),u.sort(this.sortUI),i=o.concat(a,u)}return i}render({scene:e,camera:t,target:r=null,update:s=!0,sort:i=!0,frustumCull:o=!0,clear:a}){r===null?(this.bindFramebuffer(),this.setViewport(this.width*this.dpr,this.height*this.dpr)):(this.bindFramebuffer(r),this.setViewport(r.width,r.height)),(a||this.autoClear&&a!==!1)&&(this.depth&&(!r||r.depth)&&(this.enable(this.gl.DEPTH_TEST),this.setDepthMask(!0)),this.gl.clear((this.color?this.gl.COLOR_BUFFER_BIT:0)|(this.depth?this.gl.DEPTH_BUFFER_BIT:0)|(this.stencil?this.gl.STENCIL_BUFFER_BIT:0))),s&&e.updateMatrixWorld(),t&&t.updateMatrixWorld(),this.getRenderList({scene:e,camera:t,frustumCull:o,sort:i}).forEach(l=>{l.draw({camera:t})})}}function nU(n,e){return n[0]=e[0],n[1]=e[1],n[2]=e[2],n[3]=e[3],n}function rU(n,e,t,r,s){return n[0]=e,n[1]=t,n[2]=r,n[3]=s,n}function sU(n,e){let t=e[0],r=e[1],s=e[2],i=e[3],o=t*t+r*r+s*s+i*i;return o>0&&(o=1/Math.sqrt(o)),n[0]=t*o,n[1]=r*o,n[2]=s*o,n[3]=i*o,n}function iU(n,e){return n[0]*e[0]+n[1]*e[1]+n[2]*e[2]+n[3]*e[3]}function oU(n){return n[0]=0,n[1]=0,n[2]=0,n[3]=1,n}function aU(n,e,t){t=t*.5;let r=Math.sin(t);return n[0]=r*e[0],n[1]=r*e[1],n[2]=r*e[2],n[3]=Math.cos(t),n}function km(n,e,t){let r=e[0],s=e[1],i=e[2],o=e[3],a=t[0],u=t[1],l=t[2],c=t[3];return n[0]=r*c+o*a+s*l-i*u,n[1]=s*c+o*u+i*a-r*l,n[2]=i*c+o*l+r*u-s*a,n[3]=o*c-r*a-s*u-i*l,n}function uU(n,e,t){t*=.5;let r=e[0],s=e[1],i=e[2],o=e[3],a=Math.sin(t),u=Math.cos(t);return n[0]=r*u+o*a,n[1]=s*u+i*a,n[2]=i*u-s*a,n[3]=o*u-r*a,n}function lU(n,e,t){t*=.5;let r=e[0],s=e[1],i=e[2],o=e[3],a=Math.sin(t),u=Math.cos(t);return n[0]=r*u-i*a,n[1]=s*u+o*a,n[2]=i*u+r*a,n[3]=o*u-s*a,n}function cU(n,e,t){t*=.5;let r=e[0],s=e[1],i=e[2],o=e[3],a=Math.sin(t),u=Math.cos(t);return n[0]=r*u+s*a,n[1]=s*u-r*a,n[2]=i*u+o*a,n[3]=o*u-i*a,n}function hU(n,e,t,r){let s=e[0],i=e[1],o=e[2],a=e[3],u=t[0],l=t[1],c=t[2],h=t[3],d,p,m,y,g;return p=s*u+i*l+o*c+a*h,p<0&&(p=-p,u=-u,l=-l,c=-c,h=-h),1-p>1e-6?(d=Math.acos(p),m=Math.sin(d),y=Math.sin((1-r)*d)/m,g=Math.sin(r*d)/m):(y=1-r,g=r),n[0]=y*s+g*u,n[1]=y*i+g*l,n[2]=y*o+g*c,n[3]=y*a+g*h,n}function dU(n,e){let t=e[0],r=e[1],s=e[2],i=e[3],o=t*t+r*r+s*s+i*i,a=o?1/o:0;return n[0]=-t*a,n[1]=-r*a,n[2]=-s*a,n[3]=i*a,n}function pU(n,e){return n[0]=-e[0],n[1]=-e[1],n[2]=-e[2],n[3]=e[3],n}function fU(n,e){let t=e[0]+e[4]+e[8],r;if(t>0)r=Math.sqrt(t+1),n[3]=.5*r,r=.5/r,n[0]=(e[5]-e[7])*r,n[1]=(e[6]-e[2])*r,n[2]=(e[1]-e[3])*r;else{let s=0;e[4]>e[0]&&(s=1),e[8]>e[s*3+s]&&(s=2);let i=(s+1)%3,o=(s+2)%3;r=Math.sqrt(e[s*3+s]-e[i*3+i]-e[o*3+o]+1),n[s]=.5*r,r=.5/r,n[3]=(e[i*3+o]-e[o*3+i])*r,n[i]=(e[i*3+s]+e[s*3+i])*r,n[o]=(e[o*3+s]+e[s*3+o])*r}return n}function mU(n,e,t="YXZ"){let r=Math.sin(e[0]*.5),s=Math.cos(e[0]*.5),i=Math.sin(e[1]*.5),o=Math.cos(e[1]*.5),a=Math.sin(e[2]*.5),u=Math.cos(e[2]*.5);return t==="XYZ"?(n[0]=r*o*u+s*i*a,n[1]=s*i*u-r*o*a,n[2]=s*o*a+r*i*u,n[3]=s*o*u-r*i*a):t==="YXZ"?(n[0]=r*o*u+s*i*a,n[1]=s*i*u-r*o*a,n[2]=s*o*a-r*i*u,n[3]=s*o*u+r*i*a):t==="ZXY"?(n[0]=r*o*u-s*i*a,n[1]=s*i*u+r*o*a,n[2]=s*o*a+r*i*u,n[3]=s*o*u-r*i*a):t==="ZYX"?(n[0]=r*o*u-s*i*a,n[1]=s*i*u+r*o*a,n[2]=s*o*a-r*i*u,n[3]=s*o*u+r*i*a):t==="YZX"?(n[0]=r*o*u+s*i*a,n[1]=s*i*u+r*o*a,n[2]=s*o*a-r*i*u,n[3]=s*o*u-r*i*a):t==="XZY"&&(n[0]=r*o*u-s*i*a,n[1]=s*i*u-r*o*a,n[2]=s*o*a+r*i*u,n[3]=s*o*u+r*i*a),n}const gU=nU,yU=rU,xU=iU,bU=sU;class wU extends Array{constructor(e=0,t=0,r=0,s=1){return super(e,t,r,s),this.onChange=()=>{},this}get x(){return this[0]}get y(){return this[1]}get z(){return this[2]}get w(){return this[3]}set x(e){this[0]=e,this.onChange()}set y(e){this[1]=e,this.onChange()}set z(e){this[2]=e,this.onChange()}set w(e){this[3]=e,this.onChange()}identity(){return oU(this),this.onChange(),this}set(e,t,r,s){return e.length?this.copy(e):(yU(this,e,t,r,s),this.onChange(),this)}rotateX(e){return uU(this,this,e),this.onChange(),this}rotateY(e){return lU(this,this,e),this.onChange(),this}rotateZ(e){return cU(this,this,e),this.onChange(),this}inverse(e=this){return dU(this,e),this.onChange(),this}conjugate(e=this){return pU(this,e),this.onChange(),this}copy(e){return gU(this,e),this.onChange(),this}normalize(e=this){return bU(this,e),this.onChange(),this}multiply(e,t){return t?km(this,e,t):km(this,this,e),this.onChange(),this}dot(e){return xU(this,e)}fromMatrix3(e){return fU(this,e),this.onChange(),this}fromEuler(e){return mU(this,e,e.order),this}fromAxisAngle(e,t){return aU(this,e,t),this.onChange(),this}slerp(e,t){return hU(this,this,e,t),this.onChange(),this}fromArray(e,t=0){return this[0]=e[t],this[1]=e[t+1],this[2]=e[t+2],this[3]=e[t+3],this.onChange(),this}toArray(e=[],t=0){return e[t]=this[0],e[t+1]=this[1],e[t+2]=this[2],e[t+3]=this[3],e}}const vU=1e-6;function $U(n,e){return n[0]=e[0],n[1]=e[1],n[2]=e[2],n[3]=e[3],n[4]=e[4],n[5]=e[5],n[6]=e[6],n[7]=e[7],n[8]=e[8],n[9]=e[9],n[10]=e[10],n[11]=e[11],n[12]=e[12],n[13]=e[13],n[14]=e[14],n[15]=e[15],n}function SU(n,e,t,r,s,i,o,a,u,l,c,h,d,p,m,y,g){return n[0]=e,n[1]=t,n[2]=r,n[3]=s,n[4]=i,n[5]=o,n[6]=a,n[7]=u,n[8]=l,n[9]=c,n[10]=h,n[11]=d,n[12]=p,n[13]=m,n[14]=y,n[15]=g,n}function TU(n){return n[0]=1,n[1]=0,n[2]=0,n[3]=0,n[4]=0,n[5]=1,n[6]=0,n[7]=0,n[8]=0,n[9]=0,n[10]=1,n[11]=0,n[12]=0,n[13]=0,n[14]=0,n[15]=1,n}function CU(n,e){let t=e[0],r=e[1],s=e[2],i=e[3],o=e[4],a=e[5],u=e[6],l=e[7],c=e[8],h=e[9],d=e[10],p=e[11],m=e[12],y=e[13],g=e[14],x=e[15],$=t*a-r*o,C=t*u-s*o,S=t*l-i*o,I=r*u-s*a,A=r*l-i*a,L=s*l-i*u,P=c*y-h*m,M=c*g-d*m,U=c*x-p*m,V=h*g-d*y,j=h*x-p*y,K=d*x-p*g,H=$*K-C*j+S*V+I*U-A*M+L*P;return H?(H=1/H,n[0]=(a*K-u*j+l*V)*H,n[1]=(s*j-r*K-i*V)*H,n[2]=(y*L-g*A+x*I)*H,n[3]=(d*A-h*L-p*I)*H,n[4]=(u*U-o*K-l*M)*H,n[5]=(t*K-s*U+i*M)*H,n[6]=(g*S-m*L-x*C)*H,n[7]=(c*L-d*S+p*C)*H,n[8]=(o*j-a*U+l*P)*H,n[9]=(r*U-t*j-i*P)*H,n[10]=(m*A-y*S+x*$)*H,n[11]=(h*S-c*A-p*$)*H,n[12]=(a*M-o*V-u*P)*H,n[13]=(t*V-r*M+s*P)*H,n[14]=(y*C-m*I-g*$)*H,n[15]=(c*I-h*C+d*$)*H,n):null}function EU(n){let e=n[0],t=n[1],r=n[2],s=n[3],i=n[4],o=n[5],a=n[6],u=n[7],l=n[8],c=n[9],h=n[10],d=n[11],p=n[12],m=n[13],y=n[14],g=n[15],x=e*o-t*i,$=e*a-r*i,C=e*u-s*i,S=t*a-r*o,I=t*u-s*o,A=r*u-s*a,L=l*m-c*p,P=l*y-h*p,M=l*g-d*p,U=c*y-h*m,V=c*g-d*m,j=h*g-d*y;return x*j-$*V+C*U+S*M-I*P+A*L}function _m(n,e,t){let r=e[0],s=e[1],i=e[2],o=e[3],a=e[4],u=e[5],l=e[6],c=e[7],h=e[8],d=e[9],p=e[10],m=e[11],y=e[12],g=e[13],x=e[14],$=e[15],C=t[0],S=t[1],I=t[2],A=t[3];return n[0]=C*r+S*a+I*h+A*y,n[1]=C*s+S*u+I*d+A*g,n[2]=C*i+S*l+I*p+A*x,n[3]=C*o+S*c+I*m+A*$,C=t[4],S=t[5],I=t[6],A=t[7],n[4]=C*r+S*a+I*h+A*y,n[5]=C*s+S*u+I*d+A*g,n[6]=C*i+S*l+I*p+A*x,n[7]=C*o+S*c+I*m+A*$,C=t[8],S=t[9],I=t[10],A=t[11],n[8]=C*r+S*a+I*h+A*y,n[9]=C*s+S*u+I*d+A*g,n[10]=C*i+S*l+I*p+A*x,n[11]=C*o+S*c+I*m+A*$,C=t[12],S=t[13],I=t[14],A=t[15],n[12]=C*r+S*a+I*h+A*y,n[13]=C*s+S*u+I*d+A*g,n[14]=C*i+S*l+I*p+A*x,n[15]=C*o+S*c+I*m+A*$,n}function NU(n,e,t){let r=t[0],s=t[1],i=t[2],o,a,u,l,c,h,d,p,m,y,g,x;return e===n?(n[12]=e[0]*r+e[4]*s+e[8]*i+e[12],n[13]=e[1]*r+e[5]*s+e[9]*i+e[13],n[14]=e[2]*r+e[6]*s+e[10]*i+e[14],n[15]=e[3]*r+e[7]*s+e[11]*i+e[15]):(o=e[0],a=e[1],u=e[2],l=e[3],c=e[4],h=e[5],d=e[6],p=e[7],m=e[8],y=e[9],g=e[10],x=e[11],n[0]=o,n[1]=a,n[2]=u,n[3]=l,n[4]=c,n[5]=h,n[6]=d,n[7]=p,n[8]=m,n[9]=y,n[10]=g,n[11]=x,n[12]=o*r+c*s+m*i+e[12],n[13]=a*r+h*s+y*i+e[13],n[14]=u*r+d*s+g*i+e[14],n[15]=l*r+p*s+x*i+e[15]),n}function IU(n,e,t){let r=t[0],s=t[1],i=t[2];return n[0]=e[0]*r,n[1]=e[1]*r,n[2]=e[2]*r,n[3]=e[3]*r,n[4]=e[4]*s,n[5]=e[5]*s,n[6]=e[6]*s,n[7]=e[7]*s,n[8]=e[8]*i,n[9]=e[9]*i,n[10]=e[10]*i,n[11]=e[11]*i,n[12]=e[12],n[13]=e[13],n[14]=e[14],n[15]=e[15],n}function kU(n,e,t,r){let s=r[0],i=r[1],o=r[2],a=Math.hypot(s,i,o),u,l,c,h,d,p,m,y,g,x,$,C,S,I,A,L,P,M,U,V,j,K,H,ne;return Math.abs(a)<vU?null:(a=1/a,s*=a,i*=a,o*=a,u=Math.sin(t),l=Math.cos(t),c=1-l,h=e[0],d=e[1],p=e[2],m=e[3],y=e[4],g=e[5],x=e[6],$=e[7],C=e[8],S=e[9],I=e[10],A=e[11],L=s*s*c+l,P=i*s*c+o*u,M=o*s*c-i*u,U=s*i*c-o*u,V=i*i*c+l,j=o*i*c+s*u,K=s*o*c+i*u,H=i*o*c-s*u,ne=o*o*c+l,n[0]=h*L+y*P+C*M,n[1]=d*L+g*P+S*M,n[2]=p*L+x*P+I*M,n[3]=m*L+$*P+A*M,n[4]=h*U+y*V+C*j,n[5]=d*U+g*V+S*j,n[6]=p*U+x*V+I*j,n[7]=m*U+$*V+A*j,n[8]=h*K+y*H+C*ne,n[9]=d*K+g*H+S*ne,n[10]=p*K+x*H+I*ne,n[11]=m*K+$*H+A*ne,e!==n&&(n[12]=e[12],n[13]=e[13],n[14]=e[14],n[15]=e[15]),n)}function _U(n,e){return n[0]=e[12],n[1]=e[13],n[2]=e[14],n}function $b(n,e){let t=e[0],r=e[1],s=e[2],i=e[4],o=e[5],a=e[6],u=e[8],l=e[9],c=e[10];return n[0]=Math.hypot(t,r,s),n[1]=Math.hypot(i,o,a),n[2]=Math.hypot(u,l,c),n}function RU(n){let e=n[0],t=n[1],r=n[2],s=n[4],i=n[5],o=n[6],a=n[8],u=n[9],l=n[10];const c=e*e+t*t+r*r,h=s*s+i*i+o*o,d=a*a+u*u+l*l;return Math.sqrt(Math.max(c,h,d))}const AU=function(){const n=[0,0,0];return function(e,t){let r=n;$b(r,t);let s=1/r[0],i=1/r[1],o=1/r[2],a=t[0]*s,u=t[1]*i,l=t[2]*o,c=t[4]*s,h=t[5]*i,d=t[6]*o,p=t[8]*s,m=t[9]*i,y=t[10]*o,g=a+h+y,x=0;return g>0?(x=Math.sqrt(g+1)*2,e[3]=.25*x,e[0]=(d-m)/x,e[1]=(p-l)/x,e[2]=(u-c)/x):a>h&&a>y?(x=Math.sqrt(1+a-h-y)*2,e[3]=(d-m)/x,e[0]=.25*x,e[1]=(u+c)/x,e[2]=(p+l)/x):h>y?(x=Math.sqrt(1+h-a-y)*2,e[3]=(p-l)/x,e[0]=(u+c)/x,e[1]=.25*x,e[2]=(d+m)/x):(x=Math.sqrt(1+y-a-h)*2,e[3]=(u-c)/x,e[0]=(p+l)/x,e[1]=(d+m)/x,e[2]=.25*x),e}}();function OU(n,e,t,r){let s=e[0],i=e[1],o=e[2],a=e[3],u=s+s,l=i+i,c=o+o,h=s*u,d=s*l,p=s*c,m=i*l,y=i*c,g=o*c,x=a*u,$=a*l,C=a*c,S=r[0],I=r[1],A=r[2];return n[0]=(1-(m+g))*S,n[1]=(d+C)*S,n[2]=(p-$)*S,n[3]=0,n[4]=(d-C)*I,n[5]=(1-(h+g))*I,n[6]=(y+x)*I,n[7]=0,n[8]=(p+$)*A,n[9]=(y-x)*A,n[10]=(1-(h+m))*A,n[11]=0,n[12]=t[0],n[13]=t[1],n[14]=t[2],n[15]=1,n}function DU(n,e){let t=e[0],r=e[1],s=e[2],i=e[3],o=t+t,a=r+r,u=s+s,l=t*o,c=r*o,h=r*a,d=s*o,p=s*a,m=s*u,y=i*o,g=i*a,x=i*u;return n[0]=1-h-m,n[1]=c+x,n[2]=d-g,n[3]=0,n[4]=c-x,n[5]=1-l-m,n[6]=p+y,n[7]=0,n[8]=d+g,n[9]=p-y,n[10]=1-l-h,n[11]=0,n[12]=0,n[13]=0,n[14]=0,n[15]=1,n}function FU(n,e,t,r,s){let i=1/Math.tan(e/2),o=1/(r-s);return n[0]=i/t,n[1]=0,n[2]=0,n[3]=0,n[4]=0,n[5]=i,n[6]=0,n[7]=0,n[8]=0,n[9]=0,n[10]=(s+r)*o,n[11]=-1,n[12]=0,n[13]=0,n[14]=2*s*r*o,n[15]=0,n}function PU(n,e,t,r,s,i,o){let a=1/(e-t),u=1/(r-s),l=1/(i-o);return n[0]=-2*a,n[1]=0,n[2]=0,n[3]=0,n[4]=0,n[5]=-2*u,n[6]=0,n[7]=0,n[8]=0,n[9]=0,n[10]=2*l,n[11]=0,n[12]=(e+t)*a,n[13]=(s+r)*u,n[14]=(o+i)*l,n[15]=1,n}function LU(n,e,t,r){let s=e[0],i=e[1],o=e[2],a=r[0],u=r[1],l=r[2],c=s-t[0],h=i-t[1],d=o-t[2],p=c*c+h*h+d*d;p===0?d=1:(p=1/Math.sqrt(p),c*=p,h*=p,d*=p);let m=u*d-l*h,y=l*c-a*d,g=a*h-u*c;return p=m*m+y*y+g*g,p===0&&(l?a+=1e-6:u?l+=1e-6:u+=1e-6,m=u*d-l*h,y=l*c-a*d,g=a*h-u*c,p=m*m+y*y+g*g),p=1/Math.sqrt(p),m*=p,y*=p,g*=p,n[0]=m,n[1]=y,n[2]=g,n[3]=0,n[4]=h*g-d*y,n[5]=d*m-c*g,n[6]=c*y-h*m,n[7]=0,n[8]=c,n[9]=h,n[10]=d,n[11]=0,n[12]=s,n[13]=i,n[14]=o,n[15]=1,n}class $o extends Array{constructor(e=1,t=0,r=0,s=0,i=0,o=1,a=0,u=0,l=0,c=0,h=1,d=0,p=0,m=0,y=0,g=1){return super(e,t,r,s,i,o,a,u,l,c,h,d,p,m,y,g),this}get x(){return this[12]}get y(){return this[13]}get z(){return this[14]}get w(){return this[15]}set x(e){this[12]=e}set y(e){this[13]=e}set z(e){this[14]=e}set w(e){this[15]=e}set(e,t,r,s,i,o,a,u,l,c,h,d,p,m,y,g){return e.length?this.copy(e):(SU(this,e,t,r,s,i,o,a,u,l,c,h,d,p,m,y,g),this)}translate(e,t=this){return NU(this,t,e),this}rotate(e,t,r=this){return kU(this,r,e,t),this}scale(e,t=this){return IU(this,t,typeof e=="number"?[e,e,e]:e),this}multiply(e,t){return t?_m(this,e,t):_m(this,this,e),this}identity(){return TU(this),this}copy(e){return $U(this,e),this}fromPerspective({fov:e,aspect:t,near:r,far:s}={}){return FU(this,e,t,r,s),this}fromOrthogonal({left:e,right:t,bottom:r,top:s,near:i,far:o}){return PU(this,e,t,r,s,i,o),this}fromQuaternion(e){return DU(this,e),this}setPosition(e){return this.x=e[0],this.y=e[1],this.z=e[2],this}inverse(e=this){return CU(this,e),this}compose(e,t,r){return OU(this,e,t,r),this}getRotation(e){return AU(e,this),this}getTranslation(e){return _U(e,this),this}getScaling(e){return $b(e,this),this}getMaxScaleOnAxis(){return RU(this)}lookAt(e,t,r){return LU(this,e,t,r),this}determinant(){return EU(this)}fromArray(e,t=0){return this[0]=e[t],this[1]=e[t+1],this[2]=e[t+2],this[3]=e[t+3],this[4]=e[t+4],this[5]=e[t+5],this[6]=e[t+6],this[7]=e[t+7],this[8]=e[t+8],this[9]=e[t+9],this[10]=e[t+10],this[11]=e[t+11],this[12]=e[t+12],this[13]=e[t+13],this[14]=e[t+14],this[15]=e[t+15],this}toArray(e=[],t=0){return e[t]=this[0],e[t+1]=this[1],e[t+2]=this[2],e[t+3]=this[3],e[t+4]=this[4],e[t+5]=this[5],e[t+6]=this[6],e[t+7]=this[7],e[t+8]=this[8],e[t+9]=this[9],e[t+10]=this[10],e[t+11]=this[11],e[t+12]=this[12],e[t+13]=this[13],e[t+14]=this[14],e[t+15]=this[15],e}}function BU(n,e,t="YXZ"){return t==="XYZ"?(n[1]=Math.asin(Math.min(Math.max(e[8],-1),1)),Math.abs(e[8])<.99999?(n[0]=Math.atan2(-e[9],e[10]),n[2]=Math.atan2(-e[4],e[0])):(n[0]=Math.atan2(e[6],e[5]),n[2]=0)):t==="YXZ"?(n[0]=Math.asin(-Math.min(Math.max(e[9],-1),1)),Math.abs(e[9])<.99999?(n[1]=Math.atan2(e[8],e[10]),n[2]=Math.atan2(e[1],e[5])):(n[1]=Math.atan2(-e[2],e[0]),n[2]=0)):t==="ZXY"?(n[0]=Math.asin(Math.min(Math.max(e[6],-1),1)),Math.abs(e[6])<.99999?(n[1]=Math.atan2(-e[2],e[10]),n[2]=Math.atan2(-e[4],e[5])):(n[1]=0,n[2]=Math.atan2(e[1],e[0]))):t==="ZYX"?(n[1]=Math.asin(-Math.min(Math.max(e[2],-1),1)),Math.abs(e[2])<.99999?(n[0]=Math.atan2(e[6],e[10]),n[2]=Math.atan2(e[1],e[0])):(n[0]=0,n[2]=Math.atan2(-e[4],e[5]))):t==="YZX"?(n[2]=Math.asin(Math.min(Math.max(e[1],-1),1)),Math.abs(e[1])<.99999?(n[0]=Math.atan2(-e[9],e[5]),n[1]=Math.atan2(-e[2],e[0])):(n[0]=0,n[1]=Math.atan2(e[8],e[10]))):t==="XZY"&&(n[2]=Math.asin(-Math.min(Math.max(e[4],-1),1)),Math.abs(e[4])<.99999?(n[0]=Math.atan2(e[6],e[5]),n[1]=Math.atan2(e[8],e[0])):(n[0]=Math.atan2(-e[9],e[10]),n[1]=0)),n}const Rm=new $o;class MU extends Array{constructor(e=0,t=e,r=e,s="YXZ"){return super(e,t,r),this.order=s,this.onChange=()=>{},this}get x(){return this[0]}get y(){return this[1]}get z(){return this[2]}set x(e){this[0]=e,this.onChange()}set y(e){this[1]=e,this.onChange()}set z(e){this[2]=e,this.onChange()}set(e,t=e,r=e){return e.length?this.copy(e):(this[0]=e,this[1]=t,this[2]=r,this.onChange(),this)}copy(e){return this[0]=e[0],this[1]=e[1],this[2]=e[2],this.onChange(),this}reorder(e){return this.order=e,this.onChange(),this}fromRotationMatrix(e,t=this.order){return BU(this,e,t),this.onChange(),this}fromQuaternion(e,t=this.order){return Rm.fromQuaternion(e),this.fromRotationMatrix(Rm,t)}toArray(e=[],t=0){return e[t]=this[0],e[t+1]=this[1],e[t+2]=this[2],e}}class VU{constructor(){this.parent=null,this.children=[],this.visible=!0,this.matrix=new $o,this.worldMatrix=new $o,this.matrixAutoUpdate=!0,this.position=new rn,this.quaternion=new wU,this.scale=new rn(1),this.rotation=new MU,this.up=new rn(0,1,0),this.rotation.onChange=()=>this.quaternion.fromEuler(this.rotation),this.quaternion.onChange=()=>this.rotation.fromQuaternion(this.quaternion)}setParent(e,t=!0){this.parent&&e!==this.parent&&this.parent.removeChild(this,!1),this.parent=e,t&&e&&e.addChild(this,!1)}addChild(e,t=!0){~this.children.indexOf(e)||this.children.push(e),t&&e.setParent(this,!1)}removeChild(e,t=!0){~this.children.indexOf(e)&&this.children.splice(this.children.indexOf(e),1),t&&e.setParent(null,!1)}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.worldMatrixNeedsUpdate||e)&&(this.parent===null?this.worldMatrix.copy(this.matrix):this.worldMatrix.multiply(this.parent.worldMatrix,this.matrix),this.worldMatrixNeedsUpdate=!1,e=!0);for(let t=0,r=this.children.length;t<r;t++)this.children[t].updateMatrixWorld(e)}updateMatrix(){this.matrix.compose(this.quaternion,this.position,this.scale),this.worldMatrixNeedsUpdate=!0}traverse(e){if(!e(this))for(let t=0,r=this.children.length;t<r;t++)this.children[t].traverse(e)}decompose(){this.matrix.getTranslation(this.position),this.matrix.getRotation(this.quaternion),this.matrix.getScaling(this.scale),this.rotation.fromQuaternion(this.quaternion)}lookAt(e,t=!1){t?this.matrix.lookAt(this.position,e,this.up):this.matrix.lookAt(e,this.position,this.up),this.matrix.getRotation(this.quaternion),this.rotation.fromQuaternion(this.quaternion)}}function UU(n,e){return n[0]=e[0],n[1]=e[1],n[2]=e[2],n[3]=e[4],n[4]=e[5],n[5]=e[6],n[6]=e[8],n[7]=e[9],n[8]=e[10],n}function zU(n,e){let t=e[0],r=e[1],s=e[2],i=e[3],o=t+t,a=r+r,u=s+s,l=t*o,c=r*o,h=r*a,d=s*o,p=s*a,m=s*u,y=i*o,g=i*a,x=i*u;return n[0]=1-h-m,n[3]=c-x,n[6]=d+g,n[1]=c+x,n[4]=1-l-m,n[7]=p-y,n[2]=d-g,n[5]=p+y,n[8]=1-l-h,n}function WU(n,e){return n[0]=e[0],n[1]=e[1],n[2]=e[2],n[3]=e[3],n[4]=e[4],n[5]=e[5],n[6]=e[6],n[7]=e[7],n[8]=e[8],n}function GU(n,e,t,r,s,i,o,a,u,l){return n[0]=e,n[1]=t,n[2]=r,n[3]=s,n[4]=i,n[5]=o,n[6]=a,n[7]=u,n[8]=l,n}function HU(n){return n[0]=1,n[1]=0,n[2]=0,n[3]=0,n[4]=1,n[5]=0,n[6]=0,n[7]=0,n[8]=1,n}function jU(n,e){let t=e[0],r=e[1],s=e[2],i=e[3],o=e[4],a=e[5],u=e[6],l=e[7],c=e[8],h=c*o-a*l,d=-c*i+a*u,p=l*i-o*u,m=t*h+r*d+s*p;return m?(m=1/m,n[0]=h*m,n[1]=(-c*r+s*l)*m,n[2]=(a*r-s*o)*m,n[3]=d*m,n[4]=(c*t-s*u)*m,n[5]=(-a*t+s*i)*m,n[6]=p*m,n[7]=(-l*t+r*u)*m,n[8]=(o*t-r*i)*m,n):null}function Am(n,e,t){let r=e[0],s=e[1],i=e[2],o=e[3],a=e[4],u=e[5],l=e[6],c=e[7],h=e[8],d=t[0],p=t[1],m=t[2],y=t[3],g=t[4],x=t[5],$=t[6],C=t[7],S=t[8];return n[0]=d*r+p*o+m*l,n[1]=d*s+p*a+m*c,n[2]=d*i+p*u+m*h,n[3]=y*r+g*o+x*l,n[4]=y*s+g*a+x*c,n[5]=y*i+g*u+x*h,n[6]=$*r+C*o+S*l,n[7]=$*s+C*a+S*c,n[8]=$*i+C*u+S*h,n}function qU(n,e,t){let r=e[0],s=e[1],i=e[2],o=e[3],a=e[4],u=e[5],l=e[6],c=e[7],h=e[8],d=t[0],p=t[1];return n[0]=r,n[1]=s,n[2]=i,n[3]=o,n[4]=a,n[5]=u,n[6]=d*r+p*o+l,n[7]=d*s+p*a+c,n[8]=d*i+p*u+h,n}function KU(n,e,t){let r=e[0],s=e[1],i=e[2],o=e[3],a=e[4],u=e[5],l=e[6],c=e[7],h=e[8],d=Math.sin(t),p=Math.cos(t);return n[0]=p*r+d*o,n[1]=p*s+d*a,n[2]=p*i+d*u,n[3]=p*o-d*r,n[4]=p*a-d*s,n[5]=p*u-d*i,n[6]=l,n[7]=c,n[8]=h,n}function XU(n,e,t){let r=t[0],s=t[1];return n[0]=r*e[0],n[1]=r*e[1],n[2]=r*e[2],n[3]=s*e[3],n[4]=s*e[4],n[5]=s*e[5],n[6]=e[6],n[7]=e[7],n[8]=e[8],n}function YU(n,e){let t=e[0],r=e[1],s=e[2],i=e[3],o=e[4],a=e[5],u=e[6],l=e[7],c=e[8],h=e[9],d=e[10],p=e[11],m=e[12],y=e[13],g=e[14],x=e[15],$=t*a-r*o,C=t*u-s*o,S=t*l-i*o,I=r*u-s*a,A=r*l-i*a,L=s*l-i*u,P=c*y-h*m,M=c*g-d*m,U=c*x-p*m,V=h*g-d*y,j=h*x-p*y,K=d*x-p*g,H=$*K-C*j+S*V+I*U-A*M+L*P;return H?(H=1/H,n[0]=(a*K-u*j+l*V)*H,n[1]=(u*U-o*K-l*M)*H,n[2]=(o*j-a*U+l*P)*H,n[3]=(s*j-r*K-i*V)*H,n[4]=(t*K-s*U+i*M)*H,n[5]=(r*U-t*j-i*P)*H,n[6]=(y*L-g*A+x*I)*H,n[7]=(g*S-m*L-x*C)*H,n[8]=(m*A-y*S+x*$)*H,n):null}class QU extends Array{constructor(e=1,t=0,r=0,s=0,i=1,o=0,a=0,u=0,l=1){return super(e,t,r,s,i,o,a,u,l),this}set(e,t,r,s,i,o,a,u,l){return e.length?this.copy(e):(GU(this,e,t,r,s,i,o,a,u,l),this)}translate(e,t=this){return qU(this,t,e),this}rotate(e,t=this){return KU(this,t,e),this}scale(e,t=this){return XU(this,t,e),this}multiply(e,t){return t?Am(this,e,t):Am(this,this,e),this}identity(){return HU(this),this}copy(e){return WU(this,e),this}fromMatrix4(e){return UU(this,e),this}fromQuaternion(e){return zU(this,e),this}fromBasis(e,t,r){return this.set(e[0],e[1],e[2],t[0],t[1],t[2],r[0],r[1],r[2]),this}inverse(e=this){return jU(this,e),this}getNormalMatrix(e){return YU(this,e),this}}let ZU=0;class JU extends VU{constructor(e,{geometry:t,program:r,mode:s=e.TRIANGLES,frustumCulled:i=!0,renderOrder:o=0}={}){super(),e.canvas||console.error("gl not passed as first argument to Mesh"),this.gl=e,this.id=ZU++,this.geometry=t,this.program=r,this.mode=s,this.frustumCulled=i,this.renderOrder=o,this.modelViewMatrix=new $o,this.normalMatrix=new QU,this.beforeRenderCallbacks=[],this.afterRenderCallbacks=[]}onBeforeRender(e){return this.beforeRenderCallbacks.push(e),this}onAfterRender(e){return this.afterRenderCallbacks.push(e),this}draw({camera:e}={}){this.beforeRenderCallbacks.forEach(r=>r&&r({mesh:this,camera:e})),e&&(this.program.uniforms.modelMatrix||Object.assign(this.program.uniforms,{modelMatrix:{value:null},viewMatrix:{value:null},modelViewMatrix:{value:null},normalMatrix:{value:null},projectionMatrix:{value:null},cameraPosition:{value:null}}),this.program.uniforms.projectionMatrix.value=e.projectionMatrix,this.program.uniforms.cameraPosition.value=e.worldPosition,this.program.uniforms.viewMatrix.value=e.viewMatrix,this.modelViewMatrix.multiply(e.viewMatrix,this.worldMatrix),this.normalMatrix.getNormalMatrix(this.modelViewMatrix),this.program.uniforms.modelMatrix.value=this.worldMatrix,this.program.uniforms.modelViewMatrix.value=this.modelViewMatrix,this.program.uniforms.normalMatrix.value=this.normalMatrix);let t=this.program.cullFace&&this.worldMatrix.determinant()<0;this.program.use({flipFaces:t}),this.geometry.draw({mode:this.mode,program:this.program}),this.afterRenderCallbacks.forEach(r=>r&&r({mesh:this,camera:e}))}}const Om=new Uint8Array(4);function Dm(n){return(n&n-1)===0}let ez=1;class Fm{constructor(e,{image:t,target:r=e.TEXTURE_2D,type:s=e.UNSIGNED_BYTE,format:i=e.RGBA,internalFormat:o=i,wrapS:a=e.CLAMP_TO_EDGE,wrapT:u=e.CLAMP_TO_EDGE,generateMipmaps:l=!0,minFilter:c=l?e.NEAREST_MIPMAP_LINEAR:e.LINEAR,magFilter:h=e.LINEAR,premultiplyAlpha:d=!1,unpackAlignment:p=4,flipY:m=r==e.TEXTURE_2D,anisotropy:y=0,level:g=0,width:x,height:$=x}={}){this.gl=e,this.id=ez++,this.image=t,this.target=r,this.type=s,this.format=i,this.internalFormat=o,this.minFilter=c,this.magFilter=h,this.wrapS=a,this.wrapT=u,this.generateMipmaps=l,this.premultiplyAlpha=d,this.unpackAlignment=p,this.flipY=m,this.anisotropy=Math.min(y,this.gl.renderer.parameters.maxAnisotropy),this.level=g,this.width=x,this.height=$,this.texture=this.gl.createTexture(),this.store={image:null},this.glState=this.gl.renderer.state,this.state={},this.state.minFilter=this.gl.NEAREST_MIPMAP_LINEAR,this.state.magFilter=this.gl.LINEAR,this.state.wrapS=this.gl.REPEAT,this.state.wrapT=this.gl.REPEAT,this.state.anisotropy=0}bind(){this.glState.textureUnits[this.glState.activeTextureUnit]!==this.id&&(this.gl.bindTexture(this.target,this.texture),this.glState.textureUnits[this.glState.activeTextureUnit]=this.id)}update(e=0){const t=!(this.image===this.store.image&&!this.needsUpdate);if((t||this.glState.textureUnits[e]!==this.id)&&(this.gl.renderer.activeTexture(e),this.bind()),!!t){if(this.needsUpdate=!1,this.flipY!==this.glState.flipY&&(this.gl.pixelStorei(this.gl.UNPACK_FLIP_Y_WEBGL,this.flipY),this.glState.flipY=this.flipY),this.premultiplyAlpha!==this.glState.premultiplyAlpha&&(this.gl.pixelStorei(this.gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL,this.premultiplyAlpha),this.glState.premultiplyAlpha=this.premultiplyAlpha),this.unpackAlignment!==this.glState.unpackAlignment&&(this.gl.pixelStorei(this.gl.UNPACK_ALIGNMENT,this.unpackAlignment),this.glState.unpackAlignment=this.unpackAlignment),this.minFilter!==this.state.minFilter&&(this.gl.texParameteri(this.target,this.gl.TEXTURE_MIN_FILTER,this.minFilter),this.state.minFilter=this.minFilter),this.magFilter!==this.state.magFilter&&(this.gl.texParameteri(this.target,this.gl.TEXTURE_MAG_FILTER,this.magFilter),this.state.magFilter=this.magFilter),this.wrapS!==this.state.wrapS&&(this.gl.texParameteri(this.target,this.gl.TEXTURE_WRAP_S,this.wrapS),this.state.wrapS=this.wrapS),this.wrapT!==this.state.wrapT&&(this.gl.texParameteri(this.target,this.gl.TEXTURE_WRAP_T,this.wrapT),this.state.wrapT=this.wrapT),this.anisotropy&&this.anisotropy!==this.state.anisotropy&&(this.gl.texParameterf(this.target,this.gl.renderer.getExtension("EXT_texture_filter_anisotropic").TEXTURE_MAX_ANISOTROPY_EXT,this.anisotropy),this.state.anisotropy=this.anisotropy),this.image){if(this.image.width&&(this.width=this.image.width,this.height=this.image.height),this.target===this.gl.TEXTURE_CUBE_MAP)for(let r=0;r<6;r++)this.gl.texImage2D(this.gl.TEXTURE_CUBE_MAP_POSITIVE_X+r,this.level,this.internalFormat,this.format,this.type,this.image[r]);else if(ArrayBuffer.isView(this.image))this.gl.texImage2D(this.target,this.level,this.internalFormat,this.width,this.height,0,this.format,this.type,this.image);else if(this.image.isCompressedTexture)for(let r=0;r<this.image.length;r++)this.gl.compressedTexImage2D(this.target,r,this.internalFormat,this.image[r].width,this.image[r].height,0,this.image[r].data);else this.gl.texImage2D(this.target,this.level,this.internalFormat,this.format,this.type,this.image);this.generateMipmaps&&(!this.gl.renderer.isWebgl2&&(!Dm(this.image.width)||!Dm(this.image.height))?(this.generateMipmaps=!1,this.wrapS=this.wrapT=this.gl.CLAMP_TO_EDGE,this.minFilter=this.gl.LINEAR):this.gl.generateMipmap(this.target)),this.onUpdate&&this.onUpdate()}else if(this.target===this.gl.TEXTURE_CUBE_MAP)for(let r=0;r<6;r++)this.gl.texImage2D(this.gl.TEXTURE_CUBE_MAP_POSITIVE_X+r,0,this.gl.RGBA,1,1,0,this.gl.RGBA,this.gl.UNSIGNED_BYTE,Om);else this.width?this.gl.texImage2D(this.target,this.level,this.internalFormat,this.width,this.height,0,this.format,this.type,null):this.gl.texImage2D(this.target,0,this.gl.RGBA,1,1,0,this.gl.RGBA,this.gl.UNSIGNED_BYTE,Om);this.store.image=this.image}}}const Pm={black:"#000000",white:"#ffffff",red:"#ff0000",green:"#00ff00",blue:"#0000ff",fuchsia:"#ff00ff",cyan:"#00ffff",yellow:"#ffff00",orange:"#ff8000"};function Lm(n){n.length===4&&(n=n[0]+n[1]+n[1]+n[2]+n[2]+n[3]+n[3]);const e=/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(n);return e||console.warn(`Unable to convert hex string ${n} to rgb values`),[parseInt(e[1],16)/255,parseInt(e[2],16)/255,parseInt(e[3],16)/255]}function tz(n){return n=parseInt(n),[(n>>16&255)/255,(n>>8&255)/255,(n&255)/255]}function Bm(n){return n===void 0?[0,0,0]:arguments.length===3?arguments:isNaN(n)?n[0]==="#"?Lm(n):Pm[n.toLowerCase()]?Lm(Pm[n.toLowerCase()]):(console.warn("Color format not recognised"),[0,0,0]):tz(n)}class nz extends Array{constructor(e){return Array.isArray(e)?super(...e):super(...Bm(...arguments))}get r(){return this[0]}get g(){return this[1]}get b(){return this[2]}set r(e){this[0]=e}set g(e){this[1]=e}set b(e){this[2]=e}set(e){return Array.isArray(e)?this.copy(e):this.copy(Bm(...arguments))}copy(e){return this[0]=e[0],this[1]=e[1],this[2]=e[2],this}}class rz extends KV{constructor(e,{attributes:t={}}={}){Object.assign(t,{position:{size:2,data:new Float32Array([-1,-1,3,-1,-1,3])},uv:{size:2,data:new Float32Array([0,0,2,0,0,2])}}),super(e,t)}}const sz=`attribute vec2 uv;
attribute vec2 position;
varying vec2 vUv;
void main() {
  vUv = uv;
  gl_Position = vec4(position, 0, 1);
}`,iz=`precision highp float;

uniform float uTime;
uniform vec3 uColor;
uniform sampler2D tex1; //mask
uniform sampler2D tex2; // human
varying vec2 vUv;

float rand(vec2 co){
    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);
}

void main() {
    vec4 mask = texture2D(tex1, vUv);
    vec4 invertMask = vec4(1.) - mask;

    vec4 peopleTex = texture2D(tex2, vUv);
    vec2 randomUv = vec2(rand(vUv.xy + uTime), rand(vUv.yx + uTime));
    vec4 randomPeopleTex = texture2D(tex2, randomUv);

    vec4 maskedImage = peopleTex * mask;
    vec4 noisePeople = randomPeopleTex * invertMask;
    vec4 noiseImage = maskedImage + noisePeople;

    vec4 finalColor = mix(peopleTex,noiseImage, clamp((2. * abs(cos(uTime * 42.2) + sin(uTime * 14.1))) , 0., 1.));
    gl_FragColor = finalColor;
}`;class oz{constructor(e){this.renderer=new tU({canvas:e,width:e.width,height:e.height,alpha:!0,antialias:!0}),this.gl=this.renderer.gl,this.geometry=new rz(this.gl);const t={generateMipmaps:!1,width:e.width,height:e.height};this.textures=[new Fm(this.gl,t),new Fm(this.gl,t)],this.program=new YV(this.gl,{vertex:sz,fragment:iz,uniforms:{uTime:{value:0},uColor:{value:new nz(.3,.2,.5)},tex1:{value:this.textures[0]},tex2:{value:this.textures[1]}}}),this.mesh=new JU(this.gl,{geometry:this.geometry,program:this.program}),this.time=0,this.images={}}setSize(e,t){this.renderer.setSize(e,t),this.gl.canvas.style.width="100%",this.gl.canvas.style.height="100%"}setTextureImage(e,t){this.textures[t].image=e}update(e){this.time+=e,this.program.uniforms.uTime.value=this.time}draw(){this.renderer.render({scene:this.mesh})}}const az={isHidden:"is-hidden"};class uz{constructor(e){this.$root=document.querySelector(e),this.init()}init(){this.show()}show(){this.$root.classList.remove(az.isHidden)}hide(){this.$root.style.display="none"}}const lz=async()=>{const n=new RV;return await n.init(),n},cz=()=>new Promise(n=>{const e=new Image;e.onload=()=>{n(e)};const t=Math.floor(Math.random()*9);e.src=`./assets/image_${t}.jpg`}),hz=async()=>{const n=Me.getInstance(),e=await lz(),t=await cz(),r=document.querySelector(".js-canvas");r.width=t.naturalWidth,r.height=t.naturalHeight;const s=new oz(r),i=await e.getPeopleMask(t);s.setTextureImage(i,0),s.setTextureImage(t,1);const o=({time:u,deltaTime:l})=>{s.update(l),s.draw()};n.add({id:"noise",update:o}),n.start(),new uz(".js-loading").hide()};window.addEventListener("load",()=>{hz()});
