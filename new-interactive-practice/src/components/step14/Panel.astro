---

---


<div class="panel js-panel"></div>

<style lang="scss">
  .panel {
    width: 100%;
    height: 100%;
    background-color: #fff;
    // border: 1px solid #000;
    position: relative;
  }
</style>
<style is:global>
  .is-active .panel {
    z-index: var(--distance);
    filter: drop-shadow(calc(var(--toX) * 1px) calc(var(--toY) * 1px) calc(5px - var(--distance) / 100 * 2px) rgba(0, 0, 0, calc(var(--distance) / 100 * 0.8)));
  }
</style>

<script>
const panels = document.querySelectorAll<HTMLElement>('.js-panel');
let isActive = false;

function setShadow(index: number) {
  const clickedIndexNum = index;

  panels.forEach((panel, index) => {
    const row1 = Math.floor(index / 10);
    const col1 = index % 10;
    const row2 = Math.floor(clickedIndexNum / 10);
    const col2 = clickedIndexNum % 10;
    const x = col1 - col2;
    const y = row1 - row2;
    const distance = Math.abs(x) + Math.abs(y);
    panel.style.setProperty('--distance',  `${100 - distance}`);
    panel.style.setProperty('--toX',  `${x}`);
    panel.style.setProperty('--toY', `${y}`);
  })
}

function activate(e: Event) {
  if(isActive) return;
  const target = (e.currentTarget as HTMLElement)
  const index = target?.dataset?.index;
  if(!index) return;

  const parent = target.parentElement;
  parent?.classList.add('is-active');

  setShadow(parseInt(index, 10));

  isActive = true;
}

function inactivate(e: Event) {
  if(!isActive) return;
  const target = (e.currentTarget as HTMLElement)
  const index = target?.dataset?.index;
  if(!index) return;

  const parent = target.parentElement;
  parent?.classList.remove('is-active');

  panels.forEach((panel, index) => {
    panel.style.setProperty('--distance', '');
    panel.style.setProperty('--toX', '');
    panel.style.setProperty('--toY', '');
  })

  isActive = false;
}


function handleClickPanel(e: Event) {
  if (isActive) inactivate(e)
  else  activate(e);
}

function handleMouseEnter(e: Event) {
  if(!isActive) return;
  const target = (e.currentTarget as HTMLElement)
  const index = target?.dataset?.index;
  if(!index) return;
  setShadow(parseInt(index, 10));
}

function bind() {
  panels.forEach((panel, index) => {
    panel.addEventListener('click', handleClickPanel);
    panel.addEventListener('mouseenter', handleMouseEnter);
    panel.dataset.index = `${index}`;
  })
}

function init() {
  bind();
}

init();

</script>