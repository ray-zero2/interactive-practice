// @use "sass:math";
// @use "sass:color";

$wordColor: #eee;

:root {
  --bgColor: #1c1c20;
  --wordColor: #{$wordColor};
  font-family: 'Roboto', sans-serif;
}

* {
  &, &::before, &::after {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
  }
}

body {
  background-color: var(--bgColor);
  color: var(--wordColor);
}

.main {

  [data-device="pc"] & {
    position: relative;

    &::before {
      content: '';
      width: 100%;
      height: var(--content-height);
      display: block;
    }

    &__inner {
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
    }

    &__content {
      width: 100%;
      // min-height: 100vh;
      will-change: transform;
    }

    .content-test {
      & > div {
        &:not(.stickySection) {
          height: 100px;
        }
        font-size: 40px;
      }
    }

    .stickySection {
      position: relative;;
      // background-color: white;
      &::before {
        content: '';
        width: 100%;
        height: var(--section-height);
        display: block;
      }
      &__content {
        position: absolute;
        width: 100%;
        height: 100vh;
        top: 0;
        left: 0;
        // background-color: red;
        // opacity: 0.3
      }
    }
  }
  [data-device="sp"] & {
    position: relative;

    &::before {
      display: none;
    }

    &__inner {
      position: relative;
      width: 100%;
    }

    .content-test {
      & > div {
        &:not(.stickySection) {
          height: 100px;
        }
        font-size: 40px;
      }
    }

    .stickySection {
      position: relative;
      height: var(--section-height);
      &::before {
        // display: none;
      }
      &__content {
        position: sticky;
        width: 100%;
        height: 100vh;
        height: 100lvh;
        top: 0;
        left: 0;
      }
    }
  }
}

.notion {
  position: relative;
  top: 1em;
}

.section1 {
  position: relative;
  overflow: hidden;
  .title1, .desc1, .desc2, .desc3, .desc4 {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
    letter-spacing: 0.01em;
  }

  .images {
    $this: '.images';
    position: absolute;
    top: 0;
    left: 0;
    display: flex;
    height: 100%;
    width: 100%;
    justify-content: center;
    align-items: center;

    & > img {
      width: 40vw;
    }

    & > p {
      padding: 10px;
      width: 40vw;
      font-size: 12px;
    }

    &-left {
      @extend #{$this};
    }
    &-right {
      @extend #{$this};
      flex-direction: row-reverse;
    }
  }
}

.loading {
  width: 100vw;
  height: 100vh;
  position:fixed;
  top: 0;
  left: 0;
  z-index: 1;
  background-color: #ddd;
  color: #333;
  display: grid;
  place-items: center;
  transition: opacity .3s ease;
  opacity: 1;

  @keyframes flash {
    0% { opacity: 1;}
    50% { opacity: 0;}
    100% { opacity: 1;}

  }

  &__text {
    font-size: 16px;
    text-transform: capitalize;
    letter-spacing: 0.2em;
    text-align: center;
    animation: flash 0.1s ease 0s infinite normal;
  }

  &.is-hidden {
    opacity: 0;
    pointer-events: none;
    visibility: hidden;
  }
}

.dom-glitch {
  position: relative;
  color: rgba($wordColor, 1);

  &__copy {
    width: 100%;
    height: 100%;
    position: absolute;
    top: 0;
    left: 0;
    pointer-events: none;
    user-select: none;
    will-change: color,transform,clip-path;
    display: none;
  }

  $this: &;
  &.is-active {
    $opacity: 0;
    color: rgba($wordColor, $opacity);

    #{$this}__copy {
      display: block;
      opacity: 1-$opacity;
    }
  }
}